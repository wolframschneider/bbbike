#!/usr/bin/env perl
# -*- perl -*-

#
# Author: Slaven Rezic
#
# Copyright (C) 2020 Slaven Rezic. All rights reserved.
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl itself.
#
# Mail: slaven@rezic.de
# WWW:  http://www.rezic.de/eserte/
#

use strict;
use warnings;
use FindBin;
use lib "$FindBin::RealBin/..", "$FindBin::RealBin/../lib";

use Getopt::Long;

use Strassen::Mapillary;

GetOptions(
	   "o=s"          => \my $out_file,
	   "start-time=s" => \my $start_time,
	   "end-time=s"   => \my $end_time,
	   'username=s@'  => \my @usernames,
	   'bbox=s'       => \my $bbox_string,
	   'city=s'       => \my $city_country,
	  )
    or die "usage?";

my $bbox;
if ($city_country) {
    my $modname = "Geography::$city_country";
    if (!eval "require $modname") {
	die "Cannot load Geography module for '$city_country'. Maybe the name is mistyped? It should be something like 'Berlin_DE'. Error message: $@\n";
    }
    my $obj = $modname->new;
    if (!$obj->can('bbox_wgs84')) {
	die "Cannot get bbox from $modname, the bbox_wgs84 method is missing\n";
    }
    $bbox = $obj->bbox_wgs84;
} elsif ($bbox_string) {
    $bbox = [ split /,/, $bbox_string ];
}

if (!$out_file) {
    die "usage: The -o option is mandatory\n";
}

my $sm = Strassen::Mapillary->new;
$sm->fetch_sequences(
		     {
		      ($bbox       ? (bbox       => $bbox)       : ()),
		      ($start_time ? (start_time => $start_time) : ()),
		      ($end_time   ? (end_time   => $end_time)   : ()),
		      (@usernames  ? (usernames  => \@usernames) : ()),
		     },
		     {
		      msgs => \my @msgs,
		      verbose => 1,
		     },
		    );
if (@msgs) {
    warn "NOTE: the fetch_sequences call returned the following messages:\n" . join("\n", @msgs) . "\n";
}

$sm->write($out_file);

__END__
