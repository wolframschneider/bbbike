#!/usr/bin/perl -w
#
# Copyright 2005 iconmobile GmbH. All rights reserved.
#

use strict;
our $VERSION = sprintf("%d.%02d", q$Revision: 1.7 $ =~ /(\d+)\.(\d+)/);

use File::Spec;
use File::Basename;
use Getopt::Long;
eval 'use Image::Info qw(image_info);';
eval 'use Image::ExifTool qw(ImageInfo);';
eval 'use Digest::MD5 qw(md5_hex);';
use Time::Local qw(timelocal);
use GD;
use Image::GD::Thumbnail;
use FindBin;

use lib "$FindBin::RealBin/..";
use GPS::GpsmanData;
use Karte::Standard;
use Karte::Polar;
use BBBikeUtil qw(s2hm);

my $gps_data_dir = "$FindBin::RealBin/../misc/gps_data";
my $thumbnail_dir = "/tmp/thumbnails";
my $v;

GetOptions("gpsdatadir=s" => \$gps_data_dir,
	   "thumbnaildir=s" => \$thumbnail_dir,
	   "v!" => \$v,
	  ) or die "usage!";

mkdir $thumbnail_dir if !-d $thumbnail_dir;

my $converter;

sub get_image_location {
    my $file = shift;

    my($y,$m,$d,$H,$M,$S);

    if (defined &ImageInfo) {
	my $exif = ImageInfo($file);
	if ($exif) {
	    my $date = $exif->{DateTimeOriginal} || $exif->{CreateDate};
	    if (defined $date && $date =~ /^(\d{4}):(\d{2}):(\d{2}) (\d{2}):(\d{2}):(\d{2})/) {
		($y,$m,$d,$H,$M,$S) = ($1,$2,$3,$4,$5,$6);
	    }
	}
    }

    if (!defined $y && defined &image_info) {
	# Nokia 7650 hack
	my $info = image_info($file);
	if (my $error = $info->{error}) {
	    warn "Can't parse image info from $file: $error\n";
	    return;
	}

	if (defined $info->{Comment}) {
	    my(@lines) = split /\n/, $info->{Comment};
	    my $date = $lines[2];
	    my $time = $lines[3];

	    if (!defined $date || $date !~ /^(\d+)-(\d+)-(\d{4})$/) {
		warn "Can't parse date $date (file $file)";
		return;
	    }
	    ($y,$m,$d) = ($3,$2,$1);

	    if (!defined $date || $time !~ /^(\d+)\.(\d+)\.(\d+)$/) {
		warn "Can't parse time $time (file $file)";
		return;
	    }
	    ($H,$M,$S) = ($1,$2,$3);
	}
    }

    return if (!defined $y);

    my $iso_date = sprintf "%04d-%02d-%02dT%02d:%02d:%02d", $y,$m,$d,$H,$M,$S;
    my $epoch = timelocal($S,$M,$H,$d,$m-1,$y-1900);

    my @filenames = map { $gps_data_dir . "/" . $_ }
	(sprintf("%04d%02d%02d.trk", $y,$m,$d),
	 sprintf("%04d-%02d-%02d.trk", $y,$m,$d),
	);

    for my $filename (@filenames) {
	warn "Try $filename for date $iso_date...\n"
	    if $v;

	if (-e $filename) {
	    my $gps = GPS::GpsmanData->new;
	    $gps->load($filename);
	    my $got_wpt;
	    my $last_wpt;
	    my $interval;
	    for my $wpt (@{ $gps->Track }) {
		my $wpt_epoch = $wpt->Comment_to_unixtime;
		if ($wpt_epoch > $epoch) {
		    if ($last_wpt &&
			abs($last_wpt->Comment_to_unixtime - $epoch) <
			abs($wpt_epoch - $epoch)) {
			$got_wpt = $last_wpt;
		    } else {
			$got_wpt = $wpt;
		    }
		    last;
		}
		$last_wpt = $wpt;
	    }
	    if (!$got_wpt) {
		$got_wpt = $gps->Track->[-1];
	    }
	    $interval = abs($got_wpt->Comment_to_unixtime - $epoch);
	    if ($got_wpt) {
		$converter = GPS::GpsmanData::_get_converter($gps->PositionFormat, "DDD"); # XXX hacky!
		return { Latitude  => $got_wpt->Latitude,
			 Longitude => $got_wpt->Longitude,
			 Interval  => $interval,
			 Waypoint  => $got_wpt,
			 Date      => $iso_date,
		       };
	    }
	}
    }
    undef;
}

for my $file (@ARGV) {
    my $ret = get_image_location($file);
    if (defined $ret) {
	my($lat, $long, $interval, $date) = @{$ret}{qw(Latitude Longitude Interval Date)};
	my($x, $y) = $Karte::Standard::obj->trim_accuracy
	    ($Karte::Polar::obj->map2standard(map { $converter->($_) }
					      $long, $lat));
	my $abs_file = File::Spec->rel2abs($file);
	my $thumb_file = create_thumbnail($file);
	my $hm = s2hm($interval);
	print qq{Image: "$abs_file" ($lat/$long) ($date) ($hm)\tIMG:$thumb_file $x,$y\n};
    }
}

sub create_thumbnail {
    my $file = shift;
    warn "Create thumbnail for $file...\n" if $v;
    open my $IN, $file or die "Could not open $file: $!";
    binmode $IN;
    my $srcImage = GD::Image->new($IN);
    close $IN;

    my ($thumb,$x,$y) = Image::GD::Thumbnail::create($srcImage,50);

    # Save your thumbnail
    my $dest;
    if (defined &md5_hex) {
	my($ext) = $file =~ /(\.[^\.]+)$/;
	$ext = "" if !defined $ext;
	$dest = $thumbnail_dir . "/" . md5_hex($file) . $ext;
    } else {
	$dest = $thumbnail_dir . "/" . basename($file);
    }
    open my $OUT, ">", $dest or die "Could not save $dest: $!";
    binmode $OUT;
    print $OUT $thumb->jpeg;
    close $OUT;

    $dest;
}

__END__

=head1 EXAMPLES

    find ~/images/scans/Baltikum-02/baltics-bestof/ -name "*.jpg" -print0 | xargs -0 ~/src/bbbike/miscsrc/geocode_images -v -gpsdatadir ~/src/bbbike/misc/gps_data/polen_baltikum/ > /tmp/5.bbd

    cd ~/images/from_handy/Fotos/ && find . -name "*.jpg" -print0 | xargs -0 ~/src/bbbike/miscsrc/geocode_images > /tmp/1.bbd
