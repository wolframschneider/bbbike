#!/usr/bin/perl -w
# -*- perl -*-

#
# Author: Slaven Rezic
#
# Copyright (C) 2013,2016 Slaven Rezic. All rights reserved.
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl itself.
#
# Mail: slaven@rezic.de
# WWW:  http://www.rezic.de/eserte/
#

use strict;
use warnings;

sub usage (;$) {
    my $msg = shift;
    warn $msg, "\n" if $msg;
    die <<EOF;
usage: $0 [-filter-region ...] files
EOF
}

use Getopt::Long;

my $filter_for_region = ''; # empty string means: Berlin
GetOptions("filter-region=s" => \$filter_for_region)
    or usage;
my @infiles = @ARGV
    or usage "bbd file is missing (one or more)";

_add_bbbike_inc();
require Strassen::Core;

binmode STDOUT, 'encoding(utf-8)';

my %id_seen;
my @errors;
for my $infile (@infiles) {
    Strassen->new_stream($infile)->read_stream
	(sub {
	     my($r, $dir) = @_;
	     for my $osm_watch (@{ $dir->{osm_watch} || [] }) {
		 my($elemtype, $rest) = split /\s+/, $osm_watch, 2;
		 if ($elemtype eq 'note') {
		     my($note_id, $comments) = split /\s+/, $rest;
		     # XXX currently ignored
		 } else {
		     if ($elemtype !~ m{^(way|node|relation)$}) {
			 push @errors, "Unknown element type '$elemtype' in file $infile line $.";
		     }
		     my($id_assign, $version_assign, $region) = split /\s+/, $rest;
		     if ($id_assign !~ m{^id="\d+"$}) {
			 push @errors, "Expected id assignment, but got '$id_assign' in file $infile line $.";
		     }
		     if ($version_assign !~ m{^version="\d+"$}) {
			 push @errors, "Expected version assignment, but got '$version_assign' in file $infile line $.";
		     }
		     $region = '' if !defined $region;
		     if ($filter_for_region eq $region) {
			 my $key = "$elemtype-$id_assign";
			 if (exists $id_seen{$key}) {
			     # sanity check
			     if ($id_seen{$key} ne $version_assign) {
				 push @errors, "Version mismatch for <$elemtype $id_assign>: $id_seen{$key} ne $version_assign in file $infile line $.";
			     }
			 } else {
			     print join("\t", $elemtype, $id_assign, $version_assign, $r->[Strassen::NAME()]), "\n";
			     $id_seen{$key} = $version_assign;
			 }
		     }
		 }
	     }
	 });
}

if (@errors) {
    die join("\n", @errors), "\n";
}

sub _add_bbbike_inc {
    require lib;
    require FindBin;
    lib->import("$FindBin::RealBin/..", "$FindBin::RealBin/../lib");
    lib->import("/home/e/eserte/src/bbbike", "/home/e/eserte/src/bbbike/lib");
}
