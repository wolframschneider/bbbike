#!/usr/bin/perl -w
# -*- perl -*-

#
# $Id: osm2bbd-postprocess,v 1.1 2009/02/27 22:44:30 eserte Exp $
# Author: Slaven Rezic
#
# Copyright (C) 2009 Slaven Rezic. All rights reserved.
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl itself.
#
# Mail: slaven@rezic.de
# WWW:  http://www.rezic.de/eserte/
#

use strict;
use FindBin;
use lib "$FindBin::RealBin/..";

use vars qw($VERSION);
$VERSION = 0.10;

use Cwd qw(realpath);
use File::Temp qw(tempfile);
use Getopt::Long;

my @targets = ('wasserstrassen_lowres');
my %skip_target;

GetOptions((map {
    (my $optname = $_) =~ s{_}{-}g;
    ("skip-$optname" => \$skip_target{$_});
} @targets))
    or die "usage!";
my $miscsrcdir = realpath $FindBin::RealBin;
my $datadir = shift or die "Please specify data directory";
chdir $datadir or die "Can't chdir to $datadir: $!";

for my $target (@targets) {
    if ($skip_target{$target}) {
	print STDERR "Skip target $target.\n";
	next;
    }
    no strict 'refs';
    my $target_sub = "target_$target";
    if (!defined &{$target_sub}) {
	die "No subroutine for $target exists";
    }
    print STDERR "Running target $target ... ";
    &{$target_sub};
    print STDERR "\n";
}

sub target_wasserstrassen_lowres {
    my(undef, $tmp1) = tempfile(UNLINK => 1, SUFFIX => "-wlores.bbd") or die $!;
    my(undef, $tmp2) = tempfile(UNLINK => 1, SUFFIX => "-wlores.bbd") or die $!;
    my $cmd = <<EOF;
set -e
cat wasserstrassen | $miscsrcdir/grepstrassen --catrx '^(F:W1)\$' > $tmp1
cat wasserstrassen | $miscsrcdir/grepstrassen --catrx '^(W1|W2|F:W)\$' --minarea 3 >> $tmp1
$^X $miscsrcdir/simplify_streets -tolerance 300 -algorithm 'douglas-peucker' $tmp1 > $tmp2
mv $tmp2 wasserstrassen_lowres
EOF
    system $cmd;
    die "The command $cmd failed: $?" if $? != 0;
}
