#!/usr/bin/perl -w
# -*- perl -*-

#
# $Id: downloadosm,v 1.13 2008/08/29 19:45:35 eserte Exp $
# Author: Slaven Rezic
#
# Copyright (C) 2008 Slaven Rezic. All rights reserved.
# This program is free software; you can redistribute it and/or
# modify it under the same terms as Perl itself.
#
# Mail: slaven@rezic.de
# WWW:  http://www.rezic.de/eserte/
#

# Download a data from openstreetmap into the specified directory
# (option -o). The dataset may be used by osm2bbd for further
# conversion.

# Call script without arguments for usage.

use strict;
use FindBin;
use lib "$FindBin::RealBin/..";
use Getopt::Long;
use LWP::UserAgent;
use BBBikeUtil qw(is_in_path);

my $ua = LWP::UserAgent->new;

my $debug = 1;
my $reload;
my $n;
my $o;
my $xstep = 0.01;
my $ystep = 0.01;

sub usage () {
    die <<EOF;
usage: $0 -o directory x0 y0 x1 y1
       $0 -reload existing.osm

First form:  specify a bbox (four parameters, x0 y0 x1 y1)
Second form: refresh an existing osm file downloaded with this tool

-n:        no exec
-debug i:  set debugging/verbosity level (default=$debug)
-xstep x:  set steps on the x axis (default=$xstep)
-ystep y:  set steps on the y axis (default=$ystep)
-step  xy: set steps for both the x and y axis

For all of Berlin use:
    $0 13.010982 52.337651 13.761388 52.675354
EOF
}

GetOptions("reload=s" => \$reload,
	   "o=s" => \$o,
	   "debug=i" => \$debug,
	   "n" => \$n,
	   "xstep=f" => \$xstep,
	   "ystep=f" => \$ystep,
	   "step=f" => sub {
	       $xstep = $ystep = $_[1];
	   },
	  )
    or usage;

if ($reload) {
    if (!-r $reload) {
	die "The file <$reload> does not exist or is not readable.\n";
    }
    my $ltlnqr = qr{[-+]?\d+\.\d+};
    if ($reload !~ m{($ltlnqr),($ltlnqr),($ltlnqr),($ltlnqr)\.osm$}) {
	die "The file name <$reload> does not look correct, i.e. created by this tool.\n";
    }
    my($x,$y,$xend,$yend) = ($1,$2,$3,$4);
    download_osm_tile($x,$y,$xend,$yend, 1);
} else {
    my @bbox = @ARGV;
    if (@bbox == 2) { # assume x1,y1 x2,y2
	@bbox = ((split /,/, $bbox[0]),
		 (split /,/, $bbox[1])
		);
	if (grep { !defined $_ } @bbox) {
	    die "Input arguments does not seem to be in format x1,y1 x2,y2";
	}
    }
    if (@bbox != 4) {
	usage;
    }
    if (!$o) {
	warn "-o option is missing\n";
	usage;
    }
    if (!-d $o) {
	warn "Creating directory $o...\n" if $debug;
	mkdir $o;
    }
    chdir $o
	or die "Cannot change to directory $o: $!\n";

    my($x1,$y1,$x2,$y2) = @bbox;

    ($x1,$x2) = ($x2,$x1) if $x1 > $x2;
    ($y1,$y2) = ($y2,$y1) if $y1 > $y2;

    for(my $x = $x1; $x <= $x2; $x+=$xstep) {
	for(my $y = $y1; $y <= $y2; $y+=$ystep) {
	    my $xend = $x+$xstep;
	    my $yend = $y+$ystep;
	    download_osm_tile($x,$y,$xend,$yend, 0);
	} 
    }
}

sub download_osm_tile {
    my($x,$y,$xend,$yend, $reload) = @_;
    my $url = "http://www.openstreetmap.org/api/0.5/map?bbox=$x,$y,$xend,$yend";
    my $dest = "download_$x,$y,$xend,$yend.osm";
    if (-s $dest && !$reload) {
	warn "$dest already exists, skipping...\n" if $debug;
    } else {
	my @cmd;
	if (is_in_path("wget")) {
	    @cmd = ('wget');
	    push @cmd, '--verbose' if $debug >= 2;
	    push @cmd, '-O', $dest, $url;
	} elsif (is_in_path("curl")) {
	    @cmd = ('curl', '-s', '-S', '-f'); 
	    push(@cmd, '--verbose') if $debug >= 2;
	    push(@cmd, ('-o', $dest, $url));
        } else {
	    die "Neither wget nor curl available, cannot proceed";
	}

	if ($n) {
	    warn "Would: @cmd\n";
	} else {
	    system(@cmd) == 0
		or die "Failed while running <@cmd>: $?";
	}
    }
}

__END__
