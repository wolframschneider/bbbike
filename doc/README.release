Reihenfolge bei Dist-Erstellung
-------------------------------

*** BUILD *********************************************************************

> Versionsnummer in BBBikeVar.pm ($VERSION und $STABLE_VERSION) ändern. 

> Falls geplant ist, ein neues Windows-Release zu machen:
  Versionsnummer $WINDOWS_VERSION in BBBikeVar.pm ändern.
  Das kann auch passieren, sobald die Distribution auf Sourceforge
  ist.

> Falls geplant ist, ein neues Debian-Release zu machen:
  Versionsnummer $DEBIAN_VERSION in BBBikeVar.pm ändern.

> $FREEBSD_VERSION in BBBikeVar.pm soll erst inkrementiert werden, sobald
  das neue i386-Binary bei FreeBSD existiert.

$ perl Makefile.PL
  (Makefile mit neuer Versionsnummer erzeugen)

$ make predist

  oder ausführlich:

	$ cd data; make; cd ..

	$ make extmod
	  (externe Module bauen und installieren)

	$ ./miscsrc/link_ext_mod.pl

	$ make distcheck

> fehlende Dateien in MANIFEST eintragen (und mit make distcheck
  erneut kontrollieren)

$ cd data; make slow-checks; cd ..

> Falls Zeit ist: auch "make really-slow-checks" laufen lassen.

$ make distdir2
  (erstellt eine Distribution in BBBike-x.xx und in /tmp)

> Optional: Usage-Abschnitt in bbbike.pod ändern

*** TEST **********************************************************************

# Erweiterungen kompilieren und Tests laufen lassen. Zwei Tests in
# cgihead2.t werden fehlschlagen, weil die neue Distribution noch
# nicht online ist.

$ make ext test

$ cd BBBike-x.xx && perl Makefile.PL && make all test install && perl ./bbbike -public

> wichtigste Tests:

  > Route auf Karte auswählen

  > Rückweg

  > Start/Ziel im Straßenauswahl-Fenster auswählen

  > Scrollen mit Windrose, Hand, Mousewheel und Scrollbar

  > Overview-Fenster

  > Zuschalten von R-Bahn, Landstraßen, Orten, Sehenswürdigkeiten

> Genaue Testsuite siehe doc/tests.pod

$ cd ..

> unter Windows testen (Anleitung in ports/windows/Makefile)

> Releaseinformationen auffrischen (CHANGES editieren)

*** DISTRIBUTIONS *************************************************************

$ make fbsdport-distfiles-link

> Das folgende könnte fehlschlagen, weil /tmp/BBBike-X.XX schon
  existiert. In diesem Fall das temporäre Verzeichnis entfernen.

$ make alldist

> Windows-Distribution mit inno setup bauen (Anleitung in
  ports/windows/Makefile)

> Windows-Executable nach ~/src/bbbike-aux/distfiles kopieren und
  einchecken.

> in port/freebsd/Makefile.tmpl PORTREVISION auf 1 setzen

> /usr/local/src/ports-current per ftp aktualisieren
  (ftp://ftp.freebsd.org/pub/FreeBSD/ports/ports-current)

> evtl. "make fbsdportdiff" ausführen und /tmp/bbbike-freebsdport.diff
  per eye-view überprüfen

> FreeBSD-port überprüfen:
  cd /tmp/BBBike && make all install
  wenn OK => send-pr schicken

$ rm -rf BBBike-x.xx
  (Testdistribution löschen, falls sie noch nicht gelöscht ist)

> Debian-Paket bauen: auf einer Debian-Maschine in ports/debian "make"
  eingeben, dann mit "dpkg --install" installieren und kurz testen.
  Falls OK, nach ~/src/bbbike-aux/distfiles kopieren und einchecken.
  Auf der Hauptmaschine per "git fetch" und "rebase" holen.

> alles einchecken

> (annotated) Tag erstellen: git tag -a RELEASE_._..

$ git push

$ git push --tags

> Versionsnummer in BBBikeVar.pm erhöhen und mit "-DEVEL" versehen

======================================================================

Update der Sourcen auf Sourceforge

> Drei Distfiles der aktuellen Version sollten sich in
  ~/src/bbbike-aux/distfiles befinden und sollten nach SourceForge
  kopiert werden.

$ prove t/cgihead2.t

  überprüft die Downloads

----------------------------------------------------------------------

Update der veränderlichen HTML-Dateien auf bbbike.sourceforge.net

> zur Zeit händisch

  Achten auf: wann gibt es welche Distribution (Windows, Debian,
  FreeBSD)? Dann in BBBikeVar.pm eintragen und die Bytes-Zahl
  korrigieren.

$ cd ~/src/bbbike/projects/bbbike.sourceforge.net && make update rsync

> Achtung: zurzeit sieht es so aus, als ob chmod fehlschlägt; somit
  kann bbbike.cgi etc. die falschen Rechte haben, das muss dann
  händisch korrigiert werden!

----------------------------------------------------------------------

Update des CGI-Teasers:

> in bbbike-teaser.pl teaser_perltk_newrelease() aktiviere und damit
  teaser_perltk() deaktivieren

----------------------------------------------------------------------

Update der CGI-Version auf dem Live-Rechner:

Zuerst mit deploy-local einen lokalen Test zuerst fahren.

$ cd ~/src/bbbike/projects/www.radzeit.de && make deploy

----------------------------------------------------------------------

Update der CGI-Version an der TU:

	make distdir
	rsync -az BBBike-3.17-DEVEL/ eserte@user.cs.tu-berlin.de:www/bbbike.new/
	rsync -az cgi/bbbike-cs-umzug.html user.cs.tu-berlin.de:www/bbbike.new/cgi/bbbike-umzug.html
	rsync -az cgi/bbbike-cs.cgi.config user.cs.tu-berlin.de:www/bbbike.new/cgi/bbbike.cgi.config

> Die vorläufige Adresse
  http://user.cs.tu-berlin.de/~eserte/bbbike.new/cgi/bbbike.cgi
  testen. Der Umzugshinweis darf nicht fehlen!

	ssh user.cs.tu-berlin.de 'mv www/bbbike www/bbbike.old && mv www/bbbike.new www/bbbike'

> Die richtige Adresse
  http://user.cs.tu-berlin.de/~eserte/bbbike/cgi/bbbike.cgi testen.

----------------------------------------------------------------------

Entferntes Update von www/bbbike-tmp:

> Im Browser das lokale BBBike-CGI mit dem Parameter create_all_maps=1
  aufrufen.

$ cd ~/www/bbbike-tmp

$ rsync -Pvz berlin_map_* fiesta.cs.tu-berlin.de:www/bbbike-tmp

======================================================================

Automatisierte Tests:

im Verzeichnis t:

$ make test

$ perl cgi2.t
  (evtl., da sehr zeitaufwendig; /var/log/httpd-error.log dabei überprüfen)

