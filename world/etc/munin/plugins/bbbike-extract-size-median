#!/bin/sh
# Copyright (c) Sep 2011-2015 Wolfram Schneider, http://bbbike.org
#
# usage: /etc/munin/plugins/bbbike-extract-size-median [ config ]
#
# get documentation with: perldoc /path/to/script

: << =cut

=head1 NAME

munin-bbbike-extract-size-median  - Plugin to monitor median file size

=head1 ABOUT

[...]

=head1 USAGE

[...]

=head1 CONFIGURATION

Configuration parameters for /etc/munin/plugin-conf.d/munin-node
if you need to override the defaults below:

 [bbbike-extract-size-median]
   env.warning   - Generate a warning if disk usage goes above this level
   env.critical  - Generate a critical if disk usage goes above this level

=cut


PATH=/bin:/usr/bin; export PATH
extract_dir=/var/cache/extract
formats="csv.gz csv.xz garmin-bbbike.zip garmin-cycle.zip garmin-leisure.zip garmin-osm.zip mapsforge-osm.zip navit.zip o5m.gz o5m.xz obf.zip osm.bz2 osm.gz osm.pbf osm.xz shp.zip srtm-europe.garmin-srtm.zip srtm-europe.obf.zip srtm-europe.osm.pbf srtm.garmin-srtm.zip srtm.obf.zip srtm.osm.pbf"

config=$1

if [ "$1" = "config" ]; then
    : ${warning=80000000}
    : ${critical=120000000}
     
    cat <<EOF
graph_args --base 1024 --lower-limit 0
graph_title Median Extracts size
graph_vlabel Median Extracts size
graph_category extractsize
graph_info File size
graph_period minute
EOF
    for f in $formats
    do
        ff=$(echo $f | perl -npe 's/[\.\-]/_/g')
        echo "$ff.label $f"
        echo "$ff.min 0"
        echo "$ff.warnings $warning"
        echo "$ff.critical $critical"
    done

    exit 0
fi

for f in $formats
do
    ff=$(echo $f | perl -npe 's/[\.\-]/_/g')
    echo "$ff.value"     `( cd $extract_dir/download; du -k * | egrep "${f}$" |
        awk '{
            count[NR] = $1;
        } END {
            if (NR % 2) {
                print 1024 * count[(NR + 1) / 2];
            } else {
                print 1024 * (count[(NR / 2)] + count[(NR / 2) + 1]) / 2.0;
            }
        }'
    )`
done
