#!/bin/sh
# Copyright (c) Sep 2011-2013 Wolfram Schneider, http://bbbike.org
#
# usage: /etc/munin/plugins/bbbike-extract-files [ config ]
#
# get documentation with: perldoc /path/to/script

: << =cut

=head1 NAME

munin-bbbike-extract-files  - Plugin to monitor number of files

=head1 ABOUT

[...]

=head1 USAGE

[...]

=head1 CONFIGURATION

Configuration parameters for /etc/munin/plugin-conf.d/munin-node
if you need to override the defaults below:

 [bbbike-extract-files]
   env.warning   - Generate a warning if number of memory goes below this level
   env.critical  - Generate a critical if number of memory goes below this level

=cut


PATH=/bin:/usr/bin; export PATH
extract_dir=/var/cache/extract
formats="csv.gz csv.xz garmin-bbbike.zip garmin-cycle.zip garmin-leisure.zip garmin-osm.zip mapsforge-osm.zip navit.zip o5m.gz o5m.xz obf.zip osm.bz2 osm.gz osm.pbf osm.xz shp.zip srtm-europe.garmin-srtm.zip srtm-europe.obf.zip srtm-europe.osm.pbf srtm.garmin-srtm.zip srtm.obf.zip srtm.osm.pbf"

config=$1

if [ "$1" = "config" ]; then
    : ${warning=600}
    : ${critical=1000}
     
    cat <<EOF
graph_title Extracts files
graph_vlabel Extracts files
graph_category extractsize
graph_info Number of Files
graph_period minute
osm.label Files PBF
osm.min 0
download.label FilesPBF+other
download.min 0
EOF

    echo "osm.warning $warning"
    echo "osm.critical $critical"
    echo "download.warning $warning"
    echo "download.critical $critical"
    
    for f in $formats
    do
        ff=$(echo $f | perl -npe 's/[\.\-]/_/g')
        echo "$ff.label $f"
        echo "$ff.min 0"
        echo "$ff.warnings $warning"
        echo "$ff.critical $critical"
    done

    exit 0
fi

echo "osm.value" 	`( cd $extract_dir/; ls osm | wc -l )`
echo "download.value" 	`( cd $extract_dir/; ls download | wc -l )`
for f in $formats
do
    ff=$(echo $f | perl -npe 's/[\.\-]/_/g')
    echo "$ff.value"     `( cd $extract_dir/; ls download | egrep "${f}$" | wc -l )`
done
