# lighttpd configuration file
#
# use it as a base for lighttpd 1.0.0 and above
#
# $Id: www.freebsd.de.conf,v 1.3 2007/04/19 07:50:08 wosch Exp $

############ Options you really have to take care of ####################
# all sites
#
index-file.names     = ( "index.html", "index.cgi" )
cgi.assign           = ( ".cgi" => "" )
#dir-listing.activate = "disable"

compress.cache-dir          = "/var/cache/lighttpd/compress/"
compress.filetype           = ("text/plain", "text/html", "text/javascript", "application/javascript", "text/css")

server.modules                += ( "mod_auth" )

######################################################################
# main config
#
$HTTP["host"] =~ "^(www[234]?\.bbbike\.org)$" {
  	server.document-root 	= "/usr/local/www/bbbike.org/world/web"
	accesslog.filename      = "/var/log/lighttpd/bbbike.log"
	server.breakagelog         = "/var/log/lighttpd/bbbike.error.log"
	compress.cache-dir      = "/var/cache/lighttpd/www.bbbike.org/"

	# block development sites
	$HTTP["host"] =~ "^(www[234]\.bbbike\.org)$" {
	    alias.url = ( "/robots.txt" => "/home/wosch/projects/bbbike/world/web/robots-dev.txt" )
	}

	# block rough robots by IP address
	# $HTTP["remoteip"] =~ "^174\.127\.132\.|^80\.177\.25\.|^79\.142\.|^79\.125\.|^94\.100\.|^67.202\.|^75\.101\.|^213\.5\.|^174\.129\.|^77\.121\.|^184\.72\.|^85\.17\.|^91\.201\.6[4567]|^188\.138\.56\.70|^91\.201\.66|^94\.100\.25|^50\.18\.49|^204\.236\.254|^46\.51\.|^62\.99\.204\.|^91\.224\.160\." {
	$HTTP["remoteip"] =~ "^91\.207\.5\." {
      	   url.access-deny = ( "" )
 	}
	$HTTP["remoteip"] =~ "^^66\.249\." {
      	   url.access-deny = ( "\?" )
 	}

	# block rough robots by referer
	$HTTP["referer"] =~ "[a-z]/bbbike\.org|[a-z]/cyclerouteplanner\.org|[a-z]/cycleroute\.net|[a-z]/www\.bbbike\.org|[a-z]/www\.cyclerouteplanner\.org|[a-z]/www\.cycleroute\.net" {
      	   url.access-deny = ( "" )
 	}

	# block rough robots by URL + IP address
	$HTTP["url"] =~ "^/[a-z][a-z]/" {
	   $HTTP["remoteip"] =~ "^93\.158\.145|^119\.63\.192|^38\.101\.148|^94\.23\.225\.|^109\.73\.78\.|^50\.19\.|^107\.22\.|^176\.31\." {
      	      url.access-deny = ( "" )
	   }
  	}

        # broken user agent
	#$HTTP["useragent"] == "Opera/9.80 (Windows NT 5.1; U; de) Presto/2.5.22 Version/10.51" {
        #    $HTTP["url"] !~ "^/cgi/Dresden.cgi\?start=Dieselstr\.\+" {
        #    	url.access-deny = ( "" )
        #    }
  	#}

	# stale links
    	url.redirect = ( 
		"^/cgi/([A-Z]+[a-z].*?)(\.en)?\.cgi(.*)" => "http://www.bbbike.org/$1/$3",
    		"/([A-Z][a-zA-Z]+)/index.en.cgi" => "http://www.bbbike.org/$1/",
    		"/([A-Z][a-zA-Z]+)/index.cgi$" => "http://www.bbbike.org/$1/",
    		"/index.de.html" => "http://www.bbbike.org/de/",
    		"/cgi/extract.cgi" => "http://extract.bbbike.org/",
		"/mc(.*)" => "http://mc.bbbike.org/mc$1"
	)

	# /streets.html mapping
	$HTTP["request-method"] == "GET" {
            url.rewrite-once = ( "^/([a-z][a-z]/|m/)?([A-Z][A-Za-z]+)/streets.html$" => "/$1$2/index.cgi?all=2" )
	}

    	$HTTP["url"] =~ "^/images/" { expire.url = ( "" => "access plus 7 days" ) }
    	$HTTP["url"] =~ "^/html/"   { expire.url = ( "" => "access plus 7 days" ) }
}

######################################################################
# redirects for old URLs
#
$HTTP["host"] =~ "^(bbbike\.org|bbike\.org|www\.bbike\.org|www\.cyclerouteplanner\.org|cyclerouteplanner\.org|cycleroute\.net|www\.cycleroute.net|www\.cyclerouteplanner\.com|cyclerouteplanner\.com)$" {
    	accesslog.filename        = "/var/log/lighttpd/bbbike.log"
    	url.redirect = ( "^/(.*)" => "http://www.bbbike.org/$1" ) 
}

# only 2 "b" bbike -> bbbike
$HTTP["host"] =~ "^(extract\.bbike\.org)$" {
    	accesslog.filename        = "/var/log/lighttpd/bbbike.log"
    	url.redirect = ( "^/(.*)" => "http://extract.bbbike.org/$1" ) 
}
$HTTP["host"] =~ "^(tile\.bbike\.org)$" {
    	accesslog.filename        = "/var/log/lighttpd/bbbike.log"
    	url.redirect = ( "^/(.*)" => "http://tile.bbbike.org/$1" ) 
}

# stale hostnames
$HTTP["host"] =~ "^(bbbike\.elsif\.de|recv\.de|www\.recv\.de)$" {
    	accesslog.filename        = "/var/log/lighttpd/bbbike.log"
    	url.redirect = ( "^/(.*)" => "http://www.bbbike.org/" ) 
}

######################################################################
# main development site
#
$HTTP["host"] =~ "^(dev[234]?\.bbbike\.org)$" {
  	server.document-root 	= "/home/wosch/projects/bbbike/world/web"
	accesslog.filename      = "/var/log/lighttpd/dev.bbbike.log"
	#server.breakagelog         = "/var/log/lighttpd/dev.bbbike.error.log"
	compress.cache-dir      = "/var/cache/lighttpd/dev.bbbike.org/"


	alias.url = ( "/robots.txt" => "/home/wosch/projects/bbbike/world/web/robots-dev.txt",
		      "/osm/extract" => "/var/cache/extract/download"
		)


	$HTTP["request-method"] == "GET" {
            url.rewrite-once = ( "^/([a-z][a-z]/|m/)?([A-Z][A-Za-z]+)/streets.html$" => "/$1$2/index.cgi?all=2" )
	}

    	$HTTP["url"] =~ "^/images/" { expire.url = ( "" => "access plus 2 hours" ) }
    	$HTTP["url"] =~ "^/html/"   { expire.url = ( "" => "access plus 2 hours" ) }

}

######################################################################
# second development site
#
$HTTP["host"] =~ "^(devel[234]?\.bbbike\.org)$" {
  	server.document-root 	= "/home/wosch/projects/bbbike-dev/world/web"
	accesslog.filename      = "/var/log/lighttpd/devel.bbbike.log"
	#server.breakagelog         = "/var/log/lighttpd/devel.bbbike.error.log"
	compress.cache-dir      = "/var/cache/lighttpd/devel.bbbike.org/"

	alias.url = ( "/robots.txt" => "/home/wosch/projects/bbbike-devel/world/web/robots-dev.txt" )
        url.rewrite-once = ( "^/([a-z][a-z]/|m/)?([A-Z][A-Za-z]+)/streets.html$" => "/$1$2/index.cgi?all=2" )
}

######################################################################
#  mobile phone version
#
$HTTP["host"] =~ "^(m\.bbbike\.org)$" {
  	server.document-root 	= "/usr/local/www/bbbike.org/world/web"
	accesslog.filename      = "/var/log/lighttpd/m.bbbike.log"

	alias.url = ( "/robots.txt" => "/usr/local/www/bbbike.org/world/web/robots-dev.txt" )
	$HTTP["url"] !~ "^/robots.txt$" {
    		url.redirect = ( "^/(.*)" => "http://www.bbbike.org/m/$1" ) 
  	}

	index-file.names           = ( "index.m.html", "index.html", "index.cgi" )
}

######################################################################
# extract OSM service
#
$HTTP["host"] =~ "^(extract[234]?(-pro[234]?)?\.bbbike\.org)$" {
        server.document-root    = "/usr/local/www/bbbike.org/world/web"
        accesslog.filename      = "/var/log/lighttpd/extract.bbbike.log"

    $HTTP["host"] =~ "^(extract[234](-pro[234]?)?\.bbbike\.org)$" {
        alias.url = ( "/robots.txt" => "/usr/local/www/bbbike.org/world/web/robots-dev.txt" )
    }

        alias.url = ( "/robots.txt" => "/usr/local/www/bbbike.org/world/web/robots-extract.txt" )
        index-file.names           = ( "cgi/extract.cgi", "index.html" )

    # password protected pro service
    $HTTP["host"] =~ "^(extract[234]?(-pro[234]?)\.bbbike\.org)$" {
	auth.backend               = "plain" 
	auth.backend.plain.userfile = "/etc/lighttpd/lighttpd-plain.user" 

	auth.require = ( "/" =>
                 (
                 # method must be either basic or digest
                   "method"  => "digest",
                   "realm"   => "extract pro service",
                   "require" => "valid-user" 
                   #"require" => "user=agent007|user=agent008" 
                 ),
       )
    }
}

######################################################################
# extract OSM service on demand with Amazon AWS
#
$HTTP["host"] =~ "^(.+\.amazonaws\.com)$" {
        server.document-root    = "/usr/local/www/bbbike.org/world/web"
        accesslog.filename      = "/var/log/lighttpd/extract-aws.bbbike.log"

        alias.url = ( "/robots.txt" => "/usr/local/www/bbbike.org/world/web/robots-dev.txt" )
        index-file.names           = ( "cgi/extract.cgi" )
}


######################################################################
# download area
#
$HTTP["host"] =~ "^(download[234]?\.bbbike\.org)$" {
    server.document-root = "/usr/local/www/download.bbbike.org"
    accesslog.filename   = "/var/log/lighttpd/download.bbbike.log"

    # bandwidth limit 
    $HTTP["host"] =~ "^(download2\.bbbike\.org)$" {
        server.kbytes-per-second = 5096
    }
 
    alias.url = ( 
	"/osm/extract-pro"  => "/var/cache/extract-pro/download",
	"/osm/extract"  => "/var/cache/extract/download",
	"/images" 	=> "/usr/local/www/bbbike.org/world/web/images",
	"/html" 	=> "/usr/local/www/bbbike.org/world/web/html",
	"/cgi/maptype.cgi" 	=> "/usr/local/www/bbbike.org/world/web/cgi/maptype.cgi",
    )

    $HTTP["host"] =~ "^(download[234]\.bbbike\.org)$" {
        #alias.url = ( "/robots.txt" => "/usr/local/www/bbbike.org/world/web/robots-dev.txt" )
    }

    server.errorfile-prefix = "/usr/local/www/bbbike.org/world/download/status-"

    dir-listing.show-readme = "enable"
    dir-listing.show-header = "enable"

    dir-listing.activate = "enable"
    dir-listing.hide-dotfiles = "enable"
    dir-listing.hide-readme-file = "enable"
    dir-listing.hide-header-file = "enable"

    #url.redirect = ( "^/osm/planet(.*)" => "http://download2.bbbike.org/osm/planet$1" ) 

    $HTTP["url"] =~ "\.(md5|gz|pbf)$" {
    	$HTTP["useragent"] =~ "Purebot/|bingbot/|Ezooms/|ichiro/mobile" {
	    url.access-deny = ( "" )
	}
    }

    mimetype.assign += (
	".poly"	=> "text/plain",
	".osm"	=> "application/x-openstreetmap+xml",
	".pbf"	=> "application/x-pbf",
	".osm.gz"	=> "application/x-openstreetmap+xml",
	".osm.bz2"	=> "application/x-openstreetmap+xml",
	".xz"           => "application/x-7z-compressed",

	".md5"	=> "text/plain",
	".sha256" => "text/plain",

	# already defined globally
	#".html" => "text/html"
	#".zip"  => "application/zip",
    )
}

######################################################################
#  api version - for external Apps (Android, iOS)
#
$HTTP["host"] =~ "^(api[234]?\.bbbike\.org)$" {
  	server.document-root 	= "/usr/local/www/bbbike.org/world/web"
	accesslog.filename      = "/var/log/lighttpd/api.bbbike.log"

	alias.url = ( "/robots.txt" => "/usr/local/www/bbbike.org/world/web/robots-dev.txt",
		      "/api/0.2" => "/usr/local/www/bbbike.org/world/web" )

	# pass only /cgi /<city>
	$HTTP["url"] =~ "^/api/0\.2/(cgi|bbbike|[A-Z][A-Za-z]+)/(.+?\.cgi)?$" { 
	   $HTTP["querystring"] !~ "^.+$" {
      	      url.access-deny = ( "" )
	   }
        } else $HTTP["url"] !~ "^/(robots\.txt|)$" { 
      	   url.access-deny = ( "" )
	}

	# homepage
	$HTTP["url"] =~ "^/$" { url.redirect = ( "/" => "http://www.bbbike.org/api.html" ) }

	index-file.names           = ( "index.html", "index.cgi" )
}

######################################################################
# test site
#
$HTTP["host"] =~ "^localhost$" {
  	server.document-root 	= "/home/wosch/projects/bbbike/world/web"
	accesslog.filename      = "/var/log/lighttpd/localhost.bbbike.log"
	compress.cache-dir      = "/var/cache/lighttpd/localhost.bbbike.org/"

	alias.url = ( 
		"/bbbike/data" => "/home/wosch/projects/bbbike/data",
		"/bbbike" => "/home/wosch/projects/bbbike/world/web",
	)
}


######################################################################
# statistics
#
$HTTP["remoteip"] =~ "^(127\.0\.0\.1|10\.0\.0\.[0-9]+)$" {
    status.status-url = "/server-status"
    alias.url = ( "/text.txt" => "/usr/local/www/bbbike.org/world/web/test.txt" )
    accesslog.filename      = "/var/log/lighttpd/server-status.log"
}

# EOF

