#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use LWP::UserAgent;
use IO::File;

#
# 'ElevationResponse' => [
#    {
#      'status' => 'OK',
#      'result' => [
#                   {
#                     'location' => {
#                                     'lat' => '37.5909540',
#                                     'lng' => '-122.3384660'
#                                   },
#                     'elevation' => '2.9659331'
#                   },
#

#my $obj = require "b.pl" or die "open file: $!\n";
sub usage () {
    my $message = shift;

    warn $message, "\n" if $message;
    die <<EOF;
usage: $0 [options] --database=file --input=file
EOF
}

my $debug = 1;
my $database;

sub init_height_db {
    my $file = shift;

    my %height_db;
    my $fd = new IO::File $file, "r" or die "open '$file': $!\n";

    my $use_rounding = 1;

    while (<$fd>) {
        chomp;
        my ( $height, $x, $coord ) = split;

        if ($use_rounding) {
            $height = int( $height + 0.5 );
        }

        $height_db{$coord} = $height;
    }
    close $fd;

    return \%height_db;
}

sub download {
    my $ua  = shift;
    my $uri = shift;

    my $response = $ua->get($uri);
    if ( $response->is_success ) {
        print $response->decoded_content;    # or whatever
    }
    else {
        warn "Download failed: ", $response->status_line, "\n";
    }
}

######################################################
GetOptions(
    "debug!"     => \$debug,
    "database=s" => \$database,
) or usage;

#usage("no database given\n") if !$database;

my %hash;
%hash = %{ init_height_db($database) } if $database;

my $url =
  'http://maps.google.com/maps/api/elevation/xml?sensor=false&locations=';

my $counter = 0;
my $string  = "";
my $ua      = LWP::UserAgent->new;

my $max = 50;
while (<>) {
    chomp;
    my ( $lng, $lat ) = split(/,/);
    $string .= "|" if $string;
    $string .= "$lat,$lng";

    $counter++;
    if ( $counter == $max ) {
        &download( $ua, "$url$string" );
        $string  = "";
        $counter = 0;
    }
}

&download( $ua, "$url$string" ) if $string;

