#!/usr/local/bin/perl
# Copyright (c) 2009-2012 Wolfram Schneider, http://bbbike.org
#
# cities-parallel - make wrapper to extract N cities at the same time on a multi-core machine

use Getopt::Long;

use strict;
use warnings;

my $debug = 1;
my $xargs = 0;

sub usage () {
    <<EOF;
usage: $0 [ options ] parallel city

--debug=0..2
--xargs=0 | 1		use `xargs -0' instead sub-shells
EOF
}

GetOptions(
    "debug=i" => \$debug,
    "xargs"   => \$xargs,
) or die usage;

my $split     = shift || 1;
my $make_args = shift || 'cities';

my $hash;

my $i;
while (<>) {
    chomp;

    $i = $. % $split;
    push( @{ $hash->{$i} }, $_ );
}

my $cities_db = $ENV{CITIES_DB} ? "CITIES_DB=$ENV{CITIES_DB}" : "";
my $tmp_dir = $ENV{LOG_DIR} ? $ENV{LOG_DIR} : "tmp";
my $log_dir = $ENV{LOG_DIR} ? "LOG_DIR=$ENV{LOG_DIR}" : "";

foreach my $key ( sort { $a <=> $b } keys %$hash ) {

    # preserve old log files
    print
qq{test -e $tmp_dir/log.$split.cities.$key && gzip -f $tmp_dir/log.$split.cities.$key; };
    print qq{time make -s $cities_db $log_dir CITIES="}, join " ", @{ $hash->{$key} },
      qq{" $make_args > $tmp_dir/log.$split.cities.$key 2>&1 };

    print $xargs ? "\0" : "& \n";
}
print "wait\n" if !$xargs;

