#!/bin/sh
# Copyright (c) 2009-2012 Wolfram Schneider, http://bbbike.org
#
# bbbike-statistic - command line bbbike @ world statistic


PATH=$HOME/bin:$PATH; export PATH
LANG=C; export LANG
dns=dns
dns=cat

cd /var/log/lighttpd || exit 2
varnish_log=/var/log/varnish/varnishncsa.log

logfile="bbbike.log"
if [ -f $varnish_log ]; then
    cd `dirname $varnish_log`
    logfile=`basename $varnish_log`
fi

: ${logfiles=$logfile}
: ${logfiles_mobile="m.bbbike.log"}


# man perlrun
perl_utf8="-CIO"

front_end='(http://www.bbbike.org)?'
url_match="$front_end(/cgi/[A-Zb]|/[A-Z][a-z][A-Za-z]+/|/berlin/|/[a-z][a-z]/[A-Z][a-z][A-Za-z]+/)"

log_all () {
    match=${1-"."}
    zcat -f $logfiles | egrep -v '^10\.' | egrep "GET $match"
}
log_full () {
    match=${1-"."}
    zcat -f $logfiles | egrep -v '^10\.' | egrep "$match"
}
log () {
    match=${1-"."}
    log_all "$match" | egrep -v '" 40[34] '
}
log_post () {
    match=${1-"."}
    log_full "$match" | perl -npe 's,"(POST|GET) http://www.bbbike.org,"$1 ,'
}

echo -n "bbbike.org page views: "
log $url_match | awk '{print $1}' | wc -l

echo ""
echo -n "mobile bbbike.org page views: "
if [ -f $logfiles_mobile ]; then
    zcat -f $logfiles_mobile | egrep -v '^10\.' | egrep "GET $url_match" | egrep -v '" 40[34] ' | awk '{print $1}' | wc -l
fi

echo ""
echo -n "weather page views: "
log $front_end/cgi/weather.cgi | awk '{print $1}' | wc -l

echo ""
echo -n "location page views: "
log $front_end/cgi/location.cgi | awk '{print $1}' | wc -l

if [ -f $varnish_log ]; then
    echo ""
    echo -n "map compare log hosts: "
    egrep bbbike.org/mc/ $varnish_log | awk '{ print $1 }' | sort -u | wc -l

    echo ""
    echo -n "tile log hosts: "
    egrep tile $varnish_log | awk '{ print $1 }' | sort -u | wc -l
    egrep tile $varnish_log | awk '{ print $1 }' | sort | uniq -c | sort -nr | $dns

    echo ""
    echo "tile log 404"
    egrep tile $varnish_log | egrep -v ' (200|30[124]) ' | awk '{ print $1 }' | sort | uniq -c | sort -nr | $dns

    echo ""
    echo -n "tile log traffic: "
    egrep tile $varnish_log | egrep ' (200|30[124]) ' | awk '{ s += $10 } END { print int(s/1024/1024*10 + 0.5) / 10, "MB" }' 

    echo ""
    echo "map compare referer"
    egrep http://tile.bbbike.org/mc/ $varnish_log | awk '{ print $11 }' | egrep -v http://tile.bbbike.org/ | sort | uniq -c | sort -nr
fi

echo ""
echo "Preferences seen: "
echo -n "view second page: "
log "$url_match.*?\?" | egrep -c 'pref_seen=1[;&]'

echo -n "OSM gps crossing, start: "
log "$url_match.*?\?" | egrep -c 'start=[^&]+%2C0%5D&'
echo -n "OSM gps crossing, ziel: "
log "$url_match.*?\?" | egrep -c 'ziel=[^&]+%2C0%5D&'
echo -n "OSM gps crossing, start+ziel: "
log "$url_match.*?\?" | egrep -c 'start=[^&]+%2C0%5D&.*ziel=[^&]+%2C0%5D&'

echo -n "google maps addresses gps, start: "
log "GET $url_match.*?\?" | egrep -c 'start=[^&]+%2C1%5D&'
echo -n "google maps addresses gps, ziel: "
log "$url_match.*?\?" | egrep -c 'ziel=[^&]+%2C1%5D&'
echo -n "google maps addresses gps, start+ziel: "
log "$url_match.*?\?" | egrep -c 'start=[^&]+%2C1%5D&.*ziel=[^&]+%2C1%5D&'

echo ""
echo -n "bbbike.org hosts: "
log "$url_match" | awk '{print $1}' | sort -u | wc -l
log "$url_match" |
	egrep -v 'Purebot|Java/1|SnapPreviewBot|Tcl http client package|Yahoo\! Slurp|www.bing.com/bingbot.htm|crawler.html|Googlebot|ezooms.bot|covario|Ronbot/Nutch|cmsworldmap.com' |
	awk '{print $1, $7 }' | perl $perl_utf8 -npe 's/\?.*//; s,/cgi/,,; s,(\.en)?\.cgi,,;' |
	sort | uniq -c | sort -nr | head -40 | $dns

echo ""

echo ""
echo -n "bbbike references: "
log "(/ |$url_match.*) HTTP" |
	egrep -v 'GET \S*/[^ ]+/streets.html' |
	egrep -v 'Purebot|Java/1|SnapPreviewBot|Tcl http client package|http://www.bbbike.org' |
	awk '{print $11}' | perl $perl_utf8 -npe "s,.?http://www.bbbike.org$url_match\?.*\n,$1,g" | sort -u | wc -l

echo -n "google references: "
log "$url_match.*" | egrep -v 'GET \S*/[^ ]+/streets.html' | egrep -i 'google.*fahrrad' | wc -l

log "(/ |$url_match.*)" |
	egrep -v 'GET \S*/[^ ]+/streets.html' | egrep -iv 'google.*fahrrad' |
	egrep -v 'Purebot|Java/1|SnapPreviewBot|Tcl http client package|"http://www.bbbike.org|"http://www\.google' |
	awk '{print $11}' | perl $perl_utf8 -npe "s,.?http://www.bbbike.org$url_match\?.*\n,$1,g" |
	sort | uniq -c | sort -nr |
	perl $perl_utf8 -MCGI -npe '$_ = CGI::unescape($_)'


echo ""
echo -n "bbbike cities: "
log "$url_match.*?\?" | egrep -v 'imagetype=png.*geometry=240x180' |
	perl $perl_utf8 -ne 'print "$1\n" if m,GET \S*/cgi/(.*?).cgi, || m,GET \S*/([A-Z][a-z]+)/\?, || m,GET \S*/([a-z][a-z]/[A-Z][a-z]+)/\?, ' | wc -l

log "$url_match.*?\?" | egrep -v 'imagetype=png.*geometry=240x180' |
	perl $perl_utf8 -ne 'print "$1\n" if m,GET \S*/cgi/(.*?).cgi, || m,GET \S*/([A-Z][a-z]+)/\?, || m,GET \S*/([a-z][a-z]/[A-Z][a-z]+)/\?,' |
	sort | uniq -c | sort -nr

echo ""
echo -n "via count cities: "
log "$url_match.*?\?" | egrep 'via=' | egrep -v 'via=(|NO)[;&]' |
	perl $perl_utf8 -ne 'print "$1\n" if m,GET \S*/cgi/(.*?).cgi, || m,GET \S*/([A-Z][a-z]+)/\?, || m,GET /([a-z][a-z]/[A-Z][a-z]+)/\?,' | wc -l
log "$url_match.*?\?" | egrep 'via=' | egrep -v 'via=(|NO)[;&]' |
	perl $perl_utf8 -ne 'print "$1\n" if m,GET /cgi/(.*?).cgi, || m,GET /([A-Z][a-z]+)/\?, || m,GET /([a-z][a-z]/[A-Z][a-z]+)/\?,' |
	sort | uniq -c | sort -nr

echo ""
echo -n "OpenSearch requests: "
log '[^ ]*/cgi/api.*?\?' | wc -l

echo -n "OpenSearch requests per city: "
log '[^ ]*/cgi/api.*?\?' | perl $perl_utf8 -ne 'print "$1\n" if /city=([^&;\s]+)/' | sort -u | wc -l
log '[^ ]*/cgi/api.*?\?' | perl $perl_utf8 -ne 'print "$1\n" if /city=([^&;\s]+)/' | sort | uniq -c | sort -nr

echo ""
echo -n "Crossing requests: "
log '[^ ]*/cgi/crossing.*?\?' | wc -l

echo -n "Crossing requests per city: "
log '[^ ]*/cgi/crossing.*?\?' | perl $perl_utf8 -ne 'print "$1\n" if /city=([^&;\s]+)/' | sort -u | wc -l
log '[^ ]*/cgi/crossing.*?\?' | perl $perl_utf8 -ne 'print "$1\n" if /city=([^&;\s]+)/' | sort | uniq -c | sort -nr

echo ""
echo -n "street requests: "
log '[^ ]*/cgi/street-coord.cgi\?' | wc -l


echo ""
echo -n "bbbike cities pdf: "
log_post POST | egrep 'POST (/[a-z][a-z])?/[A-Z][a-z]+.*?\?|/[A-Z][a-z]+/ ' | perl $perl_utf8 -ne 'print "$1\n" if m,POST /[A-Z][a-z]+/(.*?), || m,POST /[a-z][a-z]/[A-Z][a-z]+/(.*?),' | wc -l
log_post POST | egrep 'POST (/[a-z][a-z])?/[A-Z][a-z]+/( |\?)' | perl $perl_utf8 -ne 'print "$2\n" if m,POST /([a-z][a-z]/)?([A-Z][a-z]+)/,' | sort | uniq -c | sort -nr

echo ""
echo -n "output formats total: "
log_post $url_match | egrep "GET $url_match.*?\?" |
	perl $perl_utf8 -ne 'print "$1 $2\n" if m,GET /(.*?[A-Z][^/]+)/.*?\?\S*output_as=([^;&\s]+),' | wc -l
echo "output formats: "
log_post $url_match | egrep "GET $url_match.*?\?" |
	perl $perl_utf8 -ne 'print "$1 $2\n" if m,GET /(.*?[A-Z][^/]+)/.*?\?\S*output_as=([^;&\s]+),' | sort | uniq -c | sort -nr

echo ""
echo -n "slippymap cities: "
log_post $url_match | egrep "GET $url_match.*?\?" | egrep 'startc=\w+.*zielc=\w+' | egrep -v 'cache=1' |
	perl $perl_utf8 -ne 'print "$1\n" if m,GET /([A-Z][a-z]+)/\?, || m,GET /([a-z][a-z]/[A-Z][a-z]+)/\?,' | wc -l
log_post $url_match | egrep "GET $url_match.*?\?" |
	egrep 'startc=\w+.*zielc=\w+' | egrep -v 'cache=1' |
	perl $perl_utf8 -ne 'print "$1\n" if m,GET /([A-Z][a-z]+)/\?, || m,GET /([a-z][a-z]/[A-Z][a-z]+)/\?,' |
	sort | uniq -c | sort -nr

echo ""
echo -n "slippymap cities IE6/7: "
log_post $url_match | egrep 'POST /cgi/slippymap.*?\?' | perl $perl_utf8 -ne 'print "$1\n" if m,city=(.*?)[&;],' | wc -l
log_post $url_match | egrep 'POST /cgi/slippymap.*?\?' |
	perl $perl_utf8 -ne 'print "$1\n" if m,city=(.*?)[&;\s],' | sort | uniq -c | sort -nr

echo ""
echo -n "maptype: "
total=`log_full maptype.cgi | awk '{print $7}' |
	perl -ne 'print "$2\n" if /city=([^&]*)&maptype=(.*)/' | wc -l`
echo $total
log_full maptype.cgi | awk '{print $7}' |
	perl -ne 'print "$2\n" if /city=([^&]*)&maptype=(.*)/' | sort | uniq -c | sort -nr | awk "{ printf (\"%4d %-2.1f%% %s\n\", \$1, \$1*100/$total, \$2) }"
echo ""
echo "maptype + city"
log_full maptype.cgi | awk '{print $7}' |
	perl -ne 'print "$1 $2\n" if /city=([^&]*)&maptype=(.*)/' | sort | uniq -c | sort -nr

echo ""
echo -n "Gpsies.com: "
log_full / | egrep '188.40.84.75' | wc -l
log_full / | egrep '188.40.84.75' | awk '{ print $7 }' | sort -u

echo ""
echo "Street click"
echo -n "streets.html: "
log_post ' (http://www.bbbike.org)?/[A-Z][^ ]*/streets.html' | awk '{ if ($11 != "\"-\"") { print $7, $11 } else { print $11 } }'| sort -u | wc -l
log_post ' (http://www.bbbike.org)?/[A-Z][^ ]*/streets.html' | awk '{ if ($12 != "\"-\"") { print $7 } }'| sort | uniq -c | sort -nr | head -50

echo ""
echo -n "Street route search: "
log_post / | awk '{if ($11 ~ /streets.html/ && $7 ~ /^\/[A-Z]/ && $7 ~ /startstreet/ ) { print $7, $11}}' | wc -l
log_post / | awk '{if ($12 ~ /streets.html/ && $7 ~ /^\/[A-Z]/ && $7 ~ /startstreet/ ) { print $7, $11}}' | sort | perl $perl_utf8 -MCGI -npe '$_ = CGI::unescape($_)'

echo ""
echo "blocked IP addresses"
log_full '" 403 ' | awk '{ print $1 }'| sort | uniq -c | sort -nr | $dns

echo ""
echo "bots?"
log_post / | egrep 'GET /[a-z][a-z]/' | egrep -v 'GET /(de|en)/' | egrep '" 200 ' | awk '{ print $1 }' | sort | uniq -c | sort -nr | $dns

echo ""
echo "Honey"
log_full '/honey' | awk '{ print $1 }'| sort | uniq -c | sort -nr | $dns

echo ""
echo "error 500"
log_full '" 500 ' | awk '{ print $1 }'| sort | uniq -c | sort -nr | $dns


if [ -s /var/log/lighttpd/download.bbbike.log ]; then
    echo ""
    echo -n "download stat: "
    awk '{ s+=$10 } END { print int(s/1024/1024), "MB" }' /var/log/lighttpd/download.bbbike.log

    echo ""
    echo "download stat by IP address: "
    awk '{ print $1 }' /var/log/lighttpd/download.bbbike.log | egrep -v '\.(sha256|md5) ' | sort | uniq -c | sort -nr | head -20

    echo ""
    egrep '\.osm\.[^ ]+ ' /var/log/lighttpd/download.bbbike.log | egrep 'GET ' | egrep -v '\.(sha256|md5) ' |
	awk '{print $7, int($10/1024/1024), "MB"}' | sort
fi

if [ -s /var/log/lighttpd/extract.bbbike.log ]; then
    echo ""
    echo -n "extract stat: "
    egrep ' /\?city=' extract.bbbike.log | wc -l

    echo ""
    echo "extract cities:"
    egrep ' /\?city=' extract.bbbike.log | perl -ne 'print "$1\n" if /city=(.*?)&/' | sort -u | perl -npe 'use CGI;; s,&,\t,g; $_=CGI::Util::unescape($_)'

    echo ""
    echo "extract statistics by format: "
    egrep  'GET /.city=' /var/log/lighttpd/extract.bbbike.log | awk '{print $7}' | perl -npe 'use CGI;; s,&,\t,g; $_=CGI::Util::unescape($_)' |
	perl -ne 'print "$1\n" if /\s+format=(\S+)/' | sort | uniq -c | sort -nr

    echo ""
    echo -n "extract statistics: "
    egrep  'GET /.city=' /var/log/lighttpd/extract.bbbike.log | awk '{print $7}' | sort -u | wc -l
    egrep  'GET /.city=' /var/log/lighttpd/extract.bbbike.log | awk '{print $7}' | sort -u | perl -npe 'use CGI;; s,&,\t,g; $_=CGI::Util::unescape($_)'
fi

echo ""
echo -n "bbbike stat: "
log_full / | awk '{ s+=$10 } END { print int(s/1024/1024), "MB" }'

echo ""
echo -n "CPU total: "
lastcomm | awk '{ s+=$4 + $5 } END { print int(s/60), " minutes" }'

echo ""
echo "CPU by process:"
lastcomm | perl -e 'while(<>) { @a= split; $time= $a[3]+$a[4]; $program{$a[0]}+=$time; }; foreach (keys %program) { print "$_\t", int($program{$_}/6+0.5)/10, " minutes\n"}' | sort -k2 -nr | head -20

