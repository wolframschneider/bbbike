#!/bin/sh
# Copyright (c) 2009-2011 Wolfram Schneider, http://bbbike.org
#
# osm2bbd-workarounds - wrapper script for osm-to-bbbike data conversion

set -e

prefix=$1
city=$2

time=time

if test -z "$prefix" -o -z "$city"; then
	echo "usage $0 prefix city"
	exit 2
fi

p=`pwd`/world/bin

# use original "strassen" data
if [ -e $prefix/$city/strassen-orig.gz ]; then
    zcat $prefix/$city/strassen-orig.gz > $prefix/$city/strassen
else 
    cp -f $prefix/$city/strassen $prefix/$city/strassen-orig
fi

( cd $prefix/$city; touch Berlin.coords.data Potsdam.coords.data comments_mount flaechen green nolighting plaetze qualitaet_s rbahn rbahnhof sbahn sbahnhof strassen ubahn ubahnhof wasserstrassen faehren )
$time ./miscsrc/osm2bbd-postprocess --debug=1 --force \
	-only-largest-city-is-center \
	--city-names="`world/bin/bbbike-db --city-names $city`" \
	--neighbours="`world/bin/bbbike-db --neighbours $city`" \
	--region="`world/bin/bbbike-db --region $city`" \
	--local-lang=`world/bin/bbbike-db --local-lang $city` \
	--only-inaccessible-streets \
		$prefix/$city


if [ $? != 0 ]; then
	echo "failed $city"
	exit $?
fi


# combine streets
for file in qualitaet_s strassen
do
   # XXX: remove duplicated lines from "strassen"
   perl -i.bak -ne 'if (/^\s*#/ || !$a{$_}) { print; $a{$_}=1 }' $prefix/$city/$file

  $time ./miscsrc/combine_streets.pl $prefix/$city/$file > $prefix/$city/$file.tmp
   mv -f $prefix/$city/$file.tmp $prefix/$city/$file
done


# Point of Interests
$time env CITY=$prefix/$city ./miscsrc/osm2bbd-poi > $prefix/$city/poi
perl -ne 'print if !/^\s*#/ && !/^\s+/' $prefix/$city/poi >> $prefix/$city/strassen

# towns, villages
if [ -e $prefix/$city/orte ]; then 
   perl -ne 'print if !/^\s*#/ && !/^\s+/' $prefix/$city/orte >> $prefix/$city/strassen
fi


cd $prefix/$city || exit 2
$p/strasse-str strassen

cat /dev/null > Berlin.coords.data

$time $p/opensearch-suggestion --gps=0 < strassen > opensearch.streetnames
perl -ne 'print if !/^\s+|^\s*#|^$/' strassen | sort -uf > opensearch.street-coordinates


# green ways
# perl -npe 's/^\s/XYZ\t/; s/RW1/green2/g' radwege_exact > green 

for i in Berlin.coords.data Potsdam.coords.data comments_mount flaechen green nolighting plaetze qualitaet_s rbahn rbahnhof sbahn sbahnhof strassen ubahn ubahnhof wasserstrassen faehren `find . -type f -size 0`
do

	if ! [ -s $i ]; then

cat << EOF > $i
#: #: -*- coding: utf-8 -*-
#:encoding: utf-8
#:map: polar
#:date: fixed
#:
EOF
	fi
done

# cleanup
rm -f *.bak

# compress unused files
ls | egrep -v '\.gz' | egrep "^_|^poi$|^strassen-orig$" | xargs gzip -f

