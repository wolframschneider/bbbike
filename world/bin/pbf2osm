#!/bin/sh
# Copyright (c) 2009-2013 Wolfram Schneider, http://bbbike.org
#
# pbf2osm - convert PBF format to OSM XML

PATH=/usr/local/bin:/bin:/bin:/usr/bin; export PATH
set -e

compress=""
gzip=`which pigz gzip | head -n 1`
bzip2=`which pbzip2 bzip2 | head -n 1`
osm2garmin=`dirname $0`/osm2garmin
osm2shape=`dirname $0`/osm2shape
osm2osmand=`dirname $0`/osm2osmand
osm2navit=`dirname $0`/osm2navit
osm2mapsforge=`dirname $0`/osm2mapsforge
osm2o5m=osmconvert

# max. file size in KB
: ${max_file_size_garmin=2950000}
: ${max_file_size_mapsforge=1950000}
: ${max_file_size_osmand=600000}
_max_cpu_time=7200

xz=`which xz | head -n 1`
xz_opt=-2
if which pixz >/dev/null; then
    xz="pixz -t"
fi

case $1 in
  # single core, more than one *.pbf files at once
  -gzip | --gzip)    shift; compress=gzip;;
  -bzip2 | --bzip2 ) shift; compress=bzip2 ;;

  # multi-core
  --pbzip2 ) shift; compress=pbzip2; _max_cpu_time=36000 ;;
  --pgzip | --pigz ) shift; compress=pgzip; _max_cpu_time=10800 ;;

  -o5m | --o5m ) shift; compress=o5m ;;
  -o5m-gzip | --o5m-gzip ) shift; compress=o5m-gzip ;;
  -o5m-bzip2 | --o5m-bzip2 ) shift; compress=o5m-bzip2 ;;

  -xz | --xz )       shift; compress=xz; _max_cpu_time=10800 ;;
  -shape | --shape | -shp | --shp | --shapefile ) shift; compress=shape ;;
  -osmand | --osmand | -obf | --obf ) shift; compress=osmand ;;
  -navit | --navit ) shift; compress=navit ;;

  -garmin | --garmin ) shift; compress=garmin; garmin_style=$2 ;;
  -garmin-osm | --garmin-osm ) shift; compress=garmin; garmin_style=osm ;;
  -garmin-cycle | --garmin-cycle ) shift; compress=garmin; garmin_style=cycle ;;
  -garmin-leisure | --garmin-leisure ) shift; compress=garmin; garmin_style=leisure ;;
  -garmin-bbbike | --garmin-bbbike ) shift; compress=garmin; garmin_style=bbbike ;;

  -mapsforge-osm | --mapsforge-osm ) shift; compress=mapsforge; mapsforge_style=osm ;;
esac

: ${max_cpu_time="$_max_cpu_time"}
ulimit -t $max_cpu_time

file=$1
city="$2"

usage () {
   echo "$@"
   echo "usage [ option ] file.osm.pbf"
   exit 1
}

if ! [ -f "$file" ]; then
    usage "missing file"	
fi

# run in quiet mode
global_opt=-q

osm2osm () {
compressionMethod=$1
shift
case $compressionMethod in
  gzip ) ext=.gz ;;
  bzip2 ) ext=.bz2 ;;
  * ) echo "unknown compress $compressionMethod"; exit 2;;
esac

args=""
for f
do
   ff=`echo $f | sed "s/\.pbf$/$ext.tmp/"`
   args="$args --read-pbf $f --write-xml $ff compressionMethod=$compressionMethod"
done


if osmosis $global_opt $args
then
    for f
    do
        ff=`echo $f | sed "s/\.pbf$/$ext/"`
        mv -f $ff.tmp $ff
        chmod 664 $ff
    done
else
    echo "File $@ failed"
    exit 2
fi
}

size=$(du -ks -L "$file" | awk '{ print $1}')
case $compress in
    garmin | navit | shape )
	if [ $size -gt $max_file_size_garmin ]; then
	  usage "file '$file' size to big: $size > $max_file_size_garmin"
	fi
	;;
    osmand )
	if [ $size -gt $max_file_size_osmand ]; then
	  usage "file '$file' size to big: $size > $max_file_size_osmand"
	fi
	;;
    mapsforge )
	if [ $size -gt $max_file_size_mapsforge ]; then
	  usage "file '$file' size to big: $size > $max_file_size_mapsforge"
	fi
	;;
    * ) ;;
esac

if [ "$compress" = "" ]; then
    osmosis $global_opt --read-pbf "$file" --write-xml /dev/stdout
else
    f=`basename $file .pbf`
    dir=`dirname $file`
    case $compress in
	gzip )  osm2osm $compress "$@";;
	bzip2 ) osm2osm $compress "$@";;

	pgzip ) osmosis $global_opt --read-pbf "$file" --write-xml /dev/stdout | $gzip > $dir/$f.gz.tmp; mv -f $dir/$f.gz.tmp $dir/$f.gz ;;
	pbzip2 ) osmosis $global_opt --read-pbf "$file" --write-xml /dev/stdout | $bzip2 > $dir/$f.bz2.tmp; mv -f $dir/$f.bz2.tmp $dir/$f.bz2 ;;

        o5m ) $osm2o5m "$file" --out-o5m ;;
        o5m-gzip ) $osm2o5m "$file" --out-o5m | $gzip > $dir/$f.o5m.gz.tmp; mv -f $dir/$f.o5m.gz.tmp $dir/$f.o5m.gz ;;
        o5m-bzip2 ) $osm2o5m "$file" --out-o5m | $bzip2 > $dir/$f.o5m.bz2.tmp; mv -f $dir/$f.o5m.bz2.tmp $dir/$f.o5m.bz2 ;;

	xz ) osmosis $global_opt --read-pbf "$file" --write-xml /dev/stdout | $xz $xz_opt > $dir/$f.tmp; mv -f $dir/$f.tmp $dir/$f.xz ;;
	garmin ) $osm2garmin "$file" "$garmin_style" "$city" ;;
	shape )  $osm2shape  "$file" "$city" ;;
       	osmand ) $osm2osmand "$file" "$city" ;;
       	navit )  $osm2navit  "$file" "$city" ;;
	mapsforge ) $osm2mapsforge "$file" "$mapsforge_style" "$city" ;;

	* ) echo >& 2 "Oops, unknown '$compress'"; exit 2 ;;
    esac
fi

