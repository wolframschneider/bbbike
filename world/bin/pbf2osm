#!/bin/sh
# Copyright (c) 2009-2013 Wolfram Schneider, http://bbbike.org
#
# pbf2osm - convert PBF format to OSM XML

PATH=/usr/local/bin:/bin:/bin:/usr/bin; export PATH
set -e

dirname=$(dirname $0)
compress=""
gzip=`which pigz gzip | head -n 1`
bzip2=`which pbzip2 bzip2 | head -n 1`
osm2garmin=$dirname/osm2garmin
osm2shape=$dirname/osm2shape
osm2osmand=$dirname/osm2osmand
osm2navit=$dirname/osm2navit
osm2mapsforge=$dirname/osm2mapsforge
: ${osm2o5m="osmconvert"}
: ${osm2o5m_opt="--fake-version"}

# max. file size in KB
: ${max_file_size_garmin=2950000}
: ${max_file_size_mapsforge=255000}
: ${max_file_size_osmand=600000}
_max_cpu_time=7200

xz=`which xz | head -n 1`
xz_opt=-2
if which pixz >/dev/null; then
    xz="pixz -t"
fi


: ${max_cpu_time="$_max_cpu_time"}
ulimit -t $max_cpu_time

usage () {
   echo "$@"
   cat <<EOF
usage [ option ] file.osm.pbf

--osm

--gzip
--pgzip
--bzip2
--pbzip2
--xz

--osmosis-gzip
--osmosis-bzip2
--osmosis-pgzip
--osmosis-pbzip2
--osmosis-xz

--osmosis

--o5m
--o5m-gzip
--o5m-bzip2
--o5m-xz
--csv
--csv-gzip
--csv-bzip2
--csv-xz

--shape
--osmand
--navit
--garmin-osm
--garmin-cycle
--garmin-leisure
--garmin-bbbike
--mapsforge-osm

EOF

   exit 1
}


case $1 in
    # default - convert to osm
    -osm | --osm)    shift; compress="";;

    # use old osmosis tool to conver to osm
    -osmosis | --osmosis)    shift; compress=cat;;

    # single core, more than one *.pbf files at once
    -gzip | --gzip)    shift; compress=gzip;;
    -bzip2 | --bzip2 ) shift; compress=bzip2 ;;

    # multi-core
    --pbzip2 ) shift; compress=pbzip2; _max_cpu_time=36000 ;;
    --pgzip | --pigz ) shift; compress=pgzip; _max_cpu_time=10800 ;;

    -o5m | --o5m ) shift; compress=o5m ;;
    -o5m-gzip | --o5m-gzip ) shift; compress=o5m-gzip ;;
    -o5m-bzip2 | --o5m-bzip2 ) shift; compress=o5m-bzip2 ;;
    -o5m-xz | --o5m-xz ) shift; compress=o5m-xz ;;

    -csv | --csv ) shift; compress=csv ;;
    -csv-gzip | --csv-gzip ) shift; compress=csv-gzip ;;
    -csv-bzip2 | --csv-bzip2 ) shift; compress=csv-bzip2 ;;
    -csv-xz | --csv-xz ) shift; compress=csv-xz ;;
    
    -xz | --xz )       shift; compress=xz; _max_cpu_time=10800 ;;
    -shape | --shape | -shp | --shp | --shapefile ) shift; compress=shape ;;
    -osmand | --osmand | -obf | --obf ) shift; compress=osmand ;;
    -navit | --navit ) shift; compress=navit ;;

    -garmin | --garmin ) shift; compress=garmin; garmin_style=$2 ;;
    -garmin-osm | --garmin-osm ) shift; compress=garmin; garmin_style=osm ;;
    -garmin-cycle | --garmin-cycle ) shift; compress=garmin; garmin_style=cycle ;;
    -garmin-leisure | --garmin-leisure ) shift; compress=garmin; garmin_style=leisure ;;
    -garmin-bbbike | --garmin-bbbike ) shift; compress=garmin; garmin_style=bbbike ;;

    -mapsforge-osm | --mapsforge-osm ) shift; compress=mapsforge; mapsforge_style=osm ;;

    -* ) usage "unknown option '$1'" ;;
esac

file="$1"
city="$2"

if ! [ -f "$file" ]; then
    usage "missing file"
fi

# run in quiet mode
global_opt=-q

osm2osm () {
    compressionMethod=$1
    shift
    case $compressionMethod in
        gzip ) ext=.gz ;;
        bzip2 ) ext=.bz2 ;;
        * ) echo "unknown compress $compressionMethod"; exit 2;;
    esac

    args=""
    for f
    do
        ff=`echo $f | sed "s/\.pbf$/$ext.tmp/"`
        args="$args --read-pbf $f --write-xml $ff compressionMethod=$compressionMethod"
    done


    if osmosis $global_opt $args
    then
        for f
        do
            ff=`echo $f | sed "s/\.pbf$/$ext/"`
            mv -f $ff.tmp $ff
            chmod 664 $ff
        done
    else
        echo "File $@ failed"
        exit 2
    fi
}

size=$(du -ks -L "$file" | awk '{ print $1}')
case $compress in
    garmin | navit | shape )
	if [ $size -gt $max_file_size_garmin ]; then
	  usage "file '$file' size to big: $size > $max_file_size_garmin"
	fi
	;;
    osmand )
	if [ $size -gt $max_file_size_osmand ]; then
	  usage "file '$file' size to big: $size > $max_file_size_osmand"
	fi
	;;
    mapsforge )
	if [ $size -gt $max_file_size_mapsforge ]; then
	  usage "file '$file' size to big: $size > $max_file_size_mapsforge"
	fi
	;;
    * ) ;;
esac

    f=`basename $file .pbf`
    dir=`dirname $file`
    case $compress in
	  "") $osm2o5m $osm2o5m_opt "$file" ;;
    	cat ) osmosis $global_opt --read-pbf "$file" --write-xml /dev/stdout ;;

	# legacy osmosis
	osmosis-gzip )   osm2osm $compress "$@";;
	osmosis-bzip2 )  osm2osm $compress "$@";;
	osmosis-pgzip )  osmosis $global_opt --read-pbf "$file" --write-xml /dev/stdout | $gzip > $dir/$f.gz.tmp; mv -f $dir/$f.gz.tmp $dir/$f.gz ;;
	osmosis-pbzip2 ) osmosis $global_opt --read-pbf "$file" --write-xml /dev/stdout | $bzip2 > $dir/$f.bz2.tmp; mv -f $dir/$f.bz2.tmp $dir/$f.bz2 ;;
	osmosis-xz )     osmosis $global_opt --read-pbf "$file" --write-xml /dev/stdout | $xz $xz_opt > $dir/$f.tmp; mv -f $dir/$f.tmp $dir/$f.xz ;;

	# compression
        gzip )   $osm2o5m $osm2o5m_opt "$file" | gzip > $dir/$f.gz.tmp; mv -f $dir/$f.gz.tmp $dir/$f.gz ;;
        bzip2 )  $osm2o5m $osm2o5m_opt "$file" | bzip2 > $dir/$f.bz2.tmp; mv -f $dir/$f.bz2.tmp $dir/$f.bz2 ;;
        pgzip )  $osm2o5m $osm2o5m_opt "$file" | $gzip > $dir/$f.gz.tmp; mv -f $dir/$f.gz.tmp $dir/$f.gz ;;
        pbzip2 ) $osm2o5m $osm2o5m_opt "$file" | $bzip2 > $dir/$f.bz2.tmp; mv -f $dir/$f.bz2.tmp $dir/$f.bz2 ;;
        xz )     $osm2o5m $osm2o5m_opt "$file" | $xz $xz_opt > $dir/$f.tmp; mv -f $dir/$f.tmp $dir/$f.xz ;;

	# o5m format
        o5m )       $osm2o5m $osm2o5m_opt --out-o5m "$file" ;;
        o5m-gzip )  $osm2o5m $osm2o5m_opt --out-o5m "$file" | $gzip > $dir/$f.o5m.gz.tmp; mv -f $dir/$f.o5m.gz.tmp $dir/$f.o5m.gz ;;
        o5m-xz )    $osm2o5m $osm2o5m_opt --out-o5m "$file" | $xz $xz_opt > $dir/$f.o5m.xz.tmp; mv -f $dir/$f.o5m.xz.tmp $dir/$f.o5m.xz ;;
        o5m-bzip2 ) $osm2o5m $osm2o5m_opt --out-o5m "$file" | $bzip2 > $dir/$f.o5m.bz2.tmp; mv -f $dir/$f.o5m.bz2.tmp $dir/$f.o5m.bz2 ;;
        
	# CSV format
        csv )       $osm2o5m $osm2o5m_opt --out-csv "$file" ;;
        csv-gzip )  $osm2o5m $osm2o5m_opt --out-csv "$file" | $gzip > $dir/$f.o5m.gz.tmp; mv -f $dir/$f.o5m.gz.tmp $dir/$f.o5m.gz ;;
        csv-xz )    $osm2o5m $osm2o5m_opt --out-csv "$file" | $xz $xz_opt > $dir/$f.o5m.xz.tmp; mv -f $dir/$f.o5m.xz.tmp $dir/$f.o5m.xz ;;
        csv-bzip2 ) $osm2o5m $osm2o5m_opt --out-csv "$file" | $bzip2 > $dir/$f.o5m.bz2.tmp; mv -f $dir/$f.o5m.bz2.tmp $dir/$f.o5m.bz2 ;;

	# other formats
	garmin ) $osm2garmin "$file" "$garmin_style" "$city" ;;
	shape )  $osm2shape  "$file" "$city" ;;
       	osmand ) $osm2osmand "$file" "$city" ;;
       	navit )  $osm2navit  "$file" "$city" ;;
	mapsforge ) $osm2mapsforge "$file" "$mapsforge_style" "$city" ;;

	* ) echo >& 2 "Oops, unknown '$compress'"; exit 2 ;;
    esac
