###############################################################
# Copyright (c) 2008-2013 Wolfram Schneider, http://bbbike.org
#
# Get and convert OpenStreetMap.org data to BBBike
#
# For more information about BBBike, visit http://www.bbbike.org
#


MAX_PARALLELS_OSM_DOWNLOADS=	2
NICE=		nice -n 10
NICE5=		nice -n 9
PERL=		perl
GIT_ID=		$(shell git show | head -n1 | awk '{ print $$2 }')
OSM2BBD_MAPTYPE=	#-map bbbike	
OSM_SOCKS_PROXY=	--socksproxy=socks://localhost:1080
OSM_TIMEOUT=	--timeout=45
DOWNLOADOSM_URL=	--osm-api-url=http://www.informationfreeway.org/api/0.6
DOWNLOADOSM=	${PERL} ./miscsrc/downloadosm --debug=1 ${OSM_SOCKS_PROXY} ${OSM_TIMEOUT} ${DOWNLOADOSM_URL}
#OSM2BBD=	${PERL} ./miscsrc/osm2bbd --nodate -f --debug=0 ${OSM2BBD_MAPTYPE} -ignore-unhandled -ignore-underline -experiment add_postal_code #-experiment polar_coord_hack
OSM2BBD_OPT=	--ignore-unhandled --ignore-underline-noname
OSM2BBD=	./miscsrc/osm2bbd ${OSM2BBD_OPT} --nodate --no-create --git-id="${GIT_ID}" -f --debug=0 ${OSM2BBD_MAPTYPE} -experiment add_postal_code -experiment handle_relations

MAX_CPU=	`world/bin/ncpu`
MAX_CPU2=	`world/bin/ncpu -1`
MAX_VCPU=	`world/bin/ncpu vcpu`
MAX_RCPU=	`world/bin/ncpu rcpu -1`
MAX_OSM2PBF=	1
MAX_OSM2GARMIN=	${MAX_CPU}
MAX_OSM2SHAPE=	${MAX_CPU}
MAX_PBF2OSM=	${MAX_CPU}
MAX_OSM2OSMAND=	${MAX_CPU}

XARGS=		${NICE} `which gxargs xargs | head -1`
TIME=		time
OSM2PBF=	world/bin/osm2pbf
PBF2OSM=	world/bin/pbf2osm
OSM_CHECKSUM=	world/bin/osm-checksum
PBF2PBF=	world/bin/pbf2pbf
OSM2GARMIN=	world/bin/osm2garmin
OSM2GARMIN_CYCLE=	world/bin/pbf2osm --garmin-cycle
OSM2SHAPE=	world/bin/osm2shape
OSM2OSMAND=	world/bin/osm2osmand
OSM2NAVIT=	world/bin/osm2navit

CITIES_DB=	world/etc/cities.csv
CITIES_FILE=world/etc/cities.txt
DB=world/bin/bbbike-db --city-database=${CITIES_DB}

GZIP:=             $(shell which pigz gzip | head -1)
BZIP2:=            $(shell which pbzip2 bzip2 | head -1)
OSMOSIS=	osmosis -q

OSM_DIR=	osm
OSP_DIR=	osp
DATA_OSM_DIR=	data-osm
DATA_OSM_BBBIKE_DIR=	data-osm.bbbike
OSMBIKE_DATA=	${DATA_OSM_BBBIKE_DIR}.tgz
DATA_DIR=	data
BBBIKE_CACHE_DIR=	/var/cache/bbbike
MAX_OSMOSIS=	${MAX_CPU}
LANGUAGES=	m da de en es fr hr nl pl pt ru zh
ELEVATION_SCRIPT=world/bin/elevation-database
MAX_ELEVATION_SCRIPTS=	1
BBBIKE_SERVER=""
BBBIKE_WEBSERVER_DIR=/usr/local/www/bbbike.org
BBBIKE_WEBSERVER_DOWNLOAD_DIR=/usr/local/www/download.bbbike.org
BBBIKE_WEB_DIR= ./
CACHE_HEATER_MAX=50
TMP=world/tmp
RM_BG=	world/bin/rm-bg
WEB_GROUP=	www-data
EXTRACTS_SPOOL_DIR=/var/cache/extract
POSTGIS_STYLE=/usr/share/osm2pgsql/osm2pgsql/bbbike.style
WEB_SERVER=	www.bbbike.org
API_SERVER=	api.bbbike.org/api/0.2
LOG_DIR=tmp
BBBIKE_PARTITION=	/bbbike

CITIES=$(shell ${PERL} -npe 's/\#.*//' ${CITIES_FILE})

TILES_DIR=	tile

#
# opensearch suggestion service for
# the world:
# 
OSM_AREAS_OPENSEARCH=data-opensearch-places
OSM_PLANET=	../osm/download/planet-latest.osm.bz2 
OSM_PLANET_PBF=	../osm/download/planet-latest.osm.pbf
#OSM_PLANET_PBF=	../osm/download/geofabrik/europe/germany/brandenburg.osm.pbf

OSM_AREAS_LARGE=	${OSM_PLANET_PBF}

OSM_AREAS= \
	../osm/download/geofabrik/europe/germany.osm.pbf \
	${OSM_AREAS_LARGE} \
	../osm/download/geofabrik/australia-oceania.osm.pbf \
	../osm/download/geofabrik/south-america.osm.pbf \
	../osm/download/geofabrik/africa.osm.pbf \
	../osm/download/geofabrik/central-america.osm.pbf \
	../osm/download/geofabrik/europe.osm.pbf \

# for tests only
OSM_AREAS2= \
	../osm/download/geofabrik/europe/germany/baden-wuerttemberg.osm.pbf \
	../osm/download/geofabrik/europe/germany/bayern.osm.pbf \
	../osm/download/geofabrik/europe/germany/berlin.osm.pbf \
	../osm/download/geofabrik/europe/germany/brandenburg.osm.pbf \
	../osm/download/geofabrik/europe/germany/bremen.osm.pbf 

OSM_AREAS3= \
	${OSM_AREAS_LARGE} \


all: help

build-runtime-perl:
	@world/bin/bbbike-build-runtime-perl.pl

build-runtime-symlinks:
	@world/bin/bbbike-build-symlinks

build-runtime: build-runtime-perl build-runtime-symlinks
	@world/bin/bbbike-build-runtime


convert-wgs84 convert: build-runtime convert2 #convert-post

convert-post: create-osp bbbike2wgs84 elevation-update

# convert bbbike files from OSM files
convert-bbbike-full: build-runtime-perl
	${MAKE} -f Makefile.osm DATA_OSM_DIR=${DATA_OSM_BBBIKE_DIR} OSM2BBD_MAPTYPE="-map bbbike" convert2
	rm -f ${DATA_OSM_BBBIKE_DIR}/*/opensearch.*
	rm -f ${DATA_OSM_BBBIKE_DIR}/*/_*
	rm -f ${DATA_OSM_BBBIKE_DIR}/*/*.gz
	for i in ${CITIES}; do \
	   ( cd ${DATA_OSM_BBBIKE_DIR}; tar cf - $$i | ${BZIP2} > $$i.tbz.tmp; mv -f $$i.tbz.tmp $$i.tbz; \
	     rm -rf $$i ); \
	done

# convert bbbike files from wgs84, much faster
convert-bbbike: build-runtime-perl
	echo ${CITIES} | ${XARGS} -E " " -n4 -P${MAX_VCPU} ./world/bin/wgs84-to-bbbike
	tar --exclude='_*' -cf - ${DATA_DIR} | ${NICE} bzip2 > ${DATA_OSM_BBBIKE_DIR}/data.tbz.tmp
	mv -f ${DATA_OSM_BBBIKE_DIR}/data.tbz.tmp ${DATA_OSM_BBBIKE_DIR}/data.tbz

_tarball:
	tar --exclude='_*' -cf - ${DATA_OSM_BBBIKE_DIR} | ${NICE} ${GZIP} > ${OSMBIKE_DATA}.tmp
	mv -f ${OSMBIKE_DATA}.tmp ${OSMBIKE_DATA}
	mkdir -p ../bbbike-macos/download
	cp -f ${OSMBIKE_DATA} ../bbbike-macos/download
	tar --exclude='_*' -cf - ${DATA_DIR} | ${NICE} ${BZIP2} > ${DATA_DIR}.tbz.tmp
	mv -f ${DATA_DIR}.tbz.tmp ${DATA_DIR}.tbz

cities-api:
	@for i in `${PERL} -e 'print "x " x 2'`; do ${MAKE} -f Makefile.osm _cities; done
	${MAKE} -f Makefile.osm cleanup-osm-error
	${MAKE} -f Makefile.osm _cities_complete
	${MAKE} -f Makefile.osm check-osm

#  completeWays=no completeRelations=no
_osmosis_opt:
	for i in ${CITIES}; do printf " --bp file=${OSM_DIR}/$$i/$$i.poly --wx file=${OSM_DIR}/$$i/$$i.osm.gz"; done

_osmosis_opt_pbf:
	if [ "$$OSM_DIR_NOSUBDIR" = "true" ]; then \
	  for i in ${CITIES}; do printf " --bp file=${OSM_DIR}/$$i.poly --write-pbf file=${OSM_DIR}/$$i.osm.pbf omitmetadata=true"; done; \
	else \
	  for i in ${CITIES}; do printf " --bp file=${OSM_DIR}/$$i/$$i.poly --write-pbf file=${OSM_DIR}/$$i/$$i.osm.pbf omitmetadata=true"; done; \
	fi

cities-poly: poly
	${NICE5} ${BZIP2} -dc ${OSM_PLANET} | ${NICE5} ${OSMOSIS} --rx enableDateParsing=no /dev/stdin --buffer bufferCapacity=2000 --tee `${MAKE} CITIES_DB=${CITIES_DB} CITIES="${CITIES}" -s -f Makefile.osm city-count` `${MAKE} CITIES_DB=${CITIES_DB} CITIES="${CITIES}" -s -f Makefile.osm _osmosis_opt`

_cities-osm: poly
	${NICE5} ${OSMOSIS} --read-pbf ${OSM_PLANET_PBF} --buffer bufferCapacity=2000 --tee `${MAKE} -s CITIES="${CITIES}" CITIES_DB=${CITIES_DB} -f Makefile.osm city-count` `${MAKE} -s CITIES="${CITIES}" CITIES_DB=${CITIES_DB} -f Makefile.osm _osmosis_opt`

_cities-pbf: poly
	${NICE5} ${OSMOSIS} --read-pbf ${OSM_PLANET_PBF} --buffer bufferCapacity=2000 --tee `${MAKE} -s CITIES="${CITIES}" CITIES_DB=${CITIES_DB} -f Makefile.osm city-count` `${MAKE} -s CITIES="${CITIES}" CITIES_DB=${CITIES_DB} -f Makefile.osm _osmosis_opt_pbf`
	${MAKE} -f Makefile.osm CITIES="${CITIES}" _pbf2pbf

cities-pbf cities: _cities-pbf
	${MAKE} -f Makefile.osm _pbf2pbf-checksum 
	${MAKE} -f Makefile.osm pbf2osm

cities-osm: _cities-osm
	${MAKE} -f Makefile.osm osm2pbf

# if an extract does not exists localy, try to fetch it from the web
fetch-extracts fetch:
	for i in ${CITIES}; do \
	   if [ ! -e ${OSM_DIR}/$$i/$$i.osm.pbf ]; then \
	      mkdir -p ${OSM_DIR}/$$i; \
	      echo "fetch from http://download.bbbike.org/osm/bbbike/$$i/$$i.osm.pbf"; \
	      curl -sSf -o ${OSM_DIR}/$$i/$$i.osm.pbf http://download.bbbike.org/osm/bbbike/$$i/$$i.osm.pbf; \
	      ( ./world/bin/pbf2osm ${OSM_DIR}/$$i/$$i.osm.pbf | ${GZIP} > ${OSM_DIR}/$$i/$$i.osm.gz.tmp; \
	         mv -f ${OSM_DIR}/$$i/$$i.osm.gz.tmp ${OSM_DIR}/$$i/$$i.osm.gz ) & \
	   fi; \
	done; wait

osm2pbf: 
	echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_/$$_.osm.gz\0, ' | ${XARGS} -n 1 -0 -P${MAX_OSM2PBF} ${OSM2PBF}

pbf2osm: 
	echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_/$$_.osm.pbf\0, ' | ${XARGS} -n 8 -0 -P2 ${PBF2OSM} --gzip
	echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_/$$_.osm.gz\0, ' | ${XARGS} -n 1 -0 -P${MAX_PBF2OSM} ${OSM_CHECKSUM}

_pbf2pbf: 
	if [ "$$OSM_DIR_NOSUBDIR" = "true" ]; then \
	  echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_.osm.pbf\0, ' | ${XARGS} -n32 -0 -P${MAX_PBF2OSM} ${PBF2PBF}; \
	else \
	  echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_/$$_.osm.pbf\0, ' | ${XARGS} -n8 -0 -P${MAX_PBF2OSM} ${PBF2PBF}; \
	fi

_pbf2pbf-checksum: 
	echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_/$$_.osm.pbf\0, ' | ${XARGS} -n 1 -0 -P${MAX_PBF2OSM} ${OSM_CHECKSUM}

osm2garmin: osm2garmin-osm osm2garmin-cycle osm2garmin-leisure check-zip 

osm2garmin-osm:
	echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_/$$_.osm.pbf\0, ' | ${XARGS} -n 1 -0 -P${MAX_OSM2GARMIN} ${OSM2GARMIN}

osm2garmin-cycle:
	echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_/$$_.osm.pbf\0, ' | env ext=garmin-cycle.zip ${XARGS} -n 1 -0 -P${MAX_OSM2GARMIN} ${OSM2GARMIN} 
osm2garmin-leisure:
	echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_/$$_.osm.pbf\0, ' | env ext=garmin-leisure.zip ${XARGS} -n 1 -0 -P${MAX_OSM2GARMIN} ${OSM2GARMIN}

osm2shape osm2shp:
	echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_/$$_.osm.pbf\0, ' | ${XARGS} -n 1 -0 -P${MAX_OSM2SHAPE} ${OSM2SHAPE}

osm2obf osm2osmand:
	echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_/$$_.osm.pbf\0, ' | ${XARGS} -n 1 -0 -P${MAX_OSM2OSMAND} ${OSM2OSMAND}
osm2navit:
	echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_/$$_.osm.pbf\0, ' | ${XARGS} -n 1 -0 -P${MAX_OSM2OSMAND} ${OSM2NAVIT}


osm-readme:
	for i in ${CITIES}; do \
	    perl -npe "s/%{city}/$$i/g" world/download/etc/CITY.txt > ${OSM_DIR}/$$i/HEADER.txt; \
        done

osm-html:
	cd cgi; \
	for i in ${CITIES}; do \
	  ./area.cgi --offline --city=$$i > ../${OSM_DIR}/$$i/index.html & \
	  ( cd ../${OSM_DIR}/$$i; sort -k2 $$i.osm.*.md5 ; sort -k2 $$i.osm*.sha256 ) > ../${OSM_DIR}/$$i/CHECKSUM.txt; \
        done; wait

_cities-parallel:
	@echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | env CITIES_DB=${CITIES_DB} ./world/bin/cities-parallel --xargs ${MAX_OSMOSIS} cities-pbf | ${TIME} xargs -0 -n1 -P${MAX_OSMOSIS} /bin/sh -c
_cities-parallel-pbf:
	@echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | env CITIES_DB=${CITIES_DB} ./world/bin/cities-parallel --xargs ${MAX_OSMOSIS} _cities-pbf | ${TIME} xargs -0 -n1 -P${MAX_OSMOSIS} /bin/sh -c

cities-parallel: _cities-parallel check-osm-gzip

_cities:
	@echo ${CITIES} | \
		${PERL} -npe 's/\s+/-download /g' | \
		${XARGS} -n 1 -P ${MAX_PARALLELS_OSM_DOWNLOADS} ${MAKE} -f Makefile.osm

_cities_complete:
	${MAKE} -f Makefile.osm OSM_TIMEOUT="--timeout=300" `echo ${CITIES} | ${PERL} -npe 's/\s+/-download /g'`
poly:
	${MAKE} -j ${MAX_VCPU} -f Makefile.osm `echo ${CITIES} | ${PERL} -npe 's/\s+/-poly /g'`

city-count:
	@echo ${CITIES}  | wc -w

city-reorder:
	@cd ${OSM_DIR}; du -ks * | sort -nr | ../world/bin/bbbike-reorder-cities.pl

city-file:
	#( echo Bogota; ${MAKE} -s city-reorder | awk '{print $$2 }' | egrep -v Bogota ) > ${CITIES_FILE}
	${MAKE} -s city-reorder | awk '{print $$2 }'  > ${CITIES_FILE}

city-memory:
	echo ${CITIES} | ${TIME} ${XARGS} -E " " -n1 -P${MAX_RCPU} ./world/bin/bbbike-memory

update-robots.txt:
	( cat world/web/robots.txt.in; \
	  echo ${LANGUAGES} | ${PERL} -npe 's,\s+,\n,g' | sort | egrep -v "^en$$" | \
	   ${PERL} -ne 'chomp; next if $$_ eq "m"; s,^,Disallow: /,; print "$$_/\n" '; \
	  ${PERL} -e 'for ("A".."Z") { print qq{Disallow: /m/$$_\n} }'; \
	  echo ${CITIES} | ${PERL} -npe 's,\s+,\n,g' | sort | \
	   ${PERL} -ne 'chomp; s,^,Disallow: /,; print "$$_/?\n" '; \
	  for i in ${CITIES}; do \
            en=`${DB} --local-lang $$i | ${PERL} -npe 's/\s+//g'`; \
	    case $$en in \
		en ) echo "Disallow: /en/$$i/" ;; \
		*  ) echo "Disallow: /en/$$i/?" ;; \
	    esac; \
	  done; \
	) > world/web/robots.txt


# faster than planet-streets
planet-places:
	@mkdir -p ${OSM_AREAS_OPENSEARCH}
	@PATH=$$PATH:`pwd`/world/bin; \
	for i in ${OSM_AREAS}; do \
		printf "./world/bin/planet-places-suggestions ${OSM_AREAS_OPENSEARCH}/`basename $$i .osm.pbf`-places $$i\0"; \
	done | ${XARGS} -0 -n1 -P${MAX_CPU2} sh -c

planet-streets:
	@mkdir -p ${OSM_AREAS_OPENSEARCH}
	@PATH=$$PATH:`pwd`/world/bin; \
	for i in ${OSM_AREAS}; do \
		printf "./world/bin/planet-streets-suggestions ${OSM_AREAS_OPENSEARCH}/`basename $$i .osm.pbf` $$i\0"; \
	done | ${XARGS} -0 -n1 -P${MAX_CPU2} sh -c

##########################################################################################
# check if the downloaded OSM files are valid
#
check-osm: check-osm-gzip check-osm-error

check-osm-gzip:
	@find ${OSM_DIR} -name '*.gz' -print0 | ${XARGS} -0 -n8 -P${MAX_CPU} ${GZIP} -t

check-zip:
	@find ${OSM_DIR} -name '*.zip' -print0 | ${XARGS} -0 -n1 -P${MAX_CPU} unzip -qq -t
	find ${OSM_DIR} -name '*.zip' -size -10k

check-osm-error:
	@find ${OSM_DIR} -name '*.gz' -print0 | ${XARGS} -0 -n8 -P${MAX_CPU} zegrep -l '<error>' || true

cleanup-osm-error:
	${MAKE} -f Makefile.osm check-osm 2>&1 | grep ^gzip | awk '{ print $$2 }' | ${PERL} -npe 's,:,,' | sort -u | ${XARGS} rm -f
	@find ${OSM_DIR} -name '*.gz' -print0 | ${XARGS} -0 -n8 -P${MAX_CPU} zegrep -l '<error>' | ${XARGS} rm -f

check-data-osm:
	echo ${CITIES} | ${XARGS} -E " " -n1 -P${MAX_VCPU} ./world/bin/check-data-osm

check-routing:
	echo ${CITIES} | ${XARGS} -E " " -n8 -P1 ./world/bin/routing-validate.pl --number=1 | \
	  ${XARGS} -0 -n1 -P${MAX_CPU} sh -c 
	echo ${CITIES} | ${XARGS} -E " " -n8 -P1 ./world/bin/routing-validate.pl --number=50 | \
	  ${XARGS} -0 -n1 -P${MAX_CPU} sh -c 

check-routing-fast:
	@echo ${CITIES} | ${XARGS} -E " " -n1 -P${MAX_CPU} ./world/bin/routing-validate.pl --number=1 | \
	  ${XARGS} -0 -n1 -P${MAX_CPU} /bin/sh -c
	@echo ${CITIES} | ${XARGS} -E " " -n1 -P${MAX_CPU} ./world/bin/routing-validate.pl --number=4 | \
	  ${XARGS} -0 -n1 -P${MAX_CPU} /bin/sh -c

convert2: convert3 convert-workarounds
# using GNU xargs -P parallel
convert3:
	mkdir -p ${DATA_OSM_DIR}
	cd ${OSM_DIR} # test
	echo ${CITIES} " " | ${PERL} -npe 's/\s+/-convert /g' | \
	   ${XARGS} -n 1 -P ${MAX_VCPU} ${TIME} ${MAKE} -f Makefile.osm

check: test

check-bbd:
	for i in ${CITIES}; do echo ${DATA_OSM_DIR}/$$i; done | \
	  ${XARGS} -n 1 -P ${MAX_CPU} ./miscsrc/check_bbd --debug=0 -dir

convert-workarounds:

osm2bbd-workarounds opensearch:
	for i in ${CITIES}; do echo $$i; done | \
	  ${XARGS} -n 1 -P ${MAX_VCPU} world/bin/osm2bbd-workarounds ${DATA_OSM_DIR}

bbbike-osm2pbf:
	find ${OSM_DIR} -name '*.osm.gz' -print0 | ${XARGS} -0 -n 1 -P ${MAX_CPU} ${OSM2PBF}

opensearch-bbbike:
	world/bin/opensearch-suggestion --gps=0 --input-charset=iso-8859-1 < data/strassen > data/opensearch.streetnames

_c = ${CITIES}
_cd = $(_c:=-download)
_cc = $(_c:=-convert)
_cp = $(_c:=-poly)


$(_cd):
	c=`basename $@ -download`; mkdir -p ${OSM_DIR}/$$c; \
		${DOWNLOADOSM} --step=`${DB} --step $$c` -o ${OSM_DIR}/$$c -- `${DB} --coord $$c`

$(_cc):
	${DB} --lang `basename $@ -convert` >/dev/null
	c=`basename $@ -convert`; \
	  test -n "$$c"; \
	  mkdir -p ${DATA_OSM_DIR}/tmp; \
	  rm -rf ${DATA_OSM_DIR}/tmp/$$c; \
	  if [ -e ${LOG_DIR}/city.$$c.log ]; then gzip -f ${LOG_DIR}/city.$$c.log; fi; \
	  ( \
	    ${TIME} ${OSM2BBD} -lang `${DB} --lang $$c` -o ${DATA_OSM_DIR}/tmp/$$c ${OSM_DIR}/$$c; \
	    ${TIME} world/bin/osm2bbd-workarounds ${DATA_OSM_DIR}/tmp $$c; \
	  ) > ${LOG_DIR}/city.$$c.log 2>&1 ; \
	  if [ $$? != 0 ]; then \
	    tail ${LOG_DIR}/city.$$c.log; \
	    exit 1; \
	  fi; \
	  rm -rf ${DATA_OSM_DIR}/$$c; mv ${DATA_OSM_DIR}/tmp/$$c ${DATA_OSM_DIR}

$(_cp):
	if [ "$$OSM_DIR_NOSUBDIR" = "true" ]; then \
	    c=`basename $@ -poly`; ${DB} --poly $$c > ${OSM_DIR}/$$c.poly; \
	else \
	    c=`basename $@ -poly`; mkdir -p ${OSM_DIR}/$$c; ${DB} --poly $$c > ${OSM_DIR}/$$c/$$c.poly.tmp; mv -f ${OSM_DIR}/$$c/$$c.poly.tmp ${OSM_DIR}/$$c/$$c.poly; \
	fi

${CITIES}:
	${MAKE} -f Makefile.osm $@-download $@-convert
	
######################################################################

rsync: sync-sitemap osm-header _rsync rsync-osm
rsync-bg: _rsync

_rsync:
	rsync -a --exclude='*.bak' --exclude='*.gz' --exclude=${LOG_DIR} --delete-excluded --delete --max-delete=512 ${DATA_OSM_DIR} ${BBBIKE_SERVER}${BBBIKE_WEBSERVER_DIR}
	-rsync -av --exclude='*.bak' data/opensearch.streetnames ${BBBIKE_SERVER}${BBBIKE_WEBSERVER_DIR}/data
	@echo ""
	@echo "don't forget to cleanup the data cache in ${BBBIKE_CACHE_DIR}, run:"
	@echo "$$ sudo make clean-cache; make cache-heater"

rsync-osm:
	rsync -a --exclude='*.bak' ${OSM_DIR} ${BBBIKE_SERVER}${BBBIKE_WEBSERVER_DIR}

# delete old files
rsync-osm-full:
	rsync -a --exclude='*.bak' --delete-excluded --delete --max-delete=512 ${OSM_DIR} ${BBBIKE_SERVER}${BBBIKE_WEBSERVER_DIR}


osm-header:
	if ! test -e ${OSM_DIR}/HEADER.txt; then \
	   cd ${OSM_DIR}; \
	   ln -fs ../world/download/osm/bbbike/HEADER.txt .; \
	fi

rsync-osm-devel rsync-osm-dev:
	rsync -azv --delete --max-delete=512 bbbike.org:projects/bbbike/osm .

rsync-planet:
	cd ../osm/download; \
	   ${NICE5} rsync -av planet-latest.osm.bz2 planet-latest.osm.bz2.md5 \
		planet-latest.osm.pbf planet-latest.osm.pbf.md5 planet-latest.osm.pbf.sha256 bbbike:projects/osm/download

create-bbbike-web-symlinks-bbbike.en.cgi:
	cd ${BBBIKE_WEB_DIR}/cgi && ln -fs bbbike.cgi bbbike.en.cgi

update-feed:
	${MAKE} -C world/web/feed

create-bbbike-web-symlinks: create-bbbike-web-symlinks-bbbike.en.cgi index update-feed bbbike-org-t
	ln -fs world/Makefile.osm ${BBBIKE_WEB_DIR}
	ln -fs Makefile.osm Makefile
	cd world/web; \
	  for i in images html cgi osm data-osm doc osp; do \
	    ln -fs ../../$$i .; \
	  done; \
	  ln -fs images/srtbike1.ico favicon.ico # buggy browsers
	cd world/web && \
	rm -rf ${LANGUAGES}; \
	mkdir -p ${LANGUAGES}; \
	for city in ${CITIES} bbbike; do \
		( rm -rf $$city; mkdir -p $$city; cd $$city; \
		ln -fs ../../cgi/world.cgi index.cgi; \
		ln -fs ../../../cgi/bbbike.cgi $$city.cgi; \
		); \
		for lang in ${LANGUAGES}; do \
		  ( cd $$lang && ln -fs ../$$city ); \
		done; \
	done
	for script in MyCgiSimple.pm  api.cgi area.cgi livesearch.cgi  location.cgi maptype.cgi slippymap.cgi  street-coord.cgi crossing.cgi streets.cgi  weather.cgi languages.cgi extract.cgi tile-size.cgi livesearch-extract.cgi; do \
	   ( cd ${BBBIKE_WEB_DIR}/cgi && ln -fs ../world/cgi/$$script ); \
	done
	cp -f world/web/index.de.html world/web/de/index.html
	cp -f world/web/index.m.html world/web/m/index.html
	for i in ${LANGUAGES}; do \
		case $$i in \
			m | de );; \
			*) ${PERL} -npe "s,<a href=\"../$$i/\" title=\"(.*?)\">$$i</a>,<span class=\"current_language\" title=\"$1\">$$i</span>,"  world/web/index.en.html > world/web/$$i/index.html;; \
		esac \
	done

bbbike-org-t:
	cd world/web; ln -fs ../../data
	cd cgi; ln -fs bbbike.cgi bbbike-test.cgi

TAGCLOUD=	world/bin/tagcloud 
MOBILE_LINKS=	world/bin/mobile-links 
INDEX_UPDATE=	world/bin/index-update ${TMP}

tagcloud index:
	( cd world/web && mkdir -p ${LANGUAGES} )
	( cd ${TMP} && rm -f de.cities.* en.cities.* local.cities.* mobile.en )
	${TAGCLOUD} --lang=de --area=de < ${CITIES_DB} > ${TMP}/de.cities.de
	${TAGCLOUD} --lang=de --area=eu < ${CITIES_DB} > ${TMP}/de.cities.eu
	${TAGCLOUD} --lang=de --area=other --level=9 < ${CITIES_DB} > ${TMP}/de.cities.other
	${TAGCLOUD} --lang=en --area=de < ${CITIES_DB} > ${TMP}/en.cities.de
	${TAGCLOUD} --lang=en --area=eu < ${CITIES_DB} > ${TMP}/en.cities.eu
	${TAGCLOUD} --lang=en --area=other --level=9 < ${CITIES_DB} > ${TMP}/en.cities.other
	${TAGCLOUD} --lang=local --area=de < ${CITIES_DB} > ${TMP}/local.cities.de
	${TAGCLOUD} --lang=local --area=eu < ${CITIES_DB} > ${TMP}/local.cities.eu
	${TAGCLOUD} --lang=local --area=other --level=9 < ${CITIES_DB} > ${TMP}/local.cities.other
	${PERL} -i -npe 's,( href="(.*?)/?"), class="C_$$2"$$1,g' ${TMP}/de.cities.* ${TMP}/en.cities.* ${TMP}/local.cities.*
	${MOBILE_LINKS} --local-names=1 --split-city-names=1 --lang=en < ${CITIES_DB} > ${TMP}/mobile.en
	${INDEX_UPDATE} world/web/index.m.html.in > world/web/index.m.html
	${INDEX_UPDATE} world/web/index.de.html.in > world/web/index.de.html
	${INDEX_UPDATE} world/web/index.en.html.in > world/web/index.en.html
	${INDEX_UPDATE} world/web/index.html.in > world/web/index.html


kml:
	world/bin/bbbike-world-kml ${CITIES_DB} > world/web/bbbike-world.kml

bbbike2wgs84:
	./world/bin/bbbike2wgs84

bbbike2wgs84-mapnik:
	if test -e ${LOG_DIR}/bbbike-mapnik.osm.gz; then mv -f ${LOG_DIR}/bbbike-mapnik.osm.gz ${LOG_DIR}/bbbike-mapnik.osm.gz.old; fi
	${NICE} ./miscsrc/bbd2osm --optimize-for=mapnik ${DATA_DIR} | ${GZIP} > ${LOG_DIR}/bbbike-mapnik.osm.gz.tmp
	mv -f ${LOG_DIR}/bbbike-mapnik.osm.gz.tmp ${LOG_DIR}/bbbike-mapnik.osm.gz

bbbike-tile-update:
	cd ../bbbike-eserte && git pull
	${MAKE} DATA_DIR=../bbbike-eserte/data bbbike2wgs84-mapnik  bbbike-mapnik-postgis tile-distclean

bbbike-mapnik-config:
	if test -e ${POSTGIS_STYLE}; then \
	    mv -f ${POSTGIS_STYLE} ${POSTGIS_STYLE}.bak; \
	fi
	cat /usr/share/osm2pgsql/osm2pgsql/default.style world/tile/etc/bbbike.style.inc > ${POSTGIS_STYLE}

bbbike-mapnik-postgis:
	osm2pgsql --slim -S ${POSTGIS_STYLE} -c ${LOG_DIR}/bbbike-mapnik.osm.gz

planet-download:
	download_script=`pwd`/world/bin/planet-download; cd ../osm/download && $$download_script

planet-geofabrik-download:
	download_script=`pwd`/world/bin/planet-geofabrik-download; \
		cd ../osm/download && $$download_script

create-osp:
	rm -rf ${OSP_DIR}
	mkdir ${OSP_DIR}
	./world/bin/bbbike-world-opensearch-plugin ${OSP_DIR} ${CITIES}
	
rsync-tgz:
	rsync -a ${DATA_OSM_BBBIKE_DIR}/ ${BBBIKE_SERVER}/usr/local/www/download.bbbike.org/bbbike/${DATA_OSM_DIR}
	rsync -a world/etc/cities.csv ${BBBIKE_SERVER}/usr/local/www/download.bbbike.org/bbbike/${DATA_OSM_DIR}

clean-tile:
	world/bin/tile-cache-cleanup

clean: rotate-data-osm
	${MAKE} -C cgi/msg $@	
	${MAKE} -C world/bin $@	
	${MAKE} -C world/cgi $@	
	${MAKE} -C world/web/feed $@	
	rm -f *.bak *.tdy
	cd world/web && rm -rf ${LANGUAGES}
	cd world/web && rm -rf ${CITIES} bbbike
	rm -f ${OSMBIKE_DATA}

clean-cache cache-clean:
	du -hs ${BBBIKE_CACHE_DIR}/
	du -hs ${BBBIKE_CACHE_DIR}/*
	mkdir -p ${BBBIKE_CACHE_DIR}/${WEB_SERVER} ${BBBIKE_CACHE_DIR}/localhost
	mkdir -p ${BBBIKE_CACHE_DIR}/tmp.$$$$; \
	    mv -f ${BBBIKE_CACHE_DIR}/*bbbike.org ${BBBIKE_CACHE_DIR}/localhost ${BBBIKE_CACHE_DIR}/tmp.$$$$ || true; \
	    rm -rf ${BBBIKE_CACHE_DIR}/tmp.$$$$ &
	find /var/cache/lighttpd -type f -print0 | ${PERL} -n0e unlink

cache-gc:
	find ${BBBIKE_CACHE_DIR}/ -type f -mtime +21 -print0 | ${PERL} -n0e unlink

rotate-data-osm:
	${RM_BG} ${DATA_OSM_DIR}.old2
	${RM_BG} ${DATA_OSM_BBBIKE_DIR}.old2
	-test -e ${DATA_OSM_DIR}.old && mv ${DATA_OSM_DIR}.old ${DATA_OSM_DIR}.old2
	-test -e ${DATA_OSM_DIR}     && mv ${DATA_OSM_DIR}     ${DATA_OSM_DIR}.old
	-test -e ${DATA_OSM_BBBIKE_DIR}.old && mv ${DATA_OSM_BBBIKE_DIR}.old ${DATA_OSM_BBBIKE_DIR}.old2
	-test -e ${DATA_OSM_BBBIKE_DIR}     && mv ${DATA_OSM_BBBIKE_DIR}     ${DATA_OSM_BBBIKE_DIR}.old
	mkdir -p ${DATA_OSM_DIR} ${DATA_OSM_BBBIKE_DIR}
	touch ${DATA_OSM_DIR}/.touch ${DATA_OSM_BBBIKE_DIR}/.touch

rotate-osm:
	${RM_BG} ${OSM_DIR}.old2
	-test -e ${OSM_DIR}.old  && mv ${OSM_DIR}.old  ${OSM_DIR}.old2
	-test -e ${OSM_DIR}      && mv ${OSM_DIR}      ${OSM_DIR}.old 

update-database: build-runtime 
	@${MAKE} -s -f Makefile.osm opensearch-bbbike
	${TIME} ./world/bin/update-database

PERL_SCRIPTS=	BBBikeGooglemap.pm BBBikeElevation.pm miscsrc/osm2bbd-poi t/bbbike-org-*.t
_perlcheck:
	@echo ${PERL_SCRIPTS} | ${XARGS} -n1 -P${MAX_VCPU} -E " " ${PERL} -cw >/dev/null 2>&1

_perltidy: _perlcheck
	echo ${PERL_SCRIPTS} | ${XARGS} -n2 -P${MAX_VCPU} -E " " perltidy -b

perltidy:
	${MAKE} _perltidy
	${MAKE} -C cgi/msg $@	
	${MAKE} -C world/bin $@	
	${MAKE} -C world/cgi $@	
	${MAKE} -C world/web/feed $@	
	git diff

perlcheck:
	${MAKE} _perlcheck
	${MAKE} -C cgi/msg $@	
	${MAKE} -C world/bin $@	
	${MAKE} -C world/cgi $@	
	${MAKE} -C world/web/feed $@	
	git diff

jsbeautifier js:
	${MAKE} -C html $@
	${MAKE} -C world/tile/web $@

tidy:
	tidy -i -m -w 128 world/web/help.html

create-sitemap:
	${MAKE} -C world/sitemap sitemaps

sync-sitemap: create-sitemap
	rsync -a world/web/sitemap.xml.gz ${BBBIKE_SERVER}${BBBIKE_WEBSERVER_DIR}/world/web
	rsync -a world/download/sitemap.xml.gz ${BBBIKE_SERVER}${BBBIKE_WEBSERVER_DIR}/../download.bbbike.org

update-files: kml create-osp index update-robots.txt create-bbbike-web-symlinks java-config update-javascript #create-sitemap

update-javascript:
	make -C html bbbike-js

java-config:
	test -r $$HOME/.osmosis || ln -fs $$HOME/projects/bbbike/world/etc/dot.osmosis $$HOME/.osmosis

dist-clean devel-clean distclean: clean rotate-osm
	${RM_BG} ${OSM_DIR}
	mkdir -p ${OSM_DIR}

clean-planet:
	${RM_BG} ../osm/download/*.old.*

elevation-check:
	${NICE} ${ELEVATION_SCRIPT} --database=../osm/srtm/elevation.db --check

elevation-repair:
	${NICE} ${ELEVATION_SCRIPT} --database=../osm/srtm/elevation.db --repair-database

elevation-fetch:
	${NICE} ${ELEVATION_SCRIPT} --database=../osm/srtm/elevation.db --debug=1 --geonames-user=bbbikeworld ${CITIES}

elevation-update:
	echo ${CITIES} | ${XARGS} -E " " -n500 -P${MAX_ELEVATION_SCRIPTS} ${ELEVATION_SCRIPT} --readonly-database --database=../osm/srtm/elevation.db --debug=0

# re-build cache
_cache-heater: cache-gc cache-heater-streets cache-heater-common 
cache-heater: _cache-heater
#cache-heater:
#	date

cache-heater-common: 
	@echo "cache usage before"
	du -hs ${BBBIKE_CACHE_DIR}/
	if `ls ${BBBIKE_CACHE_DIR}/* 2>/dev/null`; then du -hs ${BBBIKE_CACHE_DIR}/*; fi
	echo ${CITIES} | ${PERL} -npe 's/ /\n/g' | \
	   ${PERL} -ne 'chomp; print "http://'${WEB_SERVER}'/$$_/?generate_cache=1\0"; print "http://'${API_SERVER}'/$$_/?generate_cache=1\0"' | \
	   ${XARGS} -0 -n1 -P${MAX_CPU} curl -sS >/dev/null
	@echo "cache usage after"
	du -hs ${BBBIKE_CACHE_DIR}/
	du -hs ${BBBIKE_CACHE_DIR}/*

cache-heater-streets: cache-heater-homepage cache-heater-opensearch
	echo ${CITIES} | ${PERL} -npe 's/ /\n/g' | \
		${PERL} -e 'while(<>) { chomp; push @a, "http://'${WEB_SERVER}'/$$_/streets.html"; push @b, "http://'${WEB_SERVER}'/en/$$_/streets.html" } print join "\0", @a, @b, ""' | \
		${XARGS} -0 -n1 -P${MAX_CPU} curl -sS >/dev/null

cache-heater-homepage: cache-heater-osp
	echo ${CITIES} | ${PERL} -npe 's/ /\n/g' | \
		${PERL} -e 'while(<>) { chomp; push @a, "http://'${WEB_SERVER}'/$$_/"; push @b, "http://'${WEB_SERVER}'/en/$$_/"; push @c, "http://'${WEB_SERVER}'/m/$$_/" } print join "\0", @a, @b, @c, ""' | \
		${XARGS} -0 -n1 -P${MAX_CPU} curl -sS >/dev/null

cache-heater-osp:
	find osp -name '*.xml' -print0 | perl -n0e 'print qq{http://'${WEB_SERVER}'/$$_}' | \
		${XARGS} -0 -n1 -P${MAX_CPU} curl -sS >/dev/null

cache-heater-opensearch:
	cat ${BBBIKE_WEBSERVER_DIR}/data-osm/*/opensearch.streetnames | wc -c >/dev/null

varnish-purge-all:
	./world/bin/varnish-purge-all

symlink-download:
	cd ${BBBIKE_WEBSERVER_DIR}/../download.bbbike.org; \
	  ln -fs ../bbbike.org/world/download/favicon.ico . ; \
	  ln -fs ../bbbike.org/world/download/index.html  . ; \
	  ln -fs ../bbbike.org/world/web/robots-download.txt robots.txt ; \
	  cd osm; ln -fs ../../bbbike.org/world/download/osm/index.html  .

cache-install:
	cd ${BBBIKE_PARTITION}; mkdir -p cache
	ln -fs ${BBBIKE_PARTITION}/cache ${BBBIKE_CACHE_DIR}

extract-install extract-bbbike-org-install:
	cd ${BBBIKE_PARTITION}; mkdir -p extract
	ln -fs ${BBBIKE_PARTITION}/extract ${EXTRACTS_SPOOL_DIR}
	mkdir -p ${EXTRACTS_SPOOL_DIR}/incoming
	mkdir -p ${EXTRACTS_SPOOL_DIR}/confirmed
	mkdir -p ${EXTRACTS_SPOOL_DIR}/running
	mkdir -p ${EXTRACTS_SPOOL_DIR}/osm
	mkdir -p ${EXTRACTS_SPOOL_DIR}/download
	mkdir -p ${EXTRACTS_SPOOL_DIR}/trash
	mkdir -p ${EXTRACTS_SPOOL_DIR}/failed
	chmod -R 775 ${EXTRACTS_SPOOL_DIR}/
	chgrp -R ${WEB_GROUP} ${EXTRACTS_SPOOL_DIR}/

extract-distclean:
	find ${EXTRACTS_SPOOL_DIR} -type f -print0 | xargs -0 rm -f

# garbage collection, 2 days
extract-gc:
	cd ${EXTRACTS_SPOOL_DIR}; find incoming confirmed running download osm -type f -mtime +4 -print0 | xargs -0 rm -f
	if test -e ${BBBIKE_PARTITION}/tmpfs; then \
	    find ${BBBIKE_PARTITION}/tmpfs -type f -mtime +1 -print0 | xargs -0 rm -f; \
	fi

# garbage collection, 7 days, all files
extract-gc7:
	find ${EXTRACTS_SPOOL_DIR} -type f -mtime +14  -print0 | xargs -0 rm -f
	
staging: 
	${MAKE} -f Makefile.osm -s perlcheck 2>/dev/null
	git push
	cd /usr/local/www/bbbike.org/; git diff; git pull; ${MAKE} -s update-files; git diff


# extract 180x360 data tiles from planet.osm
tile-lng:
	mkdir -p ${TILES_DIR}/tmp ${TILES_DIR}/cities tmp
	./world/bin/tile-lng.pl > ${TILES_DIR}/cities/cities2.csv
	awk -F: '{ print $$1 }' ${TILES_DIR}/cities/cities2.csv > ${TILES_DIR}/cities/cities2.txt

tile-lnglat:
	env TILES_DIR=${TILES_DIR} ./world/bin/tile-lnglat0.sh
	./world/bin/tile-lnglat.pl > ${TILES_DIR}/lnglat.sh

tile-lnglat-run:
	${TIME} env OSM_DIR_NOSUBDIR=true ${XARGS} -0 -n1 -P${MAX_CPU} /bin/sh -c < ${TILES_DIR}/lnglat.sh

tile-lng-run:
	env OSM_DIR_NOSUBDIR=true LOG_DIR=${TILES_DIR}/tmp ${MAKE} -s LOG_DIR=${TILES_DIR}/tmp -f Makefile.osm \
	   CITIES_FILE=${TILES_DIR}/cities/cities2.txt CITIES_DB=${TILES_DIR}/cities/cities2.csv \
	   MAX_CPU=${MAX_CPU} JAVACMD_OPTIONS2= OSM_DIR=${TILES_DIR}/lng _cities-parallel-pbf


_pbf_dir=${TILES_DIR}/lnglat/
_max_size= #-size +100k"
tile-convert:
	find ${_pbf_dir} -name '*.pbf' -print0 | ${NICE} ${TIME} xargs -0 -n36 -P${MAX_CPU} ${PBF2OSM} --gzip
	find ${_pbf_dir} -name '*.pbf' ${_max_size} -print0 | osm_checksum=true ${NICE} ${TIME} xargs -0 -n1 -P${MAX_VCPU} ${OSM2SHAPE}
	find ${_pbf_dir} -name '*.osm.gz' ${_max_size} -print0 | osm_checksum=true ${NICE} ${TIME} xargs -0 -n1 -P${MAX_VCPU} ${OSM2NAVIT}
	find ${_pbf_dir} -name '*.pbf' ${_max_size} -print0 | osm_checksum=true ${NICE} ${TIME} xargs -0 -n1 -P${MAX_VCPU} ${OSM2GARMIN_CYCLE}
	find ${_pbf_dir} -name '*.pbf' ${_max_size} -print0 | osm_checksum=true max_jobs=1 java_heap=1500M ${NICE} ${TIME} xargs -0 -n1 -P${MAX_VCPU} ${OSM2OSMAND}

tile-extract: tile-lng tile-lnglat tile-lng-run tile-lnglat-run

tile-csv:
	rm -f ${TILES_DIR}/etc/tile-*.csv
	mkdir -p ${TILES_DIR}/etc
	for format in pbf osm.gz garmin-cycle.zip shp.zip navit.zip obf.zip; do \
	   ( cd ${TILES_DIR}/lnglat; find . -name '*.'$$format | xargs du -k |sort -n | \
	     perl -npe 's,\S+/planet_(.*?)\.osm\.\S+,\1,; s,_, ,g' ) > ${TILES_DIR}/etc/tile-$$format.csv; \
	done
	ls -l ${TILES_DIR}/etc/tile-*.csv

tile-checksum:
	cd ${_pbf_dir}; pwd=`pwd`; \
	for i in *; do \
	   cd $$pwd/$$i && ( md5sum `ls -v planet*` > CHECKSUM.md5; shasum -a 256 `ls -v planet*` > CHECKSUM.sha256 & );  \
	done; wait

tile-distclean:
	rm -rf ${TILES_DIR}

tile-rsync:
	rsync -av ${TILES_DIR}/lnglat/ ${BBBIKE_WEBSERVER_DOWNLOAD_DIR}/osm/planet/${TILES_DIR}/lnglat/

# for errors look in ./tile/tmp
tile: tile-extract tile-convert tile-checksum tile-csv 


DOWNLOAD_PREFIX=/usr/local/www/download.bbbike.org
download-bbbike-org-install:
	mkdir -p ${DOWNLOAD_PREFIX}
	mkdir -p ${DOWNLOAD_PREFIX}/osm/planet
	mkdir -p ${DOWNLOAD_PREFIX}/bbbike
	cd ${DOWNLOAD_PREFIX}; \
	  ln -fs ../bbbike.org/world/download/favicon.ico; \
	  ln -fs ../bbbike.org/world/download/index.html; \
	  ln -fs ../bbbike.org/world/web/robots-download.txt robots.txt
	cd ${DOWNLOAD_PREFIX}/osm; \
	  if ! test -e bbbike; then ln -fs ../../bbbike.org/osm bbbike; fi; \
	  ln -fs ../../bbbike.org/world/download/osm/index.html; \
	  ln -fs ${EXTRACTS_SPOOL_DIR}/download extract
	cd ${DOWNLOAD_PREFIX}/osm/bbbike; \
	  ln -fs ../world/download/osm/bbbike/HEADER.txt .; \
	cd ${DOWNLOAD_PREFIX}/osm/planet; \
	  ln -fs $$HOME/projects/osm/download/planet-latest.osm.bz2 . ;\
	  ln -fs $$HOME/projects/osm/download/planet-latest.osm.pbf . ;\
	  ln -fs $$HOME/projects/osm/download/planet-latest.osm.pbf.md5 . ;\
	  ln -fs $$HOME/projects/osm/download/planet-latest.osm.pbf.sha1 . ;\
	  ln -fs $$HOME/projects/osm/download/planet-latest.osm.bz2.md5 . ;\
	  ln -fs ../../../bbbike.org/world/download/osm/planet/HEADER.txt .
	cd ${DOWNLOAD_PREFIX}/..; mkdir -p osm; cd osm; \
	  ln -fs ../download.bbbike.org/osm/planet download

#
# build Osmand.net devel java libs
# start this command in the top-level directory of
# Osmand git checkout, e.g.:
#
# git clone https://github.com/osmandapp/Osmand.git
# cd Osmand
# make -f this.makefile osmand-devel
#
osmand-devel:
	cd DataExtractionOSM; \
	   ant clean compile build -logfile build.log
	dir=OsmAndMapCreator-development-`date +%Y-%m-%d`; \
	   rm -rf $$dir; mkdir $$dir; \
	   (cd $$dir; unzip -q ../DataExtractionOSM/build.zip ); \
	   zip -rq $$dir.zip $$dir; \
	   ls -l `pwd`/$$dir.zip

test-org:
	./world/bin/update-lighttpd-template

test prove:
	time prove -j${MAX_CPU}

help:
	@echo "bbbike version: ${GIT_ID}"
	@echo ""
	@echo "usage: make [ targets ... ]"
	@echo ""
	@echo "  [ "`${PERL} -e 'print join " ", sort @ARGV' ${CITIES}` "]"
	@echo ""
	@echo "  [ help | cities | cities-parallel | fetch-extracts ]"
	@echo "  [ rsync | rsync-tgz | rsync-osm | rsync-osm-dev ]"
	@echo "  [ rsync-planet | symlink-download ]"
	@echo "  [ jsbeautifier | perltidy | tidy ]"
	@echo ""
	@echo "  [ bbbike-osm2pbf | osm2pbf | pbf2osm ]"
	@echo "  [ osm2garmin | osm2shape | osm2osmand | osm2navit ]"
	@echo "  [ bbbike2wgs84-mapnik | bbbike-mapnik-config ]"
	@echo "  [ bbbike-mapnik-postgis | bbbike-tile-update ]"
	@echo ""
	@echo "  [ clean | dist-clean | clean-cache | clean-planet | clean-tile ]"
	@echo ""
	@echo "  [ create-osp | bbbike2wgs84 | update-robots.txt | create-sitemap ]"
	@echo "  [ cache-install | cache-heater | cache-heater-streets ]"
	@echo "  [ create-bbbike-web-symlinks | kml | create-osp | index ]"
	@echo "  [ convert-wgs84 | convert-bbbike | convert-bbbike-full ]"
	@echo "  [ city-count | city-reorder | city-file | check-osm | cleanup-osm-error ]"
	@echo "  [ check-routing | check-routing-fast | perlcheck ]"
	@echo "  [ city-memory | varnish-purge-all ]"
	@echo "  [ osm-html ]"
	@echo ""
	@echo "  [ elevation-fetch | elevation-update | elevation-check | elevation-repair ]"
	@echo ""
	@echo "  [ planet-download | planet-geofabrik-download ]"
	@echo "  [ planet-streets | planet-places ]"
	@echo "  [ update-database | update-files ]"
	@echo "  [ download-bbbike-org-install ]"
	@echo ""
	@echo "  [ staging | extract-bbbike-org-install | extract-distclean ]"
	@echo "  [ extract-gc | extract-gc7 | extract-gc-osm ]"
	@echo "  [ tile | tile-extract | tile-convert | tile-csv | tile-checksum ]"
	@echo "  [ tile-distclean | tile-rsync ]"
	@echo "  [ test-org | test ]"
	@echo ""
	@echo "see also ./world/README"

