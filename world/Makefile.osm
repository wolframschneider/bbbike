###############################################################
# Copyright (c) 2008-2011 Wolfram Schneider, http://bbbike.org
#
# Get and convert OpenStreetMap.org data to BBBike
#
# For more information about BBBike, visit http://www.bbbike.de
#


MAX_PARALLELS_OSM_DOWNLOADS=	2
NICE=		nice -n 10
NICE5=		nice -n 9
PERL=		perl
GIT_ID=		$(shell git show | head -n1 | awk '{ print $$2 }')
OSM2BBD_MAPTYPE=	#-map bbbike	
OSM_SOCKS_PROXY=	--socksproxy=socks://localhost:1080
OSM_TIMEOUT=	--timeout=45
DOWNLOADOSM_URL=	--osm-api-url=http://www.informationfreeway.org/api/0.6
DOWNLOADOSM=	${PERL} ./miscsrc/downloadosm --debug=1 ${OSM_SOCKS_PROXY} ${OSM_TIMEOUT} ${DOWNLOADOSM_URL}
#OSM2BBD=	${PERL} ./miscsrc/osm2bbd --nodate -f --debug=0 ${OSM2BBD_MAPTYPE} -ignore-unhandled -ignore-underline -experiment add_postal_code #-experiment polar_coord_hack
OSM2BBD=	./miscsrc/osm2bbd --ignore-underline-noname --nodate --no-create --git-id="${GIT_ID}" -f --debug=0 ${OSM2BBD_MAPTYPE} -experiment add_postal_code -experiment handle_relations
MAX_CPU=	`world/bin/ncpu`
MAX_CPU2=	`world/bin/ncpu -1`
MAX_VCPU=	`world/bin/ncpu vcpu`
MAX_RCPU=	`world/bin/ncpu rcpu -1`
XARGS=		${NICE} `which gxargs xargs | head -1`
TIME=		time
OSM2PBF=	world/bin/osm2pbf
DB=world/bin/bbbike-db
GZIP:=             $(shell which pigz gzip | head -1)
BZIP2:=            $(shell which pbzip2 bzip2 | head -1)
OSMOSIS=	osmosis -q

OSM_DIR=	osm
OSP_DIR=	osp
DATA_OSM_DIR=	data-osm
DATA_OSM_BBBIKE_DIR=	data-osm.bbbike
OSMBIKE_DATA=	${DATA_OSM_BBBIKE_DIR}.tgz
DATA_DIR=	data
BBBIKE_CACHE_DIR=	/var/cache/bbbike
MAX_OSMOSIS=	${MAX_CPU}
LANGUAGES=	m da de en es fr hr nl pl pt ru zh
ELEVATION_SCRIPT=world/bin/elevation-database
BBBIKE_SERVER=""
BBBIKE_WEBSERVER_DIR=/usr/local/www/bbbike.org
BBBIKE_WEB_DIR= ./
CACHE_HEATER_MAX=50
TMP=world/tmp

CITIES_FILE=world/etc/cities.txt
CITIES=$(shell ${PERL} -npe 's/\#.*//' ${CITIES_FILE})

#
# opensearch suggestion service for
# the world:
# 
OSM_AREAS_OPENSEARCH=data-opensearch-places
OSM_PLANET=	../osm-streetnames/download/planet-latest.osm.bz2 
OSM_PLANET_PBF=	../osm-streetnames/download/planet-latest.osm.pbf

OSM_AREAS_LARGE=	${OSM_PLANET_PBF}

OSM_AREAS= \
	../osm-streetnames/download/geofabrik/europe/germany.osm.pbf \
	${OSM_AREAS_LARGE} \
	../osm-streetnames/download/geofabrik/australia-oceania.osm.pbf \
	../osm-streetnames/download/geofabrik/south-america.osm.pbf \
	../osm-streetnames/download/geofabrik/africa.osm.pbf \
	../osm-streetnames/download/geofabrik/central-america.osm.pbf \
	../osm-streetnames/download/geofabrik/europe.osm.pbf \

# for tests only
OSM_AREAS2= \
	../osm-streetnames/download/geofabrik/europe/germany/baden-wuerttemberg.osm.pbf \
	../osm-streetnames/download/geofabrik/europe/germany/bayern.osm.pbf \
	../osm-streetnames/download/geofabrik/europe/germany/berlin.osm.pbf \
	../osm-streetnames/download/geofabrik/europe/germany/brandenburg.osm.pbf \
	../osm-streetnames/download/geofabrik/europe/germany/bremen.osm.pbf 

OSM_AREAS3= \
	${OSM_AREAS_LARGE} \


all: help

build-runtime-perl:
	@world/bin/bbbike-build-runtime-perl.pl

build-runtime-symlinks:
	@world/bin/bbbike-build-symlinks

build-runtime: build-runtime-perl build-runtime-symlinks
	@world/bin/bbbike-build-runtime


convert-wgs84 convert: build-runtime convert2 #convert-post

convert-post: create-osp bbbike2wgs84 elevation-update

# convert bbbike files from OSM files
convert-bbbike-full: build-runtime-perl
	${MAKE} -f Makefile.osm DATA_OSM_DIR=${DATA_OSM_BBBIKE_DIR} OSM2BBD_MAPTYPE="-map bbbike" convert2
	rm -f ${DATA_OSM_BBBIKE_DIR}/*/opensearch.*
	rm -f ${DATA_OSM_BBBIKE_DIR}/*/_*
	rm -f ${DATA_OSM_BBBIKE_DIR}/*/*.gz
	for i in ${CITIES}; do \
	   ( cd ${DATA_OSM_BBBIKE_DIR}; tar cf - $$i | ${BZIP2} > $$i.tbz.tmp; mv -f $$i.tbz.tmp $$i.tbz; \
	     rm -rf $$i ); \
	done

# convert bbbike files from wgs84, much faster
convert-bbbike: build-runtime-perl
	echo ${CITIES} | ${TIME} ${XARGS} -E " " -n4 -P${MAX_VCPU} ./world/bin/wgs84-to-bbbike
	tar --exclude='_*' -cf - ${DATA_DIR} | ${NICE} ${BZIP2} > ${DATA_OSM_BBBIKE_DIR}/data.tbz.tmp
	mv -f ${DATA_OSM_BBBIKE_DIR}/data.tbz.tmp ${DATA_OSM_BBBIKE_DIR}/data.tbz

_tarball:
	tar --exclude='_*' -cf - ${DATA_OSM_BBBIKE_DIR} | ${NICE} ${GZIP} > ${OSMBIKE_DATA}.tmp
	mv -f ${OSMBIKE_DATA}.tmp ${OSMBIKE_DATA}
	mkdir -p ../bbbike-macos/download
	cp -f ${OSMBIKE_DATA} ../bbbike-macos/download
	tar --exclude='_*' -cf - ${DATA_DIR} | ${NICE} ${BZIP2} > ${DATA_DIR}.tbz.tmp
	mv -f ${DATA_DIR}.tbz.tmp ${DATA_DIR}.tbz

cities-api:
	@for i in `${PERL} -e 'print "x " x 2'`; do ${MAKE} -f Makefile.osm _cities; done
	${MAKE} -f Makefile.osm cleanup-osm-error
	${MAKE} -f Makefile.osm _cities_complete
	${MAKE} -f Makefile.osm check-osm

#  completeWays=no completeRelations=no
_osmosis_opt:
	for i in ${CITIES}; do printf " --bp file=${OSM_DIR}/$$i/$$i.poly --wx file=${OSM_DIR}/$$i/$$i.osm.gz"; done

cities-poly: poly
	${NICE5} ${BZIP2} -dc ${OSM_PLANET} | ${NICE5} ${OSMOSIS} --rx enableDateParsing=no /dev/stdin --buffer bufferCapacity=12000 --tee `${MAKE} -s -f Makefile.osm city-count` `${MAKE} -s -f Makefile.osm _osmosis_opt`

cities-pbf cities: poly
	${NICE5} ${OSMOSIS} --read-pbf ${OSM_PLANET_PBF} --buffer bufferCapacity=12000 --tee `${MAKE} -s CITIES="${CITIES}" -f Makefile.osm city-count` `${MAKE} -s CITIES="${CITIES}" -f Makefile.osm _osmosis_opt`
	${MAKE} -f Makefile.osm osm2pbf

osm2pbf:
	echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ${PERL} -ne 'chomp; print qq,'${OSM_DIR}'/$$_/$$_.osm.gz\0, ' | ${XARGS} -n 1 -0 -P1 ${OSM2PBF}

cities-parallel:
	@echo ${CITIES} | ${PERL} -npe 's/\s+/\n/g' | ./world/bin/cities-parallel --xargs ${MAX_OSMOSIS} cities-pbf | xargs -0 -n1 -P${MAX_OSMOSIS} /bin/sh -c
	${MAKE} -f Makefile.osm check-osm-gzip

_cities:
	@echo ${CITIES} | \
		${PERL} -npe 's/\s+/-download /g' | \
		${XARGS} -n 1 -P ${MAX_PARALLELS_OSM_DOWNLOADS} ${MAKE} -f Makefile.osm

_cities_complete:
	${MAKE} -f Makefile.osm OSM_TIMEOUT="--timeout=300" `echo ${CITIES} | ${PERL} -npe 's/\s+/-download /g'`
poly:
	${MAKE} -j ${MAX_VCPU} -f Makefile.osm `echo ${CITIES} | ${PERL} -npe 's/\s+/-poly /g'`

city-count:
	@echo ${CITIES}  | wc -w

city-reorder:
	@cd ${OSM_DIR}; du -ks * | sort -nr | ../world/bin/bbbike-reorder-cities.pl

city-file:
	#( echo Bogota; ${MAKE} -s city-reorder | awk '{print $$2 }' | egrep -v Bogota ) > ${CITIES_FILE}
	${MAKE} -s city-reorder | awk '{print $$2 }'  > ${CITIES_FILE}

city-memory:
	echo ${CITIES} | ${NICE} ${TIME} ${XARGS} -E " " -n1 -P${MAX_RCPU} ./world/bin/bbbike-memory

update-robots.txt:
	( cat world/web/robots.txt.in; \
	  echo ${LANGUAGES} | ${PERL} -npe 's,\s+,\n,g' | sort | egrep -v "^en$$" | \
	   ${PERL} -ne 'chomp; next if $$_ eq "m"; s,^,Disallow: /,; print "$$_/\n" '; \
	  ${PERL} -e 'for ("A".."Z") { print qq{Disallow: /m/$$_\n} }'; \
	  echo ${CITIES} | ${PERL} -npe 's,\s+,\n,g' | sort | \
	   ${PERL} -ne 'chomp; s,^,Disallow: /,; print "$$_/?\n" '; \
	  for i in ${CITIES}; do \
            en=`${DB} --local-lang $$i | ${PERL} -npe 's/\s+//g'`; \
	    case $$en in \
		en ) echo "Disallow: /en/$$i/" ;; \
		*  ) echo "Disallow: /en/$$i/?" ;; \
	    esac; \
	  done; \
	) > world/web/robots.txt

# using GNU xargs -P parallel
osm-areas2:
	#rm -rf ${OSM_AREAS_OPENSEARCH}.old
	#if test -e ${OSM_AREAS_OPENSEARCH}; then mv ${OSM_AREAS_OPENSEARCH} ${OSM_AREAS_OPENSEARCH}.old; fi
	mkdir -p ${OSM_AREAS_OPENSEARCH}
	cd ${OSM_AREAS_OPENSEARCH} && mkdir -p `echo ${OSM_AREAS} | ${PERL} -npe 's/\.osm\.bz2//g'`
	echo ${OSM_AREAS} " " | \
	  ${PERL} -ne 'chomp; foreach (split) { print qq{PATH=\$$PATH:`pwd`/world/bin world/bin/osm2suggestions ../osm/download/$$_ '${OSM_AREAS_OPENSEARCH}'/$$_\0} }' | \
	  ${XARGS} -0 -n1 -P${MAX_CPU2} sh -c

# faster than planet-streets
planet-places:
	@mkdir -p ${OSM_AREAS_OPENSEARCH}
	@PATH=$$PATH:`pwd`/world/bin; \
	for i in ${OSM_AREAS}; do \
		printf "./world/bin/planet-places-suggestions ${OSM_AREAS_OPENSEARCH}/`basename $$i .osm.pbf`-places $$i\0"; \
	done | ${XARGS} -0 -n1 -P${MAX_CPU2} sh -c

planet-streets:
	@mkdir -p ${OSM_AREAS_OPENSEARCH}
	@PATH=$$PATH:`pwd`/world/bin; \
	for i in ${OSM_AREAS}; do \
		printf "./world/bin/planet-streets-suggestions ${OSM_AREAS_OPENSEARCH}/`basename $$i .osm.pbf` $$i\0"; \
	done | ${XARGS} -0 -n1 -P${MAX_CPU2} sh -c

##########################################################################################
# check if the downloaded OSM files are valid
#
check-osm: check-osm-gzip check-osm-error

check-osm-gzip:
	@find ${OSM_DIR} -name '*.gz' -print0 | ${XARGS} -0 -n8 -P${MAX_VCPU} gzip -t

check-osm-error:
	@find ${OSM_DIR} -name '*.gz' -print0 | ${XARGS} -0 -n8 -P${MAX_VCPU} zegrep -l '<error>' || true

cleanup-osm-error:
	${MAKE} -f Makefile.osm check-osm 2>&1 | grep ^gzip | awk '{ print $$2 }' | ${PERL} -npe 's,:,,' | sort -u | ${XARGS} rm -f
	@find ${OSM_DIR} -name '*.gz' -print0 | ${XARGS} -0 -n8 -P${MAX_CPU} zegrep -l '<error>' | ${XARGS} rm -f


convert2: convert3 convert-workarounds
# using GNU xargs -P parallel
convert3:
	#rm -rf ${DATA_OSM_DIR}.old
	#if test -e ${DATA_OSM_DIR}; then cp -rp ${DATA_OSM_DIR} ${DATA_OSM_DIR}.old;  fi
	mkdir -p ${DATA_OSM_DIR}
	cd ${OSM_DIR} # test
	echo ${CITIES} " " | ${PERL} -npe 's/\s+/-convert /g' | \
	   ${XARGS} -n 1 -P ${MAX_VCPU} ${TIME} ${MAKE} -f Makefile.osm

check:
	for i in ${CITIES}; do echo ${DATA_OSM_DIR}/$$i; done | \
	  ${XARGS} -n 1 -P ${MAX_CPU} ./miscsrc/check_bbd --debug=0 -dir

convert-workarounds: opensearch-bbbike

osm2bbd-workarounds opensearch:
	for i in ${CITIES}; do echo $$i; done | \
	  ${XARGS} -n 1 -P ${MAX_VCPU} world/bin/osm2bbd-workarounds ${DATA_OSM_DIR}

bbbike-osm2pbf:
	find ${OSM_DIR} -name '*.osm.gz' -print0 | ${XARGS} -0 -n 1 -P ${MAX_CPU} ${OSM2PBF}

opensearch-bbbike:
	world/bin/opensearch-suggestion --gps=0 --input-charset=iso-8859-1 < data/strassen > data/opensearch.streetnames

_c = ${CITIES}
_cd = $(_c:=-download)
_cc = $(_c:=-convert)
_cp = $(_c:=-poly)


$(_cd):
	c=`basename $@ -download`; mkdir -p ${OSM_DIR}/$$c; \
		${DOWNLOADOSM} --step=`${DB} --step $$c` -o ${OSM_DIR}/$$c -- `${DB} --coord $$c`

$(_cc):
	c=`basename $@ -convert`; \
	  test -n "$$c"; \
	  mkdir -p ${DATA_OSM_DIR}/tmp; \
	  rm -rf ${DATA_OSM_DIR}/tmp/$$c; \
	  if [ -e tmp/city.$$c.log ]; then gzip -f tmp/city.$$c.log; fi; \
	  ( \
	    ${TIME} ${OSM2BBD} -lang `${DB} --lang $$c` -o ${DATA_OSM_DIR}/tmp/$$c ${OSM_DIR}/$$c; \
	    ${TIME} world/bin/osm2bbd-workarounds ${DATA_OSM_DIR}/tmp $$c; \
	  ) > tmp/city.$$c.log 2>&1 ; \
	  if [ $$? != 0 ]; then \
	    tail tmp/city.$$c.log; \
	    exit 1; \
	  fi; \
	  rm -rf ${DATA_OSM_DIR}/$$c; mv ${DATA_OSM_DIR}/tmp/$$c ${DATA_OSM_DIR}

$(_cp):
	@c=`basename $@ -poly`; mkdir -p ${OSM_DIR}/$$c; ${DB} --poly $$c > ${OSM_DIR}/$$c/$$c.poly.tmp; mv -f ${OSM_DIR}/$$c/$$c.poly.tmp ${OSM_DIR}/$$c/$$c.poly

${CITIES}:
	${MAKE} -f Makefile.osm $@-download $@-convert
	
######################################################################

rsync-osm rsync: sync-sitemap
	rsync -a --exclude='*.bak' --exclude='_*.gz' --delete-excluded --delete --max-delete=512 ${OSM_DIR}/ download.bbbike.org:/usr/local/www/download.bbbike.org/osm/bbbike
	rsync -a --exclude='*.bak' --exclude='_*.gz' --delete-excluded --delete --max-delete=512 ${DATA_OSM_DIR} ${OSM_DIR} ${OSP_DIR} ${BBBIKE_SERVER}${BBBIKE_WEBSERVER_DIR}
	#-rsync -a --exclude='*.bak' --exclude='_*.gz' --delete-excluded --delete --max-delete=512 ${OSM_AREAS_OPENSEARCH} ${BBBIKE_SERVER}${BBBIKE_WEBSERVER_DIR}
	-rsync -av --exclude='*.bak' data/opensearch.streetnames ${BBBIKE_SERVER}${BBBIKE_WEBSERVER_DIR}/data
	@echo ""
	@echo "don't forget to cleanup the data cache in ${BBBIKE_CACHE_DIR}, run:"
	@echo "$$ sudo make clean-cache"

rsync-osm-devel rsync-osm-dev:
	rsync -azv --delete --max-delete=512 bbbike.org:projects/bbbike/osm .

rsync-planet:
	cd ../osm-streetnames/download; \
	   rsync -av planet-latest.osm.bz2 planet-latest.osm.bz2.md5 \
		planet-latest.osm.pbf planet-latest.osm.pbf.md5 bbbike:projects/osm-streetnames/download

create-bbbike-web-symlinks-bbbike.en.cgi:
	cd ${BBBIKE_WEB_DIR}/cgi && ln -fs bbbike.cgi bbbike.en.cgi

update-feed:
	${MAKE} -C world/web/feed

create-bbbike-web-symlinks: create-bbbike-web-symlinks-bbbike.en.cgi index update-feed
	ln -fs world/Makefile.osm ${BBBIKE_WEB_DIR}
	ln -fs Makefile.osm Makefile
	cd world/web; \
	  for i in images html cgi osm data-osm doc osp; do \
	    ln -fs ../../$$i .; \
	  done; \
	  ln -fs images/srtbike1.ico favicon.ico # buggy browsers
	cd world/web && \
	rm -rf ${LANGUAGES}; \
	mkdir -p ${LANGUAGES}; \
	for city in ${CITIES} bbbike; do \
		( rm -rf $$city; mkdir -p $$city; cd $$city; \
		ln -fs ../../cgi/world.cgi index.cgi; \
		ln -fs ../../../cgi/bbbike.cgi $$city.cgi; \
		); \
		for lang in ${LANGUAGES}; do \
		  ( cd $$lang && ln -fs ../$$city ); \
		done; \
	done
	for script in MyCgiSimple.pm  api.cgi area.cgi livesearch.cgi  location.cgi maptype.cgi slippymap.cgi  street-coord.cgi crossing.cgi streets.cgi  weather.cgi languages.cgi; do \
	   ( cd ${BBBIKE_WEB_DIR}/cgi && ln -fs ../world/cgi/$$script ); \
	done
	cp -f world/web/index.de.html world/web/de/index.html
	cp -f world/web/index.m.html world/web/m/index.html
	for i in ${LANGUAGES}; do \
		case $$i in \
			m | de );; \
			*) ${PERL} -npe "s,<a href=\"../$$i/\" title=\"(.*?)\">$$i</a>,<span class=\"current_language\" title=\"$1\">$$i</span>,"  world/web/index.en.html > world/web/$$i/index.html;; \
		esac \
	done

TAGCLOUD=	world/bin/tagcloud 
MOBILE_LINKS=	world/bin/mobile-links 
INDEX_UPDATE=	world/bin/index-update ${TMP}
CITIES_DB=	world/etc/cities.csv

tagcloud index:
	( cd world/web && mkdir -p ${LANGUAGES} )
	( cd ${TMP} && rm -f de.cities.* en.cities.* local.cities.* mobile.en )
	${TAGCLOUD} --lang=de --area=de < ${CITIES_DB} > ${TMP}/de.cities.de
	${TAGCLOUD} --lang=de --area=eu < ${CITIES_DB} > ${TMP}/de.cities.eu
	${TAGCLOUD} --lang=de --area=other --level=9 < ${CITIES_DB} > ${TMP}/de.cities.other
	${TAGCLOUD} --lang=en --area=de < ${CITIES_DB} > ${TMP}/en.cities.de
	${TAGCLOUD} --lang=en --area=eu < ${CITIES_DB} > ${TMP}/en.cities.eu
	${TAGCLOUD} --lang=en --area=other --level=9 < ${CITIES_DB} > ${TMP}/en.cities.other
	${TAGCLOUD} --lang=local --area=de < ${CITIES_DB} > ${TMP}/local.cities.de
	${TAGCLOUD} --lang=local --area=eu < ${CITIES_DB} > ${TMP}/local.cities.eu
	${TAGCLOUD} --lang=local --area=other --level=9 < ${CITIES_DB} > ${TMP}/local.cities.other
	${PERL} -i -npe 's,( href="(.*?)/?"), class="C_$$2"$$1,g' ${TMP}/de.cities.* ${TMP}/en.cities.* ${TMP}/local.cities.*
	${MOBILE_LINKS} --local-names=1 --split-city-names=1 --lang=en < ${CITIES_DB} > ${TMP}/mobile.en
	${INDEX_UPDATE} world/web/index.m.html.in > world/web/index.m.html
	${INDEX_UPDATE} world/web/index.de.html.in > world/web/index.de.html
	${INDEX_UPDATE} world/web/index.en.html.in > world/web/index.en.html
	${INDEX_UPDATE} world/web/index.html.in > world/web/index.html


kml:
	world/bin/bbbike-world-kml ${CITIES_DB} > world/web/bbbike-world.kml

bbbike2wgs84:
	./world/bin/bbbike2wgs84

planet-download:
	download_script=`pwd`/world/bin/planet-download; cd ../osm-streetnames/download && $$download_script

planet-geofabrik-download:
	download_script=`pwd`/world/bin/planet-geofabrik-download; \
		cd ../osm-streetnames/download && $$download_script

create-osp:
	rm -rf ${OSP_DIR}
	mkdir ${OSP_DIR}
	./world/bin/bbbike-world-opensearch-plugin ${OSP_DIR} ${CITIES}
	
rsync-tgz:
	rsync -a ${DATA_OSM_BBBIKE_DIR}/ download.bbbike.org:/usr/local/www/download.bbbike.org/bbbike/${DATA_OSM_DIR}

clean: rotate-data-osm
	${MAKE} -C cgi/msg $@	
	${MAKE} -C world/bin $@	
	${MAKE} -C world/cgi $@	
	${MAKE} -C world/web/feed $@	
	rm -f *.bak *.tdy
	cd world/web && rm -rf ${LANGUAGES}
	cd world/web && rm -rf ${CITIES} bbbike
	rm -f ${OSMBIKE_DATA}

clean-cache cache-clean:
	du -hs ${BBBIKE_CACHE_DIR}/
	mkdir -p ${BBBIKE_CACHE_DIR}/www.bbbike.org ${BBBIKE_CACHE_DIR}/localhost
	mkdir -p ${BBBIKE_CACHE_DIR}/tmp.$$$$; \
	    mv -f ${BBBIKE_CACHE_DIR}/*bbbike.org ${BBBIKE_CACHE_DIR}/localhost ${BBBIKE_CACHE_DIR}/tmp.$$$$ || true; \
	    rm -rf ${BBBIKE_CACHE_DIR}/tmp.$$$$ &
	find /var/cache/lighttpd -type f -print0 | ${PERL} -n0e unlink

rotate-data-osm:
	-rm -rf ${DATA_OSM_DIR}.old2
	-rm -rf ${DATA_OSM_BBBIKE_DIR}.old2
	-test -e ${DATA_OSM_DIR}.old && mv ${DATA_OSM_DIR}.old ${DATA_OSM_DIR}.old2
	-test -e ${DATA_OSM_DIR}     && mv ${DATA_OSM_DIR}     ${DATA_OSM_DIR}.old
	-test -e ${DATA_OSM_BBBIKE_DIR}.old && mv ${DATA_OSM_BBBIKE_DIR}.old ${DATA_OSM_BBBIKE_DIR}.old2
	-test -e ${DATA_OSM_BBBIKE_DIR}     && mv ${DATA_OSM_BBBIKE_DIR}     ${DATA_OSM_BBBIKE_DIR}.old
	mkdir ${DATA_OSM_DIR} ${DATA_OSM_BBBIKE_DIR}
	touch ${DATA_OSM_DIR}/.touch ${DATA_OSM_BBBIKE_DIR}/.touch

rotate-osm:
	rm -rf ${OSM_DIR}.old2
	-test -e ${OSM_DIR}.old  && mv ${OSM_DIR}.old  ${OSM_DIR}.old2
	-test -e ${OSM_DIR}      && mv ${OSM_DIR}      ${OSM_DIR}.old 

update-database: build-runtime
	${TIME} ./world/bin/update-database

PERL_SCRIPTS=	BBBikeGooglemap.pm BBBikeElevation.pm miscsrc/osm2bbd-poi t/elevation.t
_perltidy:
	echo ${PERL_SCRIPTS} | ${XARGS} -n1 -P${MAX_VCPU} -E " " ${PERL} -cw 
	echo ${PERL_SCRIPTS} | ${XARGS} -n2 -P${MAX_VCPU} -E " " perltidy -b

perltidy:
	${MAKE} _perltidy
	${MAKE} -C cgi/msg $@	
	${MAKE} -C world/bin $@	
	${MAKE} -C world/cgi $@	
	${MAKE} -C world/web/feed $@	

jsbeautifier js:
	${MAKE} -C html $@

tidy:
	tidy -i -m -w 128 world/web/help.html

create-sitemap:
	${MAKE} -C world/sitemap bbbike-org

sync-sitemap: create-sitemap
	rsync -a world/web/sitemap.xml.gz ${BBBIKE_SERVER}${BBBIKE_WEBSERVER_DIR}/world/web

update-files: kml create-osp index update-robots.txt create-bbbike-web-symlinks java-config #create-sitemap

java-config:
	test -r $$HOME/.osmosis || ln -fs $$HOME/projects/bbbike/world/etc/.osmosis $$HOME/.osmosis

dist-clean devel-clean distclean: clean rotate-osm
	rm -rf ${OSM_DIR}
	mkdir -p ${OSM_DIR}

clean-planet:
	rm -f ../osm-streetnames/download/*.old.*

elevation-check:
	${NICE} ${ELEVATION_SCRIPT} --database=../osm-streetnames/srtm/elevation.db --check

elevation-repair:
	${NICE} ${ELEVATION_SCRIPT} --database=../osm-streetnames/srtm/elevation.db --repair-database

elevation-fetch:
	${NICE} ${ELEVATION_SCRIPT} --database=../osm-streetnames/srtm/elevation.db --debug=1 --geonames-user=bbbikeworld ${CITIES}

elevation-update:
	echo ${CITIES} | ${XARGS} -E " " -n16 -P2 ${ELEVATION_SCRIPT} --readonly-database --database=../osm-streetnames/srtm/elevation.db --debug=0

# re-build cache
cache-heater: cache-heater-streets cache-heater-common 

cache-heater-common: 
	du -hs ${BBBIKE_CACHE_DIR}/* || du -hs ${BBBIKE_CACHE_DIR}/
	curl -sS 'http://www.bbbike.org/cgi/livesearch.cgi?ns=cache;max='${CACHE_HEATER_MAX} | \
		${PERL} -npe 's/\n/\0/g' | \
		${XARGS} -0 -n1 -P${MAX_CPU} curl -sS >/dev/null
	du -hs ${BBBIKE_CACHE_DIR}/*

cache-heater-full:
	${MAKE} -f Makefile.osm CACHE_HEATER_MAX=300 cache-heater

cache-heater-streets: cache-heater-homepage cache-heater-opensearch
	echo ${CITIES} | ${PERL} -npe 's/ /\n/g' | \
		${PERL} -npe 'chomp; $$_ = "http://www.bbbike.org/$$_/streets.html\0http://www.bbbike.org/en/$$_/streets.html\0"' | \
		${XARGS} -0 -n1 -P${MAX_CPU} curl -sS >/dev/null

cache-heater-homepage: cache-heater-osp
	echo ${CITIES} | ${PERL} -npe 's/ /\n/g' | \
		${PERL} -npe 'chomp; $$_ = "http://www.bbbike.org/$$_/\0http://www.bbbike.org/en/$$_/\0http://www.bbbike.org/m/$$_/\0"' | \
		${XARGS} -0 -n1 -P${MAX_CPU} curl -sS >/dev/null

cache-heater-osp:
	find osp -name '*.xml' -print0 | perl -n0e 'print qq{http://www.bbbike.org/$$_}' | \
		${XARGS} -0 -n1 -P${MAX_CPU} curl -sS >/dev/null

cache-heater-opensearch:
	cat ${BBBIKE_WEBSERVER_DIR}/data-osm/*/opensearch.streetnames | wc -c >/dev/null

varnish-purge-all:
	./world/bin/varnish-purge-all

symlink-download:
	cd ${BBBIKE_WEBSERVER_DIR}/../download.bbbike.org; \
	  ln -fs ../bbbike.org/world/download/favicon.ico . ; \
	  ln -fs ../bbbike.org/world/download/index.html  . ; \
	  ln -fs ../bbbike.org/world/web/robots-download.txt robots.txt ; \
	  cd osm; ln -fs ../../bbbike.org/world/download/osm/index.html  .

help:
	@echo "bbbike version: ${GIT_ID}"
	@echo ""
	@echo "usage: make [ targets ... ]"
	@echo ""
	@echo "  [ "`${PERL} -e 'print join " ", sort @ARGV' ${CITIES}` "]"
	@echo ""
	@echo "  [ help | cities | cities-parallel ]"
	@echo "  [ rsync-tgz | rsync-osm | rsync-osm-dev | rsync-planet | symlink-download ]"
	@echo "  [ jsbeautifier | perltidy | tidy ]"
	@echo "  [ bbbike-osm2pbf | osm2pbf ]"
	@echo "  [ clean | dist-clean | clean-cache | clean-planet ]"
	@echo "  [ create-osp | bbbike2wgs84 | update-robots.txt | create-sitemap ]"
	@echo "  [ cache-heater | cache-heater-full | cache-heater-streets ]"
	@echo "  [ create-bbbike-web-symlinks | kml | create-osp | index ]"
	@echo "  [ convert-wgs84 | convert-bbbike | convert-bbbike-full ]"
	@echo "  [ city-count | city-reorder | city-file | check-osm | cleanup-osm-error ]"
	@echo "  [ city-memory | varnish-purge-all ]"
	@echo "  [ elevation-check | elevation-update | elevation-fetch | elevation-repair ]"
	@echo "  [ planet-download | planet-geofabrik-download ]"
	@echo "  [ planet-streets | planet-places ]"
	@echo "  [ update-database | update-files ]"

