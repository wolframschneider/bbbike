###############################################################
# Copyright (c) 2008-2011 Wolfram Schneider, http://bbbike.org
#
# Get and convert OpenStreetMap.org data to BBBike
#
# For more information about BBBike, visit http://www.bbbike.de
#


MAX_PARALLELS_OSM_DOWNLOADS=	2
NICE=		nice -n 15
NICE5=		nice -n 5
PERL=		perl
OSM2BBD_MAPTYPE=	#-map bbbike	
OSM_SOCKS_PROXY=	--socksproxy=socks://localhost:1080
OSM_TIMEOUT=	--timeout=45
DOWNLOADOSM_URL=	--osm-api-url=http://www.informationfreeway.org/api/0.6
DOWNLOADOSM=	${PERL} ./miscsrc/downloadosm --debug=1 ${OSM_SOCKS_PROXY} ${OSM_TIMEOUT} ${DOWNLOADOSM_URL}
OSM2BBD=	${PERL} ./miscsrc/osm2bbd -f --debug=0 ${OSM2BBD_MAPTYPE} -ignore-unhandled -ignore-underline -experiment add_postal_code #-experiment polar_coord_hack
MAX_CPU=	`world/bin/ncpu`
MAX_CPU2=	`world/bin/ncpu -1`
GXARGS=		${NICE} `which gxargs xargs | head -1`
BBBIKE_WEB_DIR= ./
OSM_DIR=	osm
OSP_DIR=	osp
DATA_OSM_DIR=	data-osm
DATA_OSM_BBBIKE_DIR=	data-osm.bbbike
OSMBIKE_DATA=	${DATA_OSM_BBBIKE_DIR}.tgz
DATA_DIR=	data
BBBIKE_CACHE_DIR=	/var/cache/bbbike
MAX_OSMOSIS=	${MAX_CPU}

GZIP:=             $(shell which pigz gzip | head -1)
BZIP2:=            $(shell which pbzip2 bzip2 | head -1)

CITIES=		\
	Bogota \
	Paris \
	Berlin \
	Dortmund \
	WashingtonDC \
	Moscow \
	Hamburg \
	Toronto \
	Muenchen \
	Prag \
	CambridgeMa \
	Duisburg \
	Marseille \
	Bochum \
	Birmingham \
	Frankfurt \
	Copenhagen \
	Orlando \
	Albuquerque \
	Strassburg \
	Sydney \
	Mannheim \
	London \
	Liverpool \
	Duesseldorf \
	Amsterdam \
	Stettin \
	Manchester \
	Denver \
	Perth \
	Dresden \
	Leeds \
	Bonn \
	SanJose \
	Wien \
	Rotterdam \
	Melbourne \
	Nuernberg \
	Brisbane \
	Koeln \
	DenHaag \
	Groningen \
	Ottawa \
	Philadelphia \
	Glasgow \
	SanktPetersburg \
	Helsinki \
	Darmstadt \
	Adelaide \
	Sacramento \
	CapeTown \
	Rostock \
	Hannover \
	Tokyo \
	Warschau \
	Genf \
	Bern \
	Leipzig \
	Santiago \
	Mainz \
	Zuerich \
	Canberra \
	Montreal \
	Bremen \
	Reval \
	Edinburgh \
	Auckland \
	Karlsruhe \
	Bamberg \
	Aarhus \
	Ruegen \
	Portland \
	Stockholm \
	Bielefeld \
	RiodeJaneiro \
	SanFrancisco \
	PaloAlto \
	Sheffield \
	Bruessel \
	Bristol \
	Vancouver \
	Breslau \
	Colmar \
	Johannesburg \
	Saigon \
	Victoria \
	Aachen \
	Seattle \
	Madison \
	Freiburg \
	MexicoCity \
	Erlangen \
	Kassel \
	Dublin \
	Kiel \
	Tuscon \
	Zagreb \
	Kiew \
	Goettingen \
	Cottbus \
	Budapest \
	Oldenburg \
	Providence \
	Seoul \
	NewYork \
	Magdeburg \
	SantaCruz \
	Luebeck \
	Halifax \
	Trondheim \
	Cairo \
	Chemnitz \
	Barcelona \
	Singapore \
	BuenosAires \
	Baghdad \
	Sofia \
	Chicago \
	Jena \
	Riga \
	Posen \
	Lissabon \
	SantaBarbara \
	Basel \
	Miami \
	Beijing \
	FortCollins \
	Erfurt \
	Cambridge \
	Kattowitz \
	Danzig \
	Istanbul \
	Oslo \
	Muenster \
	Tehran \
	Krakau \
	Boulder \
	Bangkok \
	Eugene \
	Laibach \
	Turin \
	Jerusalem \
	Austin \
	Gleiwitz \
	Davis \
	Beirut \
	BrandenburgHavel \
	Kaunas \
	Goerlitz \
	FrankfurtOder \
	Sarajewo \
	Corvallis \
	WarenMueritz \
	PhnomPenh \
	CraterLake \
	Baku \
	UlanBator \

#
# opensearch suggestion service for
# the world:
# 
OSM_AREAS_OPENSEARCH=data-opensearch-places
OSM_PLANET=	../osm-streetnames/download/planet-latest.osm.bz2 
OSM_PLANET_PBF=	../osm-streetnames/download/planet-latest.osm.pbf

OSM_AREAS_LARGE=	${OSM_PLANET}

OSM_AREAS= \
	../osm-streetnames/download/geofabrik/europe/germany.osm.bz2 \
	${OSM_AREAS_LARGE} \
	../osm-streetnames/download/geofabrik/australia-oceania.osm.bz2 \
	../osm-streetnames/download/geofabrik/south-america.osm.bz2 \
	../osm-streetnames/download/geofabrik/africa.osm.bz2 \
	../osm-streetnames/download/geofabrik/central-america.osm.bz2 \
	../osm-streetnames/download/geofabrik/europe.osm.bz2 \

# for tests only
OSM_AREAS2= \
	../osm-streetnames/download/geofabrik/europe/germany/baden-wuerttemberg.osm.bz2 \
	../osm-streetnames/download/geofabrik/europe/germany/bayern.osm.bz2 \
	../osm-streetnames/download/geofabrik/europe/germany/berlin.osm.bz2 \
	../osm-streetnames/download/geofabrik/europe/germany/brandenburg.osm.bz2 \
	../osm-streetnames/download/geofabrik/europe/germany/bremen.osm.bz2 

OSM_AREAS3= \
	${OSM_AREAS_LARGE} \


all: help

build-runtime-perl:
	world/bin/bbbike-build-runtime-perl.pl

convert-wgs84: build-runtime-perl convert create-osp bbbike2wgs84

convert-bbbike: build-runtime-perl
	${MAKE} -f Makefile.osm DATA_OSM_DIR=${DATA_OSM_BBBIKE_DIR} OSM2BBD_MAPTYPE="-map bbbike" convert
	rm -f ${DATA_OSM_BBBIKE_DIR}/*/opensearch-suggestion
	${MAKE} -f Makefile.osm DATA_OSM_DIR=${DATA_OSM_BBBIKE_DIR} _tarball

_tarball:
	tar cf - ${DATA_OSM_BBBIKE_DIR} | ${GZIP} > ${OSMBIKE_DATA}.tmp
	mv -f ${OSMBIKE_DATA}.tmp ${OSMBIKE_DATA}
	mkdir -p ../bbbike-macos/download
	cp -f ${OSMBIKE_DATA} ../bbbike-macos/download
	tar cf - ${DATA_DIR} | ${BZIP2} > ${DATA_DIR}.tbz.tmp
	mv -f ${DATA_DIR}.tbz.tmp ${DATA_DIR}.tbz

cities-api:
	@for i in `perl -e 'print "x " x 2'`; do ${MAKE} -f Makefile.osm _cities; done
	${MAKE} -f Makefile.osm cleanup-osm-error
	${MAKE} -f Makefile.osm _cities_complete
	${MAKE} -f Makefile.osm check-osm

#  completeWays=no completeRelations=no
_osmosis_opt:
	for i in ${CITIES}; do printf " --bp file=${OSM_DIR}/$$i/$$i.poly --wx file=${OSM_DIR}/$$i/$$i.osm.gz"; done

cities-poly cities: poly
	${NICE5} ${BZIP2} -dc ${OSM_PLANET} | ${NICE5} osmosis --rx enableDateParsing=no /dev/stdin --buffer bufferCapacity=2000 --tee `${MAKE} -s -f Makefile.osm city-count` `${MAKE} -s -f Makefile.osm _osmosis_opt`

cities-pbf: poly
	${NICE5} osmosis --read-pbf ${OSM_PLANET_PBF} --buffer bufferCapacity=2000 --tee `${MAKE} -s -f Makefile.osm city-count` `${MAKE} -s -f Makefile.osm _osmosis_opt`

cities-parallel:
	@echo ${CITIES} | perl -npe 's/\s+/\n/g' | ./world/bin/cities-parallel ${MAX_OSMOSIS} cities-pbf | sh

_cities:
	@echo ${CITIES} | \
		perl -npe 's/\s+/-download /g' | \
		xargs -n 1 -P ${MAX_PARALLELS_OSM_DOWNLOADS} ${MAKE} -f Makefile.osm

_cities_complete:
	${MAKE} -f Makefile.osm OSM_TIMEOUT="--timeout=300" `echo ${CITIES} | perl -npe 's/\s+/-download /g'`
poly:
	${MAKE} -j ${MAX_CPU} -f Makefile.osm `echo ${CITIES} | perl -npe 's/\s+/-poly /g'`

city-count:
	@echo ${CITIES}  | wc -w

city-reorder:
	@cd ${OSM_DIR}; du -ks * | sort -nr

update-robots.txt:
	( cat world/web/robots.txt.in; \
	   echo ${CITIES} | perl -npe 's,\s+,\n,g' | sort | \
	   perl -ne 'chomp; s,^,Disallow: /,; print "$$_/index\n$$_/?\n" '; ) > world/web/robots.txt

# using GNU xargs -P parallel
osm-areas2:
	#rm -rf ${OSM_AREAS_OPENSEARCH}.old
	#if test -e ${OSM_AREAS_OPENSEARCH}; then mv ${OSM_AREAS_OPENSEARCH} ${OSM_AREAS_OPENSEARCH}.old; fi
	mkdir -p ${OSM_AREAS_OPENSEARCH}
	cd ${OSM_AREAS_OPENSEARCH} && mkdir -p `echo ${OSM_AREAS} | perl -npe 's/\.osm\.bz2//g'`
	echo ${OSM_AREAS} " " | \
	  perl -ne 'chomp; foreach (split) { print qq{PATH=\$$PATH:`pwd`/world/bin world/bin/osm2suggestions ../osm/download/$$_ '${OSM_AREAS_OPENSEARCH}'/$$_\0} }' | \
	  ${GXARGS} -0 -n1 -P${MAX_CPU2} sh -c

# faster than planet-streets
planet-places:
	@mkdir -p ${OSM_AREAS_OPENSEARCH}
	@PATH=$$PATH:`pwd`/world/bin; \
	for i in ${OSM_AREAS}; do \
		printf "./world/bin/planet-places-suggestions ${OSM_AREAS_OPENSEARCH}/`basename $$i .osm.bz2`-places $$i\0"; \
	done | ${GXARGS} -0 -n1 -P${MAX_CPU2} sh -c

planet-streets:
	@mkdir -p ${OSM_AREAS_OPENSEARCH}
	@PATH=$$PATH:`pwd`/world/bin; \
	for i in ${OSM_AREAS}; do \
		printf "./world/bin/planet-streets-suggestions ${OSM_AREAS_OPENSEARCH}/`basename $$i .osm.bz2` $$i\0"; \
	done | ${GXARGS} -0 -n1 -P${MAX_CPU2} sh -c

##########################################################################################
# check if the downloaded OSM files are valid
#
check-osm: check-osm-gzip check-osm-error

check-osm-gzip:
	@find ${OSM_DIR} -name '*.gz' -print0 | ${GXARGS} -0 -n32 -P${MAX_CPU} gzip -t

check-osm-error:
	@find ${OSM_DIR} -name '*.gz' -print0 | ${GXARGS} -0 -n32 -P${MAX_CPU} zegrep -l '<error>' || true

cleanup-osm-error:
	${MAKE} -f Makefile.osm check-osm 2>&1 | grep ^gzip | awk '{ print $$2 }' | perl -npe 's,:,,' | sort -u | xargs rm -f
	@find ${OSM_DIR} -name '*.gz' -print0 | ${GXARGS} -0 -n32 -P${MAX_CPU} zegrep -l '<error>' | xargs rm -f


convert: _convert convert-workarounds
# using GNU xargs -P parallel
_convert:
	rm -rf ${DATA_OSM_DIR}.old
	if test -e ${DATA_OSM_DIR}; then mv ${DATA_OSM_DIR} ${DATA_OSM_DIR}.old;  fi
	mkdir -p ${DATA_OSM_DIR}
	echo ${CITIES} " " | perl -npe 's/\s+/-convert /g' | \
	   ${GXARGS} -n 1 -P ${MAX_CPU} ${MAKE} -f Makefile.osm

check:
	for i in ${CITIES}; do echo ${DATA_OSM_DIR}/$$i; done | \
	  ${GXARGS} -n 1 -P ${MAX_CPU} ./miscsrc/check_bbd --debug=0 -dir

convert-workarounds: opensearch-bbbike

osm2bbd-workarounds opensearch:
	for i in ${CITIES}; do echo $$i; done | \
	  ${GXARGS} -n 1 -P ${MAX_CPU} world/bin/osm2bbd-workarounds ${DATA_OSM_DIR}

opensearch-bbbike:
	world/bin/opensearch-suggestion --gps=0 --input-charset=iso-8859-1 < data/strassen > data/opensearch.streetnames

_c = ${CITIES}
_cd = $(_c:=-download)
_cc = $(_c:=-convert)
_cp = $(_c:=-poly)

DB=world/bin/bbbike-db

$(_cd):
	c=`basename $@ -download`; mkdir -p ${OSM_DIR}/$$c; \
		${DOWNLOADOSM} --step=`${DB} --step $$c` -o ${OSM_DIR}/$$c -- `${DB} --coord $$c`

$(_cc):
	c=`basename $@ -convert`; \
		rm -rf ${DATA_OSM_DIR}/$$c; \
		${OSM2BBD} -lang `${DB} --lang $$c` -o ${DATA_OSM_DIR}/$$c ${OSM_DIR}/$$c; \
		world/bin/osm2bbd-workarounds ${DATA_OSM_DIR} $$c; \
		world/bin/osm2bbd-workarounds-streets ${DATA_OSM_DIR} $$c

$(_cp):
	@c=`basename $@ -poly`; mkdir -p ${OSM_DIR}/$$c; ${DB} --poly $$c > ${OSM_DIR}/$$c/$$c.poly.tmp; mv -f ${OSM_DIR}/$$c/$$c.poly.tmp ${OSM_DIR}/$$c/$$c.poly

${CITIES}:
	${MAKE} -f Makefile.osm $@-download $@-convert
	
######################################################################
rsync-osm:
	rsync -azv --exclude='*.bak' --delete --max-delete=512 ${DATA_OSM_DIR} ${OSM_AREAS_OPENSEARCH} ${OSM_DIR} ${OSP_DIR} bbbike.org:/usr/local/www/bbbike.org
	rsync -azv --exclude='*.bak' data/opensearch.streetnames bbbike.org:/usr/local/www/bbbike.org/data
	@echo ""
	@echo "don't forget to cleanup the data cache in ${BBBIKE_CACHE_DIR}, run:"
	@echo "$$ sudo make clean-cache"

rsync-osm-devel rsync-osm-dev:
	rsync -azv --delete --max-delete=512 bbbike.org:projects/bbbike/osm .


create-bbbike-web-symlinks-old:
	cd ${BBBIKE_WEB_DIR}/cgi && \
	for city in ${CITIES} berlin; do \
		ln -fs world.cgi $$city.cgi; \
		ln -fs world.cgi $$city.en.cgi; \
		ln -fs world.cgi.config $$city.cgi.config; \
	done
	ln -fs world/web/index.html ${BBBIKE_WEB_DIR}
	ln -fs world/web/index.de.html ${BBBIKE_WEB_DIR}
	ln -fs world/web/index.m.html ${BBBIKE_WEB_DIR}
	ln -fs world/web/doc.html ${BBBIKE_WEB_DIR}
	ln -fs world/web/community.html ${BBBIKE_WEB_DIR}
	ln -fs world/web/community.de.html ${BBBIKE_WEB_DIR}
	ln -fs world/web/app.html ${BBBIKE_WEB_DIR}
	ln -fs world/web/bbbike-world.kml ${BBBIKE_WEB_DIR}
	ln -fs world/web/streets.html ${BBBIKE_WEB_DIR}
	ln -fs world/Makefile.osm ${BBBIKE_WEB_DIR}
	ln -fs Makefile.osm Makefile
	ln -fs ../world/etc/world.cgi.config ${BBBIKE_WEB_DIR}/cgi
	ln -fs ../world/bin/world.cgi ${BBBIKE_WEB_DIR}/cgi
	ln -fs ../world/bin/streets.cgi ${BBBIKE_WEB_DIR}/cgi
	ln -fs images/srtbike.ico favicon.ico # buggy browsers

create-bbbike-web-symlinks-bbbike.en.cgi:
	cd ${BBBIKE_WEB_DIR}/cgi && ln -fs bbbike.cgi bbbike.en.cgi

create-bbbike-web-symlinks: create-bbbike-web-symlinks-bbbike.en.cgi
	ln -fs world/Makefile.osm ${BBBIKE_WEB_DIR}
	ln -fs Makefile.osm Makefile
	cd world/web; \
	  for i in images html cgi osm data-osm; do \
	    ln -fs ../../$$i .; \
	  done; \
	  ln -fs images/srtbike.ico favicon.ico # buggy browsers
	cd world/web && \
	for city in ${CITIES} berlin; do \
		( rm -rf $$city; mkdir -p $$city; cd $$city; \
		ln -fs ../../bin/world.cgi index.cgi; \
		ln -fs ../../bin/world.cgi index.en.cgi; \
		ln -fs ../../etc/world.cgi.config index.cgi.config; \
		); \
	done
	rm -f world/web/*/lang*
	for city in ${CITIES} berlin; do \
		touch world/web/$$city/lang.`world/bin/bbbike-db --lang $$city`; \
	done


TAGCLOUD=	world/bin/tagcloud 
MOBILE_LINKS=	world/bin/mobile-links 
INDEX_UPDATE=	world/bin/index-update 
CITIES_DB=	world/etc/cities.csv

tagcloud index:
	${TAGCLOUD} --area=de < ${CITIES_DB} | egrep -iv Berlin > tmp/de.cities.de
	${TAGCLOUD} --area=eu < ${CITIES_DB} > tmp/de.cities.eu
	${TAGCLOUD} --area=other --level=9 < ${CITIES_DB} > tmp/de.cities.other
	${TAGCLOUD} --lang=en --area=de < ${CITIES_DB} | egrep -iv Berlin > tmp/en.cities.de
	${TAGCLOUD} --lang=en --area=eu < ${CITIES_DB} > tmp/en.cities.eu
	${TAGCLOUD} --lang=en --area=other --level=9 < ${CITIES_DB} > tmp/en.cities.other
	perl -i -npe 's,( href="cgi/([^\.]+)(\.en)?.cgi"), class="C_$$2"$$1,g' tmp/de.cities.* tmp/en.cities.*
	${MOBILE_LINKS} --split-city-names=1 --lang=de < ${CITIES_DB} > tmp/mobile.de
	${MOBILE_LINKS} --local-names=1 --split-city-names=1 --lang=en < ${CITIES_DB} > tmp/mobile.en
	${INDEX_UPDATE} world/web/index.m.html.in > world/web/index.m.html
	${INDEX_UPDATE} world/web/index.de.html.in > world/web/index.de.html
	${INDEX_UPDATE} world/web/index.html.in > world/web/index.html

kml:
	world/bin/bbbike-world-kml ${CITIES_DB} > world/web/bbbike-world.kml

bbbike2wgs84:
	./world/bin/bbbike2wgs84

planet-download:
	download_script=`pwd`/world/bin/planet-download; cd ../osm-streetnames/download && $$download_script

planet-geofabrik-download:
	download_script=`pwd`/world/bin/planet-geofabrik-download; \
		cd ../osm-streetnames/download && $$download_script

create-osp:
	rm -rf ${OSP_DIR}
	mkdir ${OSP_DIR}
	./world/bin/bbbike-world-opensearch-plugin --streets ${OSP_DIR} world/etc/streets.csv
	./world/bin/bbbike-world-opensearch-plugin ${OSP_DIR} ${CITIES_DB}
	
scp rsync rsync-tgz:
	rsync -av ${OSMBIKE_DATA} wolfram.schneider.org:www/src/bbbike
	rsync -av ${DATA_DIR}.tbz wolfram.schneider.org:www/src/bbbike/${DATA_OSM_DIR}

clean:
	-rm -rf ${DATA_OSM_DIR}.old2
	-rm -rf ${DATA_OSM_BBBIKE_DIR}.old2
	-test -e ${DATA_OSM_DIR}.old && mv ${DATA_OSM_DIR}.old ${DATA_OSM_DIR}.old2
	-test -e ${DATA_OSM_DIR}     && mv ${DATA_OSM_DIR}     ${DATA_OSM_DIR}.old
	-test -e ${DATA_OSM_BBBIKE_DIR}.old && mv ${DATA_OSM_BBBIKE_DIR}.old ${DATA_OSM_BBBIKE_DIR}.old2
	-test -e ${DATA_OSM_BBBIKE_DIR}     && mv ${DATA_OSM_BBBIKE_DIR}     ${DATA_OSM_BBBIKE_DIR}.old
	mkdir ${DATA_OSM_DIR} ${DATA_OSM_BBBIKE_DIR}

clean-cache cache-clean:
	rm -rf ${BBBIKE_CACHE_DIR}/*bbbike.org ${BBBIKE_CACHE_DIR}/localhost	

rotate-osm:
	rm -rf ${OSM_DIR}.old4
	-test -e ${OSM_DIR}.old3 && mv ${OSM_DIR}.old3 ${OSM_DIR}.old4
	-test -e ${OSM_DIR}.old2 && mv ${OSM_DIR}.old2 ${OSM_DIR}.old3
	-test -e ${OSM_DIR}.old  && mv ${OSM_DIR}.old  ${OSM_DIR}.old2
	-test -e ${OSM_DIR}      && mv ${OSM_DIR}      ${OSM_DIR}.old 

update-database: 
	time ./world/bin/update-database

update-files: kml create-osp index update-robots.txt create-bbbike-web-symlinks

dist-clean devel-clean distclean: clean rotate-osm
	rm -rf ${OSM_DIR}
	mkdir -p ${OSM_DIR}

clean-planet:
	rm -f ../osm-streetnames/download/*.old.*

help:
	@echo "usage: make [ help | cities | cities-parallel | rsync-tgz | rsync-osm | rsync-osm-dev ]"
	@echo "            [ clean | dist-clean | clean-cache | clean-planet | create-osp | bbbike2wgs84 ]"
	@echo "            [ create-bbbike-web-symlinks | kml | create-osp | index | update-robots.txt ]"
	@echo "            [ convert-wgs84 | convert-bbbike ]"
	@echo "            [ city-count | city-reorder | check-osm | cleanup-osm-error | bbbike2wgs84 ]"
	@echo "            [ planet-download | planet-geofabrik-download ]"
	@echo "            [ planet-streets | planet-places ]"
	@echo "            [ update-database | update-files ]"
	@echo ""
	@echo "            [ "`perl -e 'print join " ", sort @ARGV' ${CITIES}` "]"

