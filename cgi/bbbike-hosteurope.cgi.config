# -*- mode: perl; cperl-indent-level: 8; -*-

if (0 && $ENV{HTTP_X_FORWARDED_FOR} eq '127.0.0.1') {
	print STDERR "$_: $ENV{$_}" for sort grep { $_ =~ m{^(REMOTE_|QUERY_|HTTP_)} } keys %ENV;
	exit 1;
}

use vars qw($BBBIKE_ROOT);
my $BBBIKE_URL;
my $is_herceg_de = defined $ENV{SERVER_NAME} && $ENV{SERVER_NAME} =~ m{^(bbbike\.hosteurope\.herceg\.de
								       |bbbike\.hosteurope
								       |bbbike\.dyndns\.org
								       )$}x;
my $debian_based; $debian_based = 1 if !$is_herceg_de;
my $APACHE_ROOT;
my $HTDOCS;
$BBBIKE_URL  = "BBBike";
if (-d "/root/work/bbbike-webserver/") { # assume live server
	$APACHE_ROOT = "/root/work/bbbike-webserver";
	$HTDOCS = "public";
} elsif (-d "/home/eserte/work/bbbike-webserver/") { # assume live server @ eserte.bbbike.org
	$APACHE_ROOT = "/home/eserte/work/bbbike-webserver";
	$HTDOCS = "public";
} elsif ($is_herceg_de) {
	$APACHE_ROOT = "/home/e/eserte/src/bbbike/projects/bbbike.de-hosteurope";
	$HTDOCS = "public";
} elsif (-d "/home/eserte/src/bbbike/projects/bbbike.de-hosteurope") { # mosor
	$APACHE_ROOT = "/home/eserte/src/bbbike/projects/bbbike.de-hosteurope";
	$HTDOCS = "public";
} else {
	$APACHE_ROOT = "XXX NOT USED XXX";
	$HTDOCS = "XXX NOT USED XXX";
}
$BBBIKE_ROOT = "$APACHE_ROOT/$BBBIKE_URL" if !defined $BBBIKE_ROOT;

# CONFIG ###########################################################
# Konfigurationsvariablen möglichst in bbbike.cgi.config setzen!

# Die beiden folgenden Variablen müssen geändert werden, die anderen
# bei Bedarf.

# URL für Verzeichnis, in dem die Imagemaps abgelegt werden.
# Sollte oftmals 0777 sein (wenn httpd unter nobody läuft).
$mapdir_url = '/BBBike/tmp';

# ... dazugehöriger Filesystem-Pfad
$mapdir_fs = "$APACHE_ROOT/$HTDOCS/BBBike/tmp";

# Mit ::OLD_AGREP = 1 wird das Verwenden von agrep verhindert
# (stattdessen wird versucht, String::Approx zu verwenden).
# agrep < 3.0 funktioniert nicht korrekt mit Umlauten.
# Auf hosteurope gibt es ein neues agrep; verwende dieses.
#$Strassen::OLD_AGREP = 1;
#$PLZ::OLD_AGREP      = 1;
#$PLZ::OLD_AGREP      = $PLZ::OLD_AGREP; # peacify -w

## im CS-Netz ist $ENV{PATH} beim Ausführen als CGI-Skript leer
## /usr/local ist mindestens auf dem lokalen System notwendig
$ENV{PATH} = '' if !defined $ENV{PATH};
$ENV{PATH} = "/usr/bin:/usr/local/bin:$ENV{PATH}"; # für Sys::Hostname, GD::Convert

# Temporäres Verzeichnis für Cache-Files, Wetterdaten etc.
$tmp_dir = $ENV{TMPDIR} || $ENV{TEMP} || "/tmp";

# Falls Apache::Registry verwendet wird: TRUE, wenn die globalen
# Variablen nach Request-Ende gelöscht werden sollen
$modperl_lowmem = 0;

# Falls überprüft werden soll, ob die Imagemaps gegebüber dem CGI-Programm
# und den Datenfiles noch aktuell sind.
# 0: keine Überprüfung
# 1: Check mit dem strassen-Datenfile
# 2: Check mit dem strassen-Datenfile und dem CGI-Programm
$check_map_time = 1;

# MapServer kann jetzt auch imagemaps erzeugen, aber imagemaps
# sind groß und funktionieren nicht auf allen Browsern so gut.
$create_imagemap = $use_imagemap = 0;
$detailmap_module = "MapServer"; # XXX check!!!

# Zeigt die aktuellen Wetterdaten an.
$show_weather = 1;

# Gibt Links für URLs auf Start/Ziel aus.
$show_start_ziel_url = 1;

# Verwendung des cgi-bin-Layouts, d.h. in cgi-bin ist nur bbbike.cgi, der
# Rest ist in cgi-bin/BBBike
$use_cgi_bin_layout = 1;

# Kommandozeile für das Wetterprogramm
@weather_cmdline = ("$BBBIKE_ROOT/lib/wettermeldung2", qw(-dahlem1));

# Verwendung von <SELECT> statt <INPUT TYPE=RADIO>, wenn möglich
$use_select = 1;

# Experimentell: auch Suche von Landstraßen im Umland
$use_umland = 0;

# For debugging: be verbose
$VERBOSE = 0;

# preferred graphic format: png or gif
# *** If using GD 1.20 or newer, this *must* be set to png, otherwise
# the creation of graphics will not work!
#$graphic_format = 'gif';
$graphic_format = 'png';

$cannot_pdf = 0;
$can_palmdoc = 1;
$can_google_maps = 1;
$can_gpx = 1;
$can_kml = 1;
$can_gpsies_link = 1;

####################################################################

$can_mapserver = 1;

# Mapserver section
$mapserver_dir = "$APACHE_ROOT/$HTDOCS/mapserver/brb";
$mapserver_prog_relurl = "/cgi-bin/mapserv";
if ($is_herceg_de) {
	require Config;
	if ($Config::Config{archname} =~ /amd64/) {
		#$mapserver_prog_url = "http://www/~eserte/cgi/mapserv-amd64.cgi";
		#$mapserver_prog_relurl = "/~eserte/cgi/mapserv-amd64.cgi";
		## The same binary as on radzeit using linux emulation:
	    # XXX please copy mapserv from hosteurope server!
		$mapserver_prog_url = "http://bbbike.hosteurope.herceg.de/cgi-bin/mapserv";
	} else {
		$mapserver_prog_url = "http://www/cgi-bin/mapserv";
	}
} else {
	$mapserver_prog_url = "http://bbbike.de/cgi-bin/mapserv";
#XXX until bbbike.de ist umgezogen
#$mapserver_prog_url = "http://bbbike.lvps83-169-19-137.dedicated.hosteurope.de$mapserver_prog_relurl";
}
$bbd2esri_prog = "$BBBIKE_ROOT/miscsrc/bbd2esri";
if ($is_herceg_de) {
	#$mapserver_bin_dir = "/usr/local/src/mapserver/mapserver-3.6.4";
	require Config;
	if ($Config::Config{archname} =~ /amd64/) {
		$mapserver_bin_dir = "/usr/local/src/work/mapserver-amd64";
	} else {
		$mapserver_bin_dir = "/usr/local/bin";
	}
	#$mapserver_fonts_list = "fonts-vran.list";
	$mapserver_fonts_list = "fonts-biokovo.list";
} else {
	# The directories for mapserv and shp2img
	if ($debian_based || -x "/usr/bin/shp2img") {
		$mapserver_bin_dir = "/usr/bin";
		$mapserver_cgi_bin_dir = "/usr/lib/cgi-bin";
		$mapserver_fonts_list = "fonts-debian.list";
	} else {
		$mapserver_bin_dir = "$APACHE_ROOT/cgi-bin";
		$mapserver_cgi_bin_dir = $mapserver_bin_dir;
		$mapserver_fonts_list = "fonts-radzeit.list";
	}
}

$local_route_dir = "$APACHE_ROOT/$HTDOCS/mapserver/touren";

# for mapserver_comment.cgi
#@MIME_Lite_send = ("smtp", "mail.zrz.tu-berlin.de");
#@MIME_Lite_send = ("smtp", "mittelerde.prz.tu-berlin.de");
@MIME_Lite_send = (); # use sendmail

$bbbike_images = "/$BBBIKE_URL/images";
$bbbike_html = "/$BBBIKE_URL/html";

@Strassen::datadirs = "$BBBIKE_ROOT/data";

$BBBikeDraw::GD::TTF_STREET = "$APACHE_ROOT/$HTDOCS/mapserver/brb/fonts/LucidaSansRegular.ttf";

# Do not use sessions, so I can see search results and image drawings in the
# logfile.
# Unfortunately, MSIE has a low maximum URL length (see http://support.microsoft.com/default.aspx?scid=KB;en-us;q208427), 
# so I'm forced to use sessions. The route data is (for now) stored in
# /tmp/coordssession_..., but I need a better solution.
$use_apache_session = 1;
$apache_session_module = 'Apache::Session::Counted';

# wapbbbike section
$wapbbbike_use_mapserver = 1;

# Otherwise bugs! cgi.t won't run cleanly
$use_exact_streetchooser = 1;

$bbbike_temp_blockings_file = "$BBBIKE_ROOT/data/temp_blockings/bbbike-temp-blockings.pl";

$bbbike_temp_blockings_optimized_file = "$BBBIKE_ROOT/data/temp_blockings/bbbike-temp-blockings-optimized.pl";

# XXX This option may be removed some day:
$use_cooked_street_data = 1;

if (0) {
    my @l = localtime;
    my $m = $l[4]+1;
    $use_winter_optimization = ($m >= 11 || $m <= 3);
    $winter_hardness = 'dry_cold';
}

$use_fragezeichen = 1;

$with_lang_switch = 1;

# sometimes necessary because of htmlproxy:
#$newstreetform_encoding = ".utf8";

# Use slightly larger image:
$use_region_image = 1;

# PDFs are cached and delivered with perlbal's x-reproxy feature
$use_reproxy = 1;

1;
