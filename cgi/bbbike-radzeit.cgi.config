# -*- mode: perl; cperl-indent-level: 8; -*-
my($BBBIKE_URL, $BBBIKE_ROOT);
my $is_herceg_de = defined $ENV{SERVER_NAME} && $ENV{SERVER_NAME} eq 'radzeit.herceg.de';
my $debian_based = defined $ENV{SERVER_NAME} && $ENV{SERVER_NAME} eq 'bbbike2.radzeit.de'; # or check /etc/debian_version?
my $APACHE_ROOT = "/usr/local/apache/radzeit";
my $HTDOCS = "htdocs";
$BBBIKE_URL  = "BBBike";
if ($is_herceg_de) {
	$APACHE_ROOT = "/home/e/eserte/src/bbbike/projects/www.radzeit.de";
	$HTDOCS = "public";
} elsif (-d "/var/www/domains/radzeit.de/www/BBBike/data/") {
	$APACHE_ROOT = "/var/www/domains/radzeit.de/www";
	$HTDOCS = "public";
} elsif ($FindBin::Script =~ /bbbike2/) { # bbbike3.cgi.config is also there
	$BBBIKE_URL  = "BBBike2";
}
$BBBIKE_ROOT = "$APACHE_ROOT/$BBBIKE_URL" if !defined $BBBIKE_ROOT;

# CONFIG ###########################################################
# Konfigurationsvariablen möglichst in bbbike.cgi.config setzen!

# Die beiden folgenden Variablen müssen geändert werden, die anderen
# bei Bedarf.

# URL für Verzeichnis, in dem die Imagemaps abgelegt werden.
# Sollte oftmals 0777 sein (wenn httpd unter nobody läuft).
$mapdir_url = '/BBBike/tmp';

# ... dazugehöriger Filesystem-Pfad
$mapdir_fs = "$APACHE_ROOT/$HTDOCS/BBBike/tmp";

# Mit ::OLD_AGREP = 1 wird das Verwenden von agrep verhindert
# (stattdessen wird versucht, String::Approx zu verwenden).
# agrep < 3.0 funktioniert nicht korrekt mit Umlauten.
# Auf radzeit ist agrep nicht installiert; dort wird immer
# String::Approx verwendet.
$Strassen::OLD_AGREP = 1;
$PLZ::OLD_AGREP      = 1;
$PLZ::OLD_AGREP      = $PLZ::OLD_AGREP; # peacify -w

# im CS-Netz ist $ENV{PATH} beim Ausführen als CGI-Skript leer
$ENV{PATH} = '' if !defined $ENV{PATH};
$ENV{PATH} = "/usr/bin:/usr/local/bin:$ENV{PATH}"; # für Sys::Hostname, GD::Convert

# Temporäres Verzeichnis für Cache-Files, Wetterdaten etc.
$tmp_dir = $ENV{TMPDIR} || $ENV{TEMP} || "/tmp";

# TRUE, wenn der Miniserver verwendet werden soll
$use_miniserver = 0;

# Miniserver: Anzahl der maximal gleichzeitig laufenden Prozesse
$max_proc = 2;

# TRUE, wenn bei zu vielen MiniSvr-Prozessen automatisch auf das langsamere
# Interface geschaltet werden soll
$auto_switch_slow = 1;

# Falls Apache::Registry verwendet wird: TRUE, wenn die globalen
# Variablen nach Request-Ende gelöscht werden sollen
$modperl_lowmem = 0;

# Falls überprüft werden soll, ob die Imagemaps gegebüber dem CGI-Programm
# und den Datenfiles noch aktuell sind.
# 0: keine Überprüfung
# 1: Check mit dem strassen-Datenfile
# 2: Check mit dem strassen-Datenfile und dem CGI-Programm
$check_map_time = 1;

# MapServer kann jetzt auch imagemaps erzeugen, aber imagemaps
# sind groß und funktionieren nicht auf allen Browsern so gut.
$create_imagemap = $use_imagemap = 0;
$detailmap_module = "MapServer"; # XXX check!!!

# Zeigt die aktuellen Wetterdaten an.
$show_weather = 1;

# Gibt Links für URLs auf Start/Ziel aus.
$show_start_ziel_url = 1;

# Verwendung des cgi-bin-Layouts, d.h. in cgi-bin ist nur bbbike.cgi, der
# Rest ist in cgi-bin/BBBike
$use_cgi_bin_layout = 1;

# Kommandozeile für das Wetterprogramm
@weather_cmdline = ("$BBBIKE_ROOT/lib/wettermeldung2", qw(-dahlem1));

# Verwendung von <SELECT> statt <INPUT TYPE=RADIO>, wenn möglich
$use_select = 1;

# Experimentell: auch Suche von Landstraßen im Umland
$use_umland = 0;

# For debugging: be verbose
$VERBOSE = 0;

# preferred graphic format: png or gif
# *** If using GD 1.20 or newer, this *must* be set to png, otherwise
# the creation of graphics will not work!
#$graphic_format = 'gif';
$graphic_format = 'png';

$cannot_pdf = 0;
$can_palmdoc = 1;
$can_berliner_stadtplan_post = 1;
$can_google_maps = 1;
$can_gpx = 1;

####################################################################

$can_mapserver = 1;

# Mapserver section
$mapserver_dir = "$APACHE_ROOT/$HTDOCS/mapserver/brb";
$mapserver_prog_relurl = "/cgi-bin/mapserv";
if ($is_herceg_de) {
	#$mapserver_prog_url = "http://radzeit.herceg.de/cgi-bin/mapserv";
	require Config;
	if ($Config::Config{archname} =~ /amd64/) {
		$mapserver_prog_url = "http://www/~eserte/cgi/mapserv-amd64.cgi";
		$mapserver_prog_relurl = "/~eserte/cgi/mapserv-amd64.cgi";
	} else {
		$mapserver_prog_url = "http://www/cgi-bin/mapserv";
	}
} else {
	$mapserver_prog_url = "http://bbbike.radzeit.de/cgi-bin/mapserv";
}
$bbd2esri_prog = "$BBBIKE_ROOT/miscsrc/bbd2esri";
if ($is_herceg_de) {
	#$mapserver_bin_dir = "/usr/local/src/mapserver/mapserver-3.6.4";
	require Config;
	if ($Config::Config{archname} =~ /amd64/) {
		$mapserver_bin_dir = "/usr/local/src/work/mapserver-amd64";
	} else {
		$mapserver_bin_dir = "/usr/local/bin";
	}
	#$mapserver_fonts_list = "fonts-vran.list";
	#$mapserver_fonts_list = "fonts-biokovo.list";
} else {
	# The directories for mapserv and shp2img
	if ($debian_based) {
		$mapserver_bin_dir = "/usr/bin";
		$mapserver_cgi_bin_dir = "/usr/lib/cgi-bin";
	} else {
		$mapserver_bin_dir = "$APACHE_ROOT/cgi-bin";
		$mapserver_cgi_bin_dir = $mapserver_bin_dir;
	}
	$mapserver_fonts_list = "fonts-radzeit.list";
}

$local_route_dir = "$APACHE_ROOT/$HTDOCS/mapserver/touren";

# for mapserver_comment.cgi
#@MIME_Lite_send = ("smtp", "mail.zrz.tu-berlin.de");
#@MIME_Lite_send = ("smtp", "mittelerde.prz.tu-berlin.de");
@MIME_Lite_send = (); # use sendmail

$bbbike_images = "/$BBBIKE_URL/images";
$bbbike_html = "/$BBBIKE_URL/html";

@Strassen::datadirs = "$BBBIKE_ROOT/data";

$BBBikeDraw::GD::TTF_STREET = "$APACHE_ROOT/$HTDOCS/mapserver/brb/fonts/LucidaSansRegular.ttf";

# Do not use sessions, so I can see search results and image drawings in the
# logfile.
# Unfortunately, MSIE has a low maximum URL length (see http://support.microsoft.com/default.aspx?scid=KB;en-us;q208427), 
# so I'm forced to use sessions. The route data is (for now) stored in
# /tmp/coordssession_..., but I need a better solution.
$use_apache_session = 1;
$apache_session_module = 'Apache::Session::Counted';

# wapbbbike section
#$wapbbbike_use_mapserver = 1;
$wapbbbike_use_mapserver = 0; # XXX problems!!!

# Otherwise bugs! cgi.t won't run cleanly
$use_exact_streetchooser = 1;

$bbbike_temp_blockings_file = "$BBBIKE_ROOT/data/temp_blockings/bbbike-temp-blockings.pl";

$bbbike_temp_blockings_optimized_file = "$BBBIKE_ROOT/data/temp_blockings/bbbike-temp-blockings-optimized.pl";

# XXX This option may be removed some day:
$use_cooked_street_data = 1;

if (0) {
    my @l = localtime;
    my $m = $l[4]+1;
    $use_winter_optimization = ($m >= 11 || $m <= 3);
}

$use_fragezeichen = 1;

$with_lang_switch = 1;

# sometimes necessary because of htmlproxy:
#$newstreetform_encoding = ".utf8";

# Use slightly larger image:
# $use_region_image = 1; # XXX not yet: I think the crossing names should be nicer, i.e. preferring place names over crossing names

1;
