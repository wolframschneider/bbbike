type: map
mapping:

  Route:
    # The textual route description
    type: seq
    sequence:
      - type: map
        mapping:

          Angle:
            # The angle for direction changes. May be undef if it does not apply,
            # otherwise a numeric degree value
            type: any

          DirectionHtml:
            # The direction as human readable text, HTML-formatted.
            # Language matches the specified URL. Applies only to
            # the first point, and the last one contains the string
            # "angekommen"
            type: text

          DirectionString:
            # Like DirectionHtml, but as plain text
            type: text

          Direction:
            # The initial geographic direction (for start point)
            # or the left/right specification
            type: text
            enum:
            # Initial geographic direction
              - N
              - NE
              - E
              - SE
              - S
              - SW
              - W
              - NW
            # left/right
              - '' # straight forward
              - l  # left
              - hl # half left
              - r  # right
              - hr # half right
              - u  # tUrn (umdrehen/umkehren)

          DistString:
            # Length of this leg as human readable text, may contain a unit.
            type: text

          Dist:
            # Length of this leg in meters.
            type: number

          TotalDistString:
            # The total distance until this hop as human readable text, may contain a unit.
            type: text

          TotalDist:
            # The total distance until this hop in meters.
            type: number

          CommentHtml:
            # Comments for this leg (e.g. cycle routes at this leg, surface description,
            # other handicap...), as HTML-formatted text. May contain hyperlinks.
            type: text

          Comment:
            # Like CommentHtml, but as plain text.
            type: text

          Strname:
            # Name of street
            type: text

          PathIndex:
            # Start index (zero based) of this leg in the LongLatPath structure
            type: int

          ImportantAngleCrossingName:
            # XXX Description missing
            # XXX May be a text or undef
            type: any

          FragezeichenComment:
            # XXX Description missing
            type: text

          LongLatCoord:
            # start of this hop as a longitude,latitude coordinate
            type: text
            pattern: /^-?\d+(\.\d+)?,-?\d+(\.\d+)?$/

          Coord:
            # XXX Description missing
            type: text

  Len:
    # Total length in meters
    type: number

  LongLatPath:
    # A list of longitude,latitude coordinates of the route.
    type: seq
    sequence:
      - type: text
        pattern: /^-?\d+(\.\d+)?,-?\d+(\.\d+)?$/

  Trafficlights:
    # Number of traffic lights on route
    # Warning: only meaningful with original bbbike data,
    # but not yet with derived OSM data
    type: int

  AffectingBlockings:
    # A list of temporary "blockings" on the current route
    # which may affect a user in different ways (complete
    # blocked street, a street where a user has to ride
    # slower...). Typically these items should be
    # presented to the user and s/he can decide whether
    # to ride around it or not. The index of the entries
    # has to be fed as a "temp_blockings" parameter to
    # a new API call.
    type: seq
    sequence:
      - type: map
        mapping:

          Text:
            # descriptive text of these blocking; may be
            # presented to the user
            type: text

          Index:
            # index of this entry; may be used as a
            # "custom=temp_blockings-$index" parameter
            # in a new API call
            type: text

          Type:
            # XXX Description missing
            type: any
            enum:
              - gesperrt
              - handicap
              - ~

          LongLatHop:
            # the blocking item, as a list of longitude,latitude coordinates
            # XXX currently only the 1st and 2nd coordinate is returned, this
            # means, only the _beginning_ of the blocking entry may be displayed
            type: map
            mapping:
              XY:
                type: seq
                sequence:
                  - type: text
                    pattern: /^-?\d+(\.\d+)?,-?\d+(\.\d+)?$/

          Recurring:
            # XXX Description missing
            type: int
            enum:
              - 0
              - 1
  Speed:
    type: map
    mapping:

      # key is speed in km/h, typically there are at least entries for 10, 15, 20, and 25 km/h, and additionally the preferred speed
      =:
        type: map
        mapping:

          Time:
          # time is in hours
            type: float

          Pref:
          # true, if this entry is the preferred speed
            type: text
            enum: ["", "1"]

  Session:
    # XXX Description missing
    type: text

  Path:
    # XXX Description missing
    type: any

  Power:
    # XXX Description missing
    type: any
